(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    451683,       8378]
NotebookOptionsPosition[    448514,       8267]
NotebookOutlinePosition[    448916,       8284]
CellTagsIndexPosition[    448873,       8281]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Stellar Evolution Simulator",
  FontFamily->"Times New Roman",
  FontSize->36,
  FontWeight->"Bold",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["\n",
  FontFamily->"Times New Roman",
  FontSize->36,
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["Reese Danzer & Karthik Boyareddygari",
  FontFamily->"Times New Roman",
  FontSize->24,
  FontColor->RGBColor[0., 0., 0.]]
}], "Title",
 CellChangeTimes->{{3.669467012284793*^9, 3.6694670226348968`*^9}, 
   3.669510752273879*^9, {3.6695107883605795`*^9, 3.6695107963752794`*^9}, {
   3.670332572051155*^9, 3.6703325851994696`*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Output:",
 FontFamily->"Times New Roman",
 FontSize->18,
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "Chapter",
 CellChangeTimes->{{3.669510722210079*^9, 3.6695107433980794`*^9}, {
  3.670156000859084*^9, 3.6701560072469573`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"homeScreen", "[", "]"}], 
  RowBox[{"(*", 
   RowBox[{"this", " ", "is", " ", "our", " ", "project"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6719369256625986`*^9, 3.6719369291717997`*^9}, {
  3.6719384130826745`*^9, 3.6719384232442555`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"stellarEvolutionSimulator", "[", 
   RowBox[{"9", ",", "0.1", ",", "0.9"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "just", " ", "put", " ", "in", " ", "some", " ", "values", " ", "to", " ", 
    "demo", " ", "this", " ", "as", " ", "a", " ", "standalone"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.6719375895395703`*^9, 3.671937627861762*^9}, {
  3.6719377752971954`*^9, 3.67193779304321*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Code:",
 FontFamily->"Times New Roman",
 FontSize->18,
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "Chapter",
 CellChangeTimes->{{3.669510722210079*^9, 3.6695107433980794`*^9}, 
   3.6710211686479754`*^9, {3.6710212520155935`*^9, 3.6710212865908012`*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Main Functions (StellarEvolutionSimulator and \
Interface):",
 FontFamily->"Times New Roman",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "Section",
 CellChangeTimes->{{3.6695110152244797`*^9, 3.6695110219661794`*^9}, {
  3.6705114859285517`*^9, 3.67051149050111*^9}, {3.6710211772779875`*^9, 
  3.671021232900566*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"stellarEvolutionSimulator", "[", 
   RowBox[{
    RowBox[{"solarMass_:", "1"}], ",", 
    RowBox[{"start_:", "0."}], ",", 
    RowBox[{"stop_:", "1."}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "We", " ", "set", " ", "all", " ", "arguments", " ", "as", " ", "optional",
     " ", "for", " ", "ease", " ", "of", " ", 
    RowBox[{"use", ".", " ", "\"\<solarMass\>\""}], " ", "is", " ", "the", 
    " ", "mass", " ", "of", " ", "the", " ", "desired", " ", "star", " ", 
    RowBox[{"readout", ".", " ", "\"\<start\>\""}], " ", "and", " ", 
    "\"\<stop\>\"", " ", "are", " ", "values", " ", "from", " ", "0", " ", 
    "to", " ", "1", " ", "that", " ", "represent", " ", "the", " ", "portion",
     " ", "of", " ", "the", " ", 
    RowBox[{"star", "'"}], "s", " ", "life", " ", "being", " ", 
    RowBox[{"viewed", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Block", "[", " ", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "startVar", ",", "\[IndentingNewLine]", "stopVar", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"timeRange", "=", 
       RowBox[{"Interval", "[", 
        RowBox[{"{", 
         RowBox[{"0.", ",", "1."}], "}"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"data", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{"solarMass", ",", 
         RowBox[{"(*", 
          RowBox[{
          "utilize", " ", "the", " ", "initialize", " ", "function", " ", 
           "to", " ", "establish", " ", "the", " ", "correct", " ", 
           "datasets", " ", "for", " ", "use", " ", "in", " ", "forming", " ",
            "the", " ", "interpolating", " ", "functions"}], "*)"}], 
         "\[IndentingNewLine]", "0.1", ",", 
         RowBox[{
          RowBox[{"initialize", "[", "\"\<0.1 Solar Mass.txt\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", "0.5", 
         ",", 
         RowBox[{
          RowBox[{"initialize", "[", "\"\<0.5 Solar Mass.txt\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", "1", 
         ",", 
         RowBox[{
          RowBox[{"initialize", "[", "\"\<1 Solar Mass.txt\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", "3", 
         ",", 
         RowBox[{
          RowBox[{"initialize", "[", "\"\<3 Solar Masses.txt\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", "5", 
         ",", 
         RowBox[{
          RowBox[{"initialize", "[", "\"\<5 Solar Masses.txt\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", "7", 
         ",", 
         RowBox[{
          RowBox[{"initialize", "[", "\"\<7 Solar Masses.txt\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", "9", 
         ",", 
         RowBox[{
          RowBox[{"initialize", "[", "\"\<9 Solar Masses.txt\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", "11", 
         ",", 
         RowBox[{
          RowBox[{"initialize", "[", "\"\<11 Solar Masses.txt\>\"", "]"}], 
          "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", "13", 
         ",", 
         RowBox[{
          RowBox[{"initialize", "[", "\"\<13 Solar Masses.txt\>\"", "]"}], 
          "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", "15", 
         ",", 
         RowBox[{
          RowBox[{"initialize", "[", "\"\<15 Solar Masses.txt\>\"", "]"}], 
          "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", "20", 
         ",", 
         RowBox[{
          RowBox[{"initialize", "[", "\"\<20 Solar Masses.txt\>\"", "]"}], 
          "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", "30", 
         ",", 
         RowBox[{
          RowBox[{"initialize", "[", "\"\<30 Solar Masses.txt\>\"", "]"}], 
          "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", "40", 
         ",", 
         RowBox[{
          RowBox[{"initialize", "[", "\"\<40 Solar Masses.txt\>\"", "]"}], 
          "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", "50", 
         ",", 
         RowBox[{
          RowBox[{"initialize", "[", "\"\<50 Solar Masses.txt\>\"", "]"}], 
          "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", "75", 
         ",", 
         RowBox[{
          RowBox[{"initialize", "[", "\"\<75 Solar Masses.txt\>\"", "]"}], 
          "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", "100", 
         ",", 
         RowBox[{
          RowBox[{"initialize", "[", "\"\<100 Solar Masses.txt\>\"", "]"}], 
          "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", "_", 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"stellarEvolutionSimulator", "::", "urdumb"}], "=", 
           "\"\<The mass value `1` is not part of the database. Using mass \
value 1. \\nAvailible mass values: 0.1, 0.5, 1, 3, 5, 7, 9, 11, 13, 15, 20, \
30, 40, 50, 75, and 100.\>\""}], ";", "\[IndentingNewLine]", 
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"stellarEvolutionSimulator", "::", "urdumb"}], ",", 
            "solarMass"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"initialize", "[", "\"\<1 Solar Mass.txt\>\"", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
        "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Initialize", " ", "the", " ", "dataset", " ", "using", " ", "a", " ", 
       "switch", " ", "statement", " ", "for", " ", "each", " ", "different", 
       " ", "mass", " ", "type"}], ",", " ", 
      RowBox[{"taking", " ", "the", " ", "input", " ", "as", " ", "a", " ", 
       RowBox[{"parameter", ".", " ", "Also"}], " ", "set", " ", "the", " ", 
       "solarMass", " ", "error", " ", 
       RowBox[{"case", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"stellarEvolutionSimulator", "::", "failureToLaunch"}], "=", 
      "\"\<The start value \
\[InvisibleComma]\[InvisibleComma]\[InvisibleComma]`1` is not a number on the \
domain [0, 1) or is greater than the upper bound. Using start value 0.\>\""}],
      ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"stellarEvolutionSimulator", "::", "crashLanding"}], "=", 
      "\"\<The stop value `1` is not a number on the domain (0, 1]. Using \
stop value 1.\>\""}], ";", "\[IndentingNewLine]", 
     RowBox[{"startVar", "=", "start"}], ";", "\[IndentingNewLine]", 
     RowBox[{"stopVar", "=", "stop"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"IntervalMemberQ", "[", 
          RowBox[{"timeRange", ",", "start"}], "]"}], "\[Equal]", "False"}], "||", 
        RowBox[{"start", "==", "1."}], "||", 
        RowBox[{"start", "\[GreaterEqual]", "stop"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"stellarEvolutionSimulator", "::", "failureToLaunch"}], ",",
           "start"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"startVar", "=", "0."}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"IntervalMemberQ", "[", 
          RowBox[{"timeRange", ",", "stop"}], "]"}], "\[Equal]", "False"}], "||", 
        RowBox[{"stop", "\[Equal]", "0."}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"stellarEvolutionSimulator", "::", "crashLanding"}], ",", 
          "stop"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"stopVar", "=", "1."}], ";"}]}], "\[IndentingNewLine]", "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Initalize", " ", "and", " ", "set", " ", "the", " ", "other", " ", 
       "two", " ", "possible", " ", "error", " ", 
       RowBox[{"cases", "."}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"maxStep", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"maxAge", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"data", "[", "\"\<Age\>\"", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"minRadius", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"data", "[", "\"\<Radius\>\"", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"maxRadius", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"data", "[", "\"\<Radius\>\"", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"minLuminosity", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"data", "[", "\"\<Luminosity\>\"", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"maxLuminosity", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"data", "[", "\"\<Luminosity\>\"", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"maxTSurface", "=", 
      RowBox[{"Max", "[", 
       RowBox[{
       "data", "[", "\"\<\!\(\*SubscriptBox[\(T\), \(s\)]\)\>\"", "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ageFunction", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{
        RowBox[{"Normal", "[", 
         RowBox[{"data", "[", "\"\<Age\>\"", "]"}], "]"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"massFunction", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicatesBy", "[", 
         RowBox[{
          RowBox[{"connect", "[", 
           RowBox[{
            RowBox[{"data", "[", "\"\<Age\>\"", "]"}], ",", 
            RowBox[{"data", "[", "\"\<Mass\>\"", "]"}]}], "]"}], ",", 
          "First"}], "]"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"radiusFunction", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicatesBy", "[", 
         RowBox[{
          RowBox[{"connect", "[", 
           RowBox[{
            RowBox[{"data", "[", "\"\<Age\>\"", "]"}], ",", 
            RowBox[{"data", "[", "\"\<Radius\>\"", "]"}]}], "]"}], ",", 
          "First"}], "]"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"luminosityFunction", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicatesBy", "[", 
         RowBox[{
          RowBox[{"connect", "[", 
           RowBox[{
            RowBox[{"data", "[", "\"\<Age\>\"", "]"}], ",", 
            RowBox[{"data", "[", "\"\<Luminosity\>\"", "]"}]}], "]"}], ",", 
          "First"}], "]"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"surfaceTempFunction", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicatesBy", "[", 
         RowBox[{
          RowBox[{"connect", "[", 
           RowBox[{
            RowBox[{"data", "[", "\"\<Age\>\"", "]"}], ",", 
            RowBox[{
            "data", "[", "\"\<\!\(\*SubscriptBox[\(T\), \(s\)]\)\>\"", 
             "]"}]}], "]"}], ",", "First"}], "]"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"centerTempFunction", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicatesBy", "[", 
         RowBox[{
          RowBox[{"connect", "[", 
           RowBox[{
            RowBox[{"data", "[", "\"\<Age\>\"", "]"}], ",", 
            RowBox[{
            "data", "[", "\"\<\!\(\*SubscriptBox[\(T\), \(c\)]\)\>\"", 
             "]"}]}], "]"}], ",", "First"}], "]"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rHeFunction", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicatesBy", "[", 
         RowBox[{
          RowBox[{"connect", "[", 
           RowBox[{
            RowBox[{"data", "[", "\"\<Age\>\"", "]"}], ",", 
            RowBox[{
            "data", "[", "\"\<\!\(\*SubscriptBox[\(R\), \(He\)]\)\>\"", 
             "]"}]}], "]"}], ",", "First"}], "]"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rCFunction", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicatesBy", "[", 
         RowBox[{
          RowBox[{"connect", "[", 
           RowBox[{
            RowBox[{"data", "[", "\"\<Age\>\"", "]"}], ",", 
            RowBox[{
            "data", "[", "\"\<\!\(\*SubscriptBox[\(R\), \(C\)]\)\>\"", 
             "]"}]}], "]"}], ",", "First"}], "]"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rOFunction", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicatesBy", "[", 
         RowBox[{
          RowBox[{"connect", "[", 
           RowBox[{
            RowBox[{"data", "[", "\"\<Age\>\"", "]"}], ",", 
            RowBox[{
            "data", "[", "\"\<\!\(\*SubscriptBox[\(R\), \(O\)]\)\>\"", 
             "]"}]}], "]"}], ",", "First"}], "]"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mHFunction", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicatesBy", "[", 
         RowBox[{
          RowBox[{"connect", "[", 
           RowBox[{
            RowBox[{"data", "[", "\"\<Age\>\"", "]"}], ",", 
            RowBox[{
            "data", "[", "\"\<\!\(\*SubscriptBox[\(M\), \(H\)]\)\>\"", 
             "]"}]}], "]"}], ",", "First"}], "]"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mHeFunction", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicatesBy", "[", 
         RowBox[{
          RowBox[{"connect", "[", 
           RowBox[{
            RowBox[{"data", "[", "\"\<Age\>\"", "]"}], ",", 
            RowBox[{
            "data", "[", "\"\<\!\(\*SubscriptBox[\(M\), \(He\)]\)\>\"", 
             "]"}]}], "]"}], ",", "First"}], "]"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mCFunction", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicatesBy", "[", 
         RowBox[{
          RowBox[{"connect", "[", 
           RowBox[{
            RowBox[{"data", "[", "\"\<Age\>\"", "]"}], ",", 
            RowBox[{
            "data", "[", "\"\<\!\(\*SubscriptBox[\(M\), \(C\)]\)\>\"", 
             "]"}]}], "]"}], ",", "First"}], "]"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mNFunction", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicatesBy", "[", 
         RowBox[{
          RowBox[{"connect", "[", 
           RowBox[{
            RowBox[{"data", "[", "\"\<Age\>\"", "]"}], ",", 
            RowBox[{
            "data", "[", "\"\<\!\(\*SubscriptBox[\(M\), \(N\)]\)\>\"", 
             "]"}]}], "]"}], ",", "First"}], "]"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mOFunction", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicatesBy", "[", 
         RowBox[{
          RowBox[{"connect", "[", 
           RowBox[{
            RowBox[{"data", "[", "\"\<Age\>\"", "]"}], ",", 
            RowBox[{
            "data", "[", "\"\<\!\(\*SubscriptBox[\(M\), \(O\)]\)\>\"", 
             "]"}]}], "]"}], ",", "First"}], "]"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Initialize", " ", "all", " ", "of", " ", "the", " ", "different", " ",
         "data", " ", "functions", " ", "for", " ", "use", " ", "in", " ", 
        "the", " ", 
        RowBox[{"interface", ".", " ", "We"}], " ", "initialize", " ", "them",
         " ", "as", " ", "global", " ", "variables", " ", "because", " ", 
        "its", " ", "ugly", " ", "to", " ", "pass", " ", "so", " ", "many", 
        " ", "to", " ", "the", " ", "interface", " ", "as", " ", 
        "parameters"}], ",", " ", 
       RowBox[{
       "and", " ", "this", " ", "also", " ", "lets", " ", "us", " ", "graph", 
        " ", "them", " ", "for", " ", "demonstration", " ", "down", " ", 
        RowBox[{"below", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"CreatePalette", "[", 
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{"interface", "[", 
         RowBox[{"startVar", ",", "stopVar"}], "]"}], "}"}], "]"}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Run", " ", 
     RowBox[{"interface", "[", "]"}]}], "*)"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6707081644470067`*^9, 3.6707081682070446`*^9}, {
   3.6707102411341705`*^9, 3.670710241664118*^9}, {3.670725364297926*^9, 
   3.6707253652027254`*^9}, {3.6707253997567253`*^9, 
   3.6707254286323256`*^9}, {3.6710164993195887`*^9, 3.671016499699589*^9}, {
   3.671016997410288*^9, 3.671017085660412*^9}, {3.6710171230004644`*^9, 
   3.6710171936705637`*^9}, 3.67101724096063*^9, {3.671017315540735*^9, 
   3.671017383890831*^9}, 3.6710175334210405`*^9, {3.6710177089087873`*^9, 
   3.6710177114987907`*^9}, 3.6710177611513605`*^9, 3.671017802156418*^9, {
   3.671017834021463*^9, 3.671017872514017*^9}, {3.6710179423491154`*^9, 
   3.6710180068867064`*^9}, {3.671018059004279*^9, 3.6710180648242874`*^9}, {
   3.6710181763819437`*^9, 3.671018192101966*^9}, {3.671018222704509*^9, 
   3.6710182584145594`*^9}, {3.671018289724603*^9, 3.6710183461921825`*^9}, {
   3.6710186342400866`*^9, 3.6710186370800905`*^9}, {3.671018740005235*^9, 
   3.6710187473152456`*^9}, {3.6710187885503035`*^9, 3.671018798680318*^9}, 
   3.6710199991370034`*^9, {3.6710205080003996`*^9, 3.671020511122904*^9}, {
   3.671024718011492*^9, 3.6710248259406495`*^9}, {3.6710248931941824`*^9, 
   3.6710249406699114`*^9}, {3.6710249966132708`*^9, 3.671025241562033*^9}, {
   3.671027273256913*^9, 3.671027294679494*^9}, {3.671028184970291*^9, 
   3.671028192477821*^9}, {3.6710289273889484`*^9, 3.6710290207840805`*^9}, {
   3.671112378526595*^9, 3.6711124850467443`*^9}, {3.671133053967548*^9, 
   3.6711331026760426`*^9}, {3.671133685582922*^9, 3.6711336871919127`*^9}, {
   3.671133720530652*^9, 3.6711337395514636`*^9}, {3.671134282116706*^9, 
   3.6711342938578424`*^9}, {3.67113555814137*^9, 3.671135568325477*^9}, {
   3.671135858228372*^9, 3.671135866241455*^9}, {3.671135926023091*^9, 
   3.671135926646097*^9}, {3.6711359642394953`*^9, 3.671135967502529*^9}, {
   3.6711362655537577`*^9, 3.67113634703362*^9}, {3.6711364173109674`*^9, 
   3.671136524501768*^9}, {3.67120200203043*^9, 3.6712020563005123`*^9}, {
   3.67120428671402*^9, 3.6712043046390467`*^9}, {3.671204533669402*^9, 
   3.6712045343094025`*^9}, {3.6712108562782707`*^9, 
   3.6712109043077354`*^9}, {3.671211449490695*^9, 3.671211512930808*^9}, {
   3.6712118258523855`*^9, 3.6712118276383886`*^9}, {3.6712129264713354`*^9, 
   3.6712129607606916`*^9}, {3.6712133794429455`*^9, 3.671213444708065*^9}, {
   3.6712167494035835`*^9, 3.6712167693856244`*^9}, {3.6712168126057014`*^9, 
   3.6712168865848465`*^9}, 3.671216977243017*^9, {3.6712309429384036`*^9, 
   3.6712309432984037`*^9}, 3.6712314315477734`*^9, {3.6712314947953696`*^9, 
   3.671231499515377*^9}, {3.671231687903163*^9, 3.6712316955506744`*^9}, {
   3.671231729153226*^9, 3.671231772763294*^9}, {3.671231853073418*^9, 
   3.671231951876068*^9}, {3.6712320143061633`*^9, 3.67123205779873*^9}, {
   3.6712321690939016`*^9, 3.6712324200292892`*^9}, {3.6712324701993656`*^9, 
   3.6712324997894106`*^9}, {3.67123253175196*^9, 3.671232536686968*^9}, {
   3.6712326794596853`*^9, 3.671232736824774*^9}, {3.6712328429449368`*^9, 
   3.6712328911750097`*^9}, {3.671232933137575*^9, 3.67123293656758*^9}, {
   3.671232979487645*^9, 3.6712329917551637`*^9}, {3.6712330391077366`*^9, 
   3.6712330574802647`*^9}, {3.6712331337278805`*^9, 3.671233164070427*^9}, {
   3.671233216730508*^9, 3.671233226468023*^9}, {3.6712333433535204`*^9, 
   3.671233366958558*^9}, {3.671233511468783*^9, 3.6712335209237986`*^9}, 
   3.6712336872215576`*^9, {3.67123379066422*^9, 3.671233880444361*^9}, {
   3.6712339464644747`*^9, 3.6712340085020733`*^9}, {3.6712343678135624`*^9, 
   3.6712344416880064`*^9}, {3.6712345320490513`*^9, 
   3.6712345638992434`*^9}, {3.671234656724806*^9, 3.6712346783274345`*^9}, {
   3.671234784383091*^9, 3.6712348100482426`*^9}, 3.671235148959178*^9, {
   3.671235883313012*^9, 3.671235924608816*^9}, {3.671235961214244*^9, 
   3.6712360078879776`*^9}, {3.6712360396730204`*^9, 
   3.6712360620342607`*^9}, {3.6712361003157916`*^9, 
   3.6712364349160576`*^9}, {3.6712365059681892`*^9, 3.671236555318189*^9}, {
   3.6712366058981895`*^9, 3.671236658295689*^9}, {3.671236761133189*^9, 
   3.671236780565689*^9}, {3.671236904623189*^9, 3.6712369507506895`*^9}, {
   3.671237242987448*^9, 3.6712372736977634`*^9}, {3.6712373048605824`*^9, 
   3.671237366953721*^9}, {3.671237398404044*^9, 3.6712374676247587`*^9}, {
   3.671237523160329*^9, 3.671237582745943*^9}, {3.6712376308489375`*^9, 
   3.671237632823958*^9}, {3.6712376688343277`*^9, 3.671237672741868*^9}, 
   3.6712377605552692`*^9, {3.671281083107381*^9, 3.671281219496575*^9}, {
   3.6712826033353996`*^9, 3.6712826290754356`*^9}, {3.6712828388605585`*^9, 
   3.6712829273317175`*^9}, {3.67128331506553*^9, 3.671283318455535*^9}, 
   3.671285839298364*^9, {3.6713674744325356`*^9, 3.6713675129325895`*^9}, {
   3.6713713902722363`*^9, 3.6713714065122595`*^9}, {3.6714198139239607`*^9, 
   3.671419833873989*^9}, {3.671450456561797*^9, 3.6714504823802733`*^9}, {
   3.6714680866692924`*^9, 3.671468245520378*^9}, {3.6714683236368465`*^9, 
   3.6714683274690657`*^9}, {3.6714683700925035`*^9, 3.671468419071305*^9}, {
   3.6714684892643194`*^9, 3.6714685815045958`*^9}, {3.671468669734642*^9, 
   3.6714686980182595`*^9}, {3.6714687600618086`*^9, 
   3.6714688509750085`*^9}, {3.6714949286648073`*^9, 3.671494943615662*^9}, {
   3.671532580857054*^9, 3.671532646969152*^9}, {3.6715434800293083`*^9, 
   3.6715434827893124`*^9}, {3.6718334027092686`*^9, 
   3.6718334029412813`*^9}, {3.6718929855330553`*^9, 3.671893016002798*^9}, {
   3.6719067076354856`*^9, 3.671906717182032*^9}, 3.6719067490608554`*^9, {
   3.671906847186468*^9, 3.671906849308589*^9}, {3.671933116865748*^9, 
   3.6719331311965675`*^9}, {3.67193316638558*^9, 3.67193318176346*^9}, {
   3.671937478460217*^9, 3.67193748096636*^9}, {3.671938301075268*^9, 
   3.6719383340771556`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Macros`SetArgumentCount", "[", 
   RowBox[{"stellarEvolutionSimulator", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Set", " ", "final", " ", "error", " ", "case", " ", "in", " ", "separate",
     " ", 
    RowBox[{"cell", "."}]}], "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6712833262555456`*^9, 3.6712833569087305`*^9}, {
   3.6712834029617996`*^9, 3.6712834272628546`*^9}, {3.671283458839902*^9, 
   3.671283503762966*^9}, 3.671309349830196*^9, 3.6713714082722616`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"interface", "[", 
   RowBox[{"start_", ",", "stop_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "mass", ",", "\[IndentingNewLine]", "radius", ",", "\[IndentingNewLine]",
       "luminosity", ",", "\[IndentingNewLine]", "surfaceTemp", ",", 
      "\[IndentingNewLine]", "centerTemp", ",", "\[IndentingNewLine]", 
      "coreHydrogen", ",", "\[IndentingNewLine]", "coreHelium", ",", 
      "\[IndentingNewLine]", "coreCarbon", ",", "\[IndentingNewLine]", 
      "coreNitrogen", ",", "\[IndentingNewLine]", "coreOxygen", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"startReal", "=", 
       RowBox[{"start", "*", "maxAge"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"stopReal", "=", 
       RowBox[{"stop", "*", "maxAge"}]}]}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Dynamically", " ", "changing", " ", "variables", " ", "to", " ", "be", 
       " ", "used", " ", "in", " ", "the", " ", 
       RowBox[{"interface", "."}]}], "*)"}], "\[IndentingNewLine]", "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"mass", "=", 
        RowBox[{"massFunction", "[", "age", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"radius", "=", 
        RowBox[{"radiusFunction", "[", "age", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"luminosity", "=", 
        RowBox[{"luminosityFunction", "[", "age", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"surfaceTemp", "=", 
        RowBox[{"surfaceTempFunction", "[", "age", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"centerTemp", "=", 
        RowBox[{"centerTempFunction", "[", "age", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"coreHydrogen", "=", 
        RowBox[{"mHFunction", "[", "age", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"coreHelium", "=", 
        RowBox[{"mHeFunction", "[", "age", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"coreCarbon", "=", 
        RowBox[{"mCFunction", "[", "age", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"coreNitrogen", "=", 
        RowBox[{"mNFunction", "[", "age", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"coreOxygen", "=", 
        RowBox[{"mOFunction", "[", "age", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Initialize", " ", "the", " ", "changing", " ", "variables", " ", 
         "in", " ", "DynamicModule", " ", "using", " ", "the", " ", "global", 
         " ", "function", " ", "variables", " ", "defined", " ", "in", " ", 
         RowBox[{
          RowBox[{"stellarEvolutionSimulator", "[", "]"}], "."}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"GraphicsGrid", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"The", " ", "Sphere", " ", 
             RowBox[{"Graphic", ":", " ", 
              RowBox[{
              "Uses", " ", "function", " ", "\"\<exterior\>\"", " ", "to", 
               " ", "determine", " ", "external", " ", "graphic", " ", "to", 
               " ", "be", " ", "shown"}]}]}], ",", " ", 
            RowBox[{"and", " ", "displays", " ", 
             RowBox[{"it", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Graphics3D", "[", 
              RowBox[{
               RowBox[{"exterior", "[", "age", "]"}], ",", 
               RowBox[{"Background", "\[Rule]", "Black"}], ",", 
               RowBox[{"Boxed", "\[Rule]", "True"}], ",", 
               RowBox[{"AxesStyle", "\[Rule]", "White"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"sphereRange", "[", "radius", "]"}]}], ",", 
               RowBox[{"Axes", "\[Rule]", "True"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
               RowBox[{"PlotLabel", "\[Rule]", "\"\<Exterior\>\""}]}], "]"}], 
             ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"The", " ", "Text", " ", 
               RowBox[{"Readouts", ":", " ", 
                RowBox[{
                "Variables", " ", "and", " ", "text", " ", "are", " ", 
                 "compiled", " ", "into", " ", "a", " ", "single", " ", 
                 "formatted", " ", "string", " ", "and", " ", 
                 RowBox[{"displayed", "."}]}]}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"Panel", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Graphics", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"FontSize", "\[Rule]", "14."}], ",", " ", 
                  RowBox[{"Text", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"\"\<Mass: \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"mass", ",", 
                    RowBox[{"DigitBlock", "\[Rule]", "3"}]}], "]"}], "]"}], 
                    "<>", "\"\< M\[CircleDot]\>\"", "<>", 
                    "\[IndentingNewLine]", "\"\<\\nSurface Temperature: \>\"",
                     "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"Round", "[", "surfaceTemp", "]"}], ",", 
                    RowBox[{"DigitBlock", "\[Rule]", "3"}]}], "]"}], "]"}], 
                    "<>", "\"\<\[Degree]K\>\"", "<>", "\[IndentingNewLine]", 
                    "\"\<\\nCore Tempurature: \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"Round", "[", "centerTemp", "]"}], ",", 
                    RowBox[{"DigitBlock", "\[Rule]", "3"}]}], "]"}], "]"}], 
                    "<>", "\"\<\[Degree]K\>\"", "<>", "\[IndentingNewLine]", 
                    "\"\<\\nRadius: \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"radius", ",", 
                    RowBox[{"DigitBlock", "\[Rule]", "3"}], ",", 
                    RowBox[{"NumberSeparator", "\[Rule]", "\"\<,\>\""}]}], 
                    "]"}], "]"}], "<>", "\"\< R\[CircleDot]\>\"", "<>", 
                    "\[IndentingNewLine]", "\"\<\\nLuminosity: \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"AccountingForm", "[", 
                    RowBox[{"luminosity", ",", 
                    RowBox[{"DigitBlock", "\[Rule]", "3"}], ",", 
                    RowBox[{"NumberSeparator", "\[Rule]", "\"\<,\>\""}]}], 
                    "]"}], "]"}], "<>", "\"\< L\[CircleDot]\>\"", "<>", 
                    "\[IndentingNewLine]", "\"\<\\nAge: \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"AccountingForm", "[", 
                    RowBox[{"age", ",", 
                    RowBox[{"DigitBlock", "\[Rule]", "3"}], ",", 
                    RowBox[{"NumberSeparator", "\[Rule]", "\"\<,\>\""}]}], 
                    "]"}], "]"}], "<>", "\"\< Years\>\""}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], 
                 "}"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"350", ",", "250"}], "}"}]}]}], "]"}], ",", 
             "SpanFromLeft"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"The", " ", "Bar", " ", "Chart"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"BarChart", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"mHFunction", "[", "age", "]"}], "*", 
                  SuperscriptBox["10", "2"]}], ",", 
                 RowBox[{
                  RowBox[{"mHeFunction", "[", "age", "]"}], "*", 
                  SuperscriptBox["10", "2"]}], ",", 
                 RowBox[{
                  RowBox[{"mCFunction", "[", "age", "]"}], "*", 
                  SuperscriptBox["10", "2"]}], ",", 
                 RowBox[{
                  RowBox[{"mNFunction", "[", "age", "]"}], "*", 
                  SuperscriptBox["10", "2"]}], ",", 
                 RowBox[{
                  RowBox[{"mOFunction", "[", "age", "]"}], "*", 
                  SuperscriptBox["10", "2"]}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotRange", "\[Rule]", "100"}], ",", 
               RowBox[{"ChartLabels", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<H\>\"", ",", "\"\<He\>\"", ",", "\"\<C\>\"", ",", 
                  "\"\<N\>\"", ",", "\"\<O\>\""}], "}"}]}], ",", 
               RowBox[{
               "PlotLabel", "\[Rule]", 
                "\"\<Percent Composition of Core by Mass\>\""}]}], "]"}], ",",
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"The", " ", "Internal", " ", 
               RowBox[{"Diagram", ":", " ", 
                RowBox[{
                "Can", " ", "either", " ", "be", " ", "viewed", " ", "by", 
                 " ", "itself", " ", "or", " ", "scaled", " ", "against", " ",
                  "the", " ", "radius", " ", "of", " ", "the", " ", "rest", 
                 " ", "of", " ", "the", " ", 
                 RowBox[{"star", "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{"checkBox", ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Red", ",", 
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.", ",", "0."}], "}"}], ",", 
                    RowBox[{"radiusFunction", "[", "age", "]"}]}], "]"}], 
                    ",", "\"\<Star Radius\>\""}], "]"}]}], "}"}], ",", 
                   RowBox[{"core", "[", "age", "]"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"core", "[", "age", "]"}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
               "PlotLabel", "\[Rule]", 
                "\"\<Central Element Composition by Radius\>\""}], ",", 
               RowBox[{"Axes", "\[Rule]", "True"}], ",", 
               RowBox[{"Background", "\[Rule]", "Black"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"The", " ", "HR", " ", 
               RowBox[{"Diagram", ":", " ", 
                RowBox[{
                "Shows", " ", "both", " ", "the", " ", "star", " ", "at", " ",
                  "its", " ", "current", " ", "age", " ", 
                 RowBox[{"(", 
                  RowBox[{"purple", " ", "point"}], ")"}], " ", "and", " ", 
                 "a", " ", "plot", " ", "of", " ", "how", " ", "the", " ", 
                 "star", " ", "will", " ", "move", " ", "through", " ", "the",
                  " ", "graph", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"dashed", " ", "line"}], ")"}], "."}]}]}]}], 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Show", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"surfaceTemp", ",", "luminosity"}], "}"}], "}"}], 
                 ",", 
                 RowBox[{"PlotStyle", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", "Purple"}],
                    "}"}]}], ",", 
                 RowBox[{"ScalingFunctions", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Reverse\>\"", ",", "\"\<Log\>\""}], "}"}]}]}],
                 "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"Star", " ", "as", " ", "a", " ", "dot"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"ParametricPlot", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"surfaceTempFunction", "[", "u", "]"}], ",", 
                   RowBox[{"luminosityFunction", "[", "u", "]"}]}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"u", ",", "startReal", ",", "stopReal"}], "}"}], 
                 ",", 
                 RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], 
                 ",", 
                 RowBox[{"PlotStyle", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"Blue", ",", "Dashed"}], "}"}]}], ",", 
                 RowBox[{"ScalingFunctions", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Reverse\>\"", ",", "\"\<Log\>\""}], "}"}]}]}],
                 "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "Star", " ", "lifetime", " ", "as", " ", "plotted", " ", 
                 "parametric"}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0.", ",", 
                    RowBox[{"-", "maxTSurface"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Log", "[", "minLuminosity", "]"}], ",", 
                    RowBox[{"Log", "[", "maxLuminosity", "]"}]}], "}"}]}], 
                 "}"}]}], ",", 
               RowBox[{"Frame", "\[Rule]", "True"}], ",", 
               RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"Background", "\[Rule]", "LightGray"}], ",", 
               RowBox[{"FrameStyle", "\[Rule]", 
                RowBox[{"Directive", "[", "Red", "]"}]}], ",", 
               RowBox[{"FrameLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(T\), \(s\)]\)\>\"", ",", 
                  "\"\<L\[CircleDot]\>\""}], "}"}]}], ",", 
               RowBox[{"PlotLabel", "\[Rule]", "\"\<HRD\>\""}], ",", 
               RowBox[{"Axes", "\[Rule]", "True"}], ",", 
               RowBox[{"AxesOrigin", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"0.", ",", "0."}], "}"}]}]}], "\[IndentingNewLine]", 
              "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ContentSelectable", "\[Rule]", "False"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"So", " ", "they", " ", 
           RowBox[{"don", "'"}], "t", " ", "get", " ", "their", " ", "grubby",
            " ", "hands", " ", "on", " ", "our", " ", "nice", " ", 
           RowBox[{"animation", "."}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"Make", " ", "it", " ", "beefy", " ", 
           RowBox[{"large", "."}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Background", "\[Rule]", "Black"}]}], "\[IndentingNewLine]", 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "checkBox", ",", "False", ",", "\"\<Core Radius Scaling\>\""}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"age", ",", "startReal", ",", 
          RowBox[{"\"\<Age: \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"NumberForm", "[", 
             RowBox[{
              RowBox[{"Round", "[", "startReal", "]"}], ",", 
              RowBox[{"DigitBlock", "\[Rule]", "3"}]}], "]"}], "]"}], "<>", 
           "\"\< to \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"NumberForm", "[", 
             RowBox[{
              RowBox[{"Round", "[", "stopReal", "]"}], ",", 
              RowBox[{"DigitBlock", "\[Rule]", "3"}]}], "]"}], "]"}], "<>", 
           "\"\< years\>\""}]}], "}"}], ",", "startReal", ",", "stopReal"}], 
       "}"}], ",", 
      RowBox[{"ContentSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1035.", ",", "625."}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6687175198679237`*^9, 3.6687175373508954`*^9}, {
   3.6687178397844467`*^9, 3.6687178407245026`*^9}, {3.668717894457489*^9, 
   3.6687179578693914`*^9}, {3.6687179908803816`*^9, 3.668718059901868*^9}, {
   3.6687182951936207`*^9, 3.668718310606986*^9}, {3.668718346210546*^9, 
   3.668718474083332*^9}, {3.6687185405199747`*^9, 3.668718567832706*^9}, {
   3.668718647298808*^9, 3.668718686970792*^9}, {3.668718723692628*^9, 
   3.668718811559021*^9}, {3.6687189568958235`*^9, 3.6687190509292526`*^9}, {
   3.66871911929062*^9, 3.6687191299308324`*^9}, {3.6687192006522465`*^9, 
   3.6687192710236545`*^9}, {3.6687193815363364`*^9, 
   3.6687194795092754`*^9}, {3.6687195425511665`*^9, 
   3.6687195502513976`*^9}, {3.668719704366021*^9, 3.668719790398602*^9}, {
   3.668719914902337*^9, 3.668719944703231*^9}, {3.6687201478835278`*^9, 
   3.668720193501443*^9}, {3.668720226612105*^9, 3.6687202963635*^9}, {
   3.6687203680950317`*^9, 3.668720569834086*^9}, {3.668720974574464*^9, 
   3.668721033252225*^9}, 3.668721068592268*^9, {3.6687218672868476`*^9, 
   3.6687219083859572`*^9}, {3.668721981109229*^9, 3.668721987305848*^9}, {
   3.66872206122824*^9, 3.668722152226751*^9}, {3.668722293153751*^9, 
   3.668722325940751*^9}, {3.668722527259843*^9, 3.6687225673448515`*^9}, {
   3.668722636907807*^9, 3.668722654680584*^9}, {3.66872268774689*^9, 
   3.6687227523333483`*^9}, {3.6687227846225767`*^9, 
   3.6687228170028143`*^9}, {3.6687228510542192`*^9, 
   3.6687229439775105`*^9}, {3.6687230548936014`*^9, 3.668723144148755*^9}, {
   3.6687232300377555`*^9, 3.6687232774537554`*^9}, {3.6687720238224874`*^9, 
   3.6687720267177024`*^9}, {3.6687726590846415`*^9, 
   3.6687726606645465`*^9}, {3.668772706421801*^9, 3.6687727120314646`*^9}, {
   3.6688892411250763`*^9, 3.668889309174021*^9}, {3.668889391262706*^9, 
   3.668889416035823*^9}, {3.6688897230316453`*^9, 3.6688897649023137`*^9}, {
   3.6688902977530065`*^9, 3.668890301996234*^9}, {3.668890482286589*^9, 
   3.668890502473119*^9}, {3.668890875206308*^9, 3.6688909014300756`*^9}, {
   3.6688909798049784`*^9, 3.6688910074171553`*^9}, {3.6688911000973496`*^9, 
   3.668891136211581*^9}, {3.668891178706253*^9, 3.668891200452793*^9}, {
   3.6688914727369385`*^9, 3.6688914790081787`*^9}, {3.668891513375199*^9, 
   3.6688915169164214`*^9}, {3.668891556540675*^9, 3.668891561517107*^9}, {
   3.6688918500097566`*^9, 3.668891854143783*^9}, {3.668891899524474*^9, 
   3.6688919175113893`*^9}, {3.6688919573384447`*^9, 3.668891966495703*^9}, {
   3.6688923396188955`*^9, 3.668892379180749*^9}, {3.6688925323113303`*^9, 
   3.668892551078251*^9}, {3.668892593760124*^9, 3.6688926016537747`*^9}, {
   3.668892639000414*^9, 3.6688926999500046`*^9}, {3.668892870442688*^9, 
   3.6688928764797716`*^9}, {3.668897609678501*^9, 3.668897667979924*^9}, {
   3.668897755310896*^9, 3.6688978191221724`*^9}, 3.6688978769933295`*^9, {
   3.6688979074339385`*^9, 3.6688979185341606`*^9}, 3.66894494880772*^9, {
   3.6689450573987613`*^9, 3.668945117179957*^9}, 3.668945229412201*^9, {
   3.668952824135002*^9, 3.668952830685757*^9}, {3.6689593261422443`*^9, 
   3.668959347862679*^9}, {3.6689593814458513`*^9, 3.6689593871759653`*^9}, {
   3.6689893654288716`*^9, 3.668989367862144*^9}, {3.6689894164652004`*^9, 
   3.668989416792756*^9}, {3.6689894696072454`*^9, 3.6689894996032815`*^9}, {
   3.6689895435777082`*^9, 3.6689895807196417`*^9}, {3.6689896267531757`*^9, 
   3.6689896292334642`*^9}, {3.668989681085538*^9, 3.6689897147176285`*^9}, {
   3.6689900875493956`*^9, 3.6689900885321894`*^9}, {3.6690657355536804`*^9, 
   3.6690657745590706`*^9}, {3.6690658409042377`*^9, 3.669065955164731*^9}, {
   3.6690659996729507`*^9, 3.6690660129724183`*^9}, {3.669066115135832*^9, 
   3.6690661559316144`*^9}, {3.669066196688707*^9, 3.669066218545988*^9}, {
   3.669409728446373*^9, 3.6694097410233727`*^9}, {3.6695104233447795`*^9, 
   3.6695104237347794`*^9}, 3.6695569712479887`*^9, {3.6700140209059486`*^9, 
   3.670014036958948*^9}, {3.6700141111229486`*^9, 3.6700141293769484`*^9}, {
   3.670014222142948*^9, 3.6700143311789484`*^9}, {3.6700152576294575`*^9, 
   3.6700152739289465`*^9}, {3.670015306439923*^9, 3.6700153068299346`*^9}, {
   3.670015394479221*^9, 3.6700154109017205`*^9}, {3.67001562672723*^9, 
   3.6700156341773787`*^9}, {3.6700159139087615`*^9, 
   3.6700160067859764`*^9}, {3.6700160894152026`*^9, 3.670016106483203*^9}, {
   3.670017393079007*^9, 3.670017448416485*^9}, {3.670017510523744*^9, 
   3.670017598632527*^9}, {3.670017710435955*^9, 3.6700177316073847`*^9}, {
   3.670017774857256*^9, 3.6700178490552464`*^9}, {3.670017939396947*^9, 
   3.670018018694415*^9}, {3.670169029964161*^9, 3.670169033960761*^9}, {
   3.670169122129943*^9, 3.6701691240767484`*^9}, {3.6701693112960205`*^9, 
   3.670169396858576*^9}, {3.670169991729251*^9, 3.6701699923532505`*^9}, {
   3.670170634102751*^9, 3.6701706814887505`*^9}, {3.6701707223272505`*^9, 
   3.6701707284922504`*^9}, {3.670171094522751*^9, 3.670171277359251*^9}, {
   3.6701713599419127`*^9, 3.67017136217936*^9}, {3.670171715619141*^9, 
   3.6701717719727755`*^9}, {3.6701718026838465`*^9, 3.670171880857663*^9}, {
   3.670171954266003*^9, 3.6701719604366207`*^9}, {3.670172029916568*^9, 
   3.6701721314207172`*^9}, {3.67017232037261*^9, 3.6701723285759306`*^9}, {
   3.670172395647637*^9, 3.670172401037176*^9}, {3.670172513848456*^9, 
   3.6701725562716975`*^9}, {3.670180843902483*^9, 3.670180850454105*^9}, {
   3.670180973113479*^9, 3.6701809833469477`*^9}, {3.67018113844016*^9, 
   3.6701811958786764`*^9}, {3.6701812328818765`*^9, 
   3.6701812399330764`*^9}, {3.6701812925674763`*^9, 
   3.6701812932694764`*^9}, {3.6701814063251762`*^9, 
   3.6701814692711763`*^9}, {3.670181514511468*^9, 3.670181546226675*^9}, {
   3.670181752254142*^9, 3.670181754360101*^9}, {3.6701818808112693`*^9, 
   3.670181882964028*^9}, {3.670182034969797*^9, 3.670182068416197*^9}, 
   3.6701821435457973`*^9, {3.6701831409086404`*^9, 3.67018321005284*^9}, {
   3.670183365164444*^9, 3.670183425178029*^9}, {3.670183551429713*^9, 
   3.6701835982771134`*^9}, {3.6701836355771914`*^9, 
   3.6701836747334127`*^9}, {3.670183719177243*^9, 3.670183836784135*^9}, {
   3.6701839796986914`*^9, 3.670183985065091*^9}, {3.670184019681491*^9, 
   3.670184050153291*^9}, {3.670184087322491*^9, 3.670184128929591*^9}, {
   3.6701842037457914`*^9, 3.670184295213394*^9}, {3.670184433800974*^9, 
   3.670184451366603*^9}, {3.670241103261507*^9, 3.6702411044776125`*^9}, {
   3.670241174013919*^9, 3.6702412101696796`*^9}, {3.670241528341466*^9, 
   3.670241553889188*^9}, {3.6702416665144033`*^9, 3.6702416703200464`*^9}, {
   3.6702417099854937`*^9, 3.670241775033324*^9}, {3.6702418444340067`*^9, 
   3.6702418800474367`*^9}, {3.6702419328670053`*^9, 
   3.6702419419614553`*^9}, {3.670241998290889*^9, 3.6702420010363827`*^9}, {
   3.6702421192331653`*^9, 3.670242194315965*^9}, {3.670332362244176*^9, 
   3.670332374742426*^9}, {3.6703324295429053`*^9, 3.6703324843733883`*^9}, {
   3.670332517858736*^9, 3.6703325532312727`*^9}, {3.670415197442649*^9, 
   3.6704152020097575`*^9}, {3.6704165664493923`*^9, 
   3.6704165808014174`*^9}, {3.670416790840186*^9, 3.670416826189849*^9}, {
   3.6704168638795147`*^9, 3.6704168777791395`*^9}, {3.670416953330072*^9, 
   3.670416984124526*^9}, {3.6704172261433516`*^9, 3.670417234676566*^9}, {
   3.6704172914450655`*^9, 3.6704173078250947`*^9}, {3.670417371301606*^9, 
   3.670417384546029*^9}, {3.670417426510103*^9, 3.670417454418552*^9}, {
   3.670419421769208*^9, 3.6704194584292717`*^9}, {3.6704195202365804`*^9, 
   3.670419532467002*^9}, {3.670424394726426*^9, 3.670424711313382*^9}, {
   3.6704552029545097`*^9, 3.6704552283981543`*^9}, {3.670455489794999*^9, 
   3.670455577732353*^9}, {3.6704558938357086`*^9, 3.6704559094045362`*^9}, {
   3.6704559748934507`*^9, 3.670456031724351*^9}, {3.6704561957118387`*^9, 
   3.670456200423047*^9}, {3.670456272526374*^9, 3.670456282993992*^9}, {
   3.6704922177581797`*^9, 3.6704922428430233`*^9}, {3.670492427602985*^9, 
   3.670492433858596*^9}, {3.6704925737284417`*^9, 3.6704926094681044`*^9}, {
   3.6704929974407854`*^9, 3.670493001949194*^9}, {3.6704930993089647`*^9, 
   3.6704930995741653`*^9}, {3.6704931755774984`*^9, 
   3.6704931772779016`*^9}, {3.67049326201725*^9, 3.6704933155097446`*^9}, {
   3.670493539604138*^9, 3.6704935639245806`*^9}, {3.6704939851877203`*^9, 
   3.6704939923793335`*^9}, {3.6705122162623215`*^9, 
   3.6705122530946293`*^9}, {3.670512296472374*^9, 3.670512301308467*^9}, {
   3.67051235009579*^9, 3.670512532059057*^9}, {3.6705128439567747`*^9, 
   3.6705129090971923`*^9}, {3.670512997330271*^9, 3.670513082663571*^9}, {
   3.6705131172452707`*^9, 3.6705132007364707`*^9}, 3.670513252266371*^9, {
   3.670513296544171*^9, 3.6705132990245705`*^9}, 3.6705135291545706`*^9, 
   3.6705138258323708`*^9, 3.670513861529971*^9, {3.670513895963771*^9, 
   3.6705138997465706`*^9}, {3.670514241965171*^9, 3.670514248388671*^9}, {
   3.670514279716071*^9, 3.6705143102023706`*^9}, 3.670514343481671*^9, {
   3.6705144116958995`*^9, 3.6705144398282194`*^9}, {3.670514488830106*^9, 
   3.6705146320222907`*^9}, {3.670514683886552*^9, 3.670514717670552*^9}, {
   3.670516523226085*^9, 3.6705167304767485`*^9}, {3.670516955708931*^9, 
   3.6705170197617097`*^9}, {3.67051832248081*^9, 3.670518329203764*^9}, {
   3.670518727983898*^9, 3.6705187569682198`*^9}, {3.670518895994529*^9, 
   3.670518951077776*^9}, {3.6705189944610977`*^9, 3.6705190346776395`*^9}, {
   3.670519070588785*^9, 3.670519146186385*^9}, {3.6705191960597696`*^9, 
   3.670519224919955*^9}, 3.6705193742129116`*^9, {3.6705194790143833`*^9, 
   3.6705195136310053`*^9}, {3.6705197089910574`*^9, 
   3.6705197462752967`*^9}, {3.6705198619494314`*^9, 3.670519980712231*^9}, {
   3.670520076714631*^9, 3.670520100879031*^9}, {3.670520140659031*^9, 
   3.670520195243431*^9}, {3.6705202449606314`*^9, 3.670520245740631*^9}, {
   3.670520364456631*^9, 3.6705203664066315`*^9}, {3.670520477067131*^9, 
   3.6705205481573315`*^9}, {3.6705207824609313`*^9, 3.670520800028531*^9}, {
   3.6705208636765313`*^9, 3.6705208655485315`*^9}, {3.670520984186531*^9, 
   3.670520984404931*^9}, {3.670521054620531*^9, 3.670521078706931*^9}, {
   3.670521221353331*^9, 3.6705213232057314`*^9}, {3.6705213769321313`*^9, 
   3.670521399442931*^9}, {3.670521446228331*^9, 3.6705214675379314`*^9}, {
   3.6705215478623314`*^9, 3.6705216997907314`*^9}, {3.670521732425931*^9, 
   3.6705217399607315`*^9}, {3.670521934323931*^9, 3.670522085534731*^9}, {
   3.670522137545131*^9, 3.670522167242731*^9}, {3.670522331963131*^9, 
   3.670522344786331*^9}, {3.670522380806731*^9, 3.6705224113047314`*^9}, {
   3.670522457777131*^9, 3.670522588600131*^9}, {3.6705228444733315`*^9, 
   3.6705228600421314`*^9}, {3.6705233759664693`*^9, 
   3.6705235089330573`*^9}, {3.670523589888587*^9, 3.6705236040720053`*^9}, {
   3.6705236847150683`*^9, 3.670523720802677*^9}, {3.6705237980444*^9, 
   3.67052380134673*^9}, {3.670523832528848*^9, 3.670523901446739*^9}, {
   3.670525168630452*^9, 3.6705252226528535`*^9}, {3.670525553513713*^9, 
   3.6705255958617125`*^9}, {3.670525638608713*^9, 3.670525638921713*^9}, {
   3.670527048346419*^9, 3.6705270562142057`*^9}, {3.670527422684507*^9, 
   3.670527455987507*^9}, {3.670527836475507*^9, 3.6705278387005067`*^9}, 
   3.6705282012137036`*^9, {3.670540855584832*^9, 3.670540867893548*^9}, {
   3.6705409029008455`*^9, 3.670540903540462*^9}, {3.6705411141612263`*^9, 
   3.6705411485286875`*^9}, {3.670541180712106*^9, 3.670541184456178*^9}, {
   3.6706798034911976`*^9, 3.6706799046117454`*^9}, {3.670691540953151*^9, 
   3.670691541305651*^9}, {3.670707697751052*^9, 3.6707077814110518`*^9}, {
   3.6707080090654535`*^9, 3.670708009415457*^9}, {3.6707080481958447`*^9, 
   3.6707080830161924`*^9}, {3.6707081425967884`*^9, 
   3.6707081439068017`*^9}, {3.670708220870072*^9, 3.6707083187310505`*^9}, {
   3.6707084126144924`*^9, 3.670708474735114*^9}, 3.670708530545672*^9, {
   3.670708611605112*^9, 3.670708614985078*^9}, {3.6707103471875644`*^9, 
   3.6707103484974337`*^9}, {3.670720164732995*^9, 3.6707201700629416`*^9}, {
   3.6707202964326777`*^9, 3.670720342032222*^9}, {3.6707203957823987`*^9, 
   3.6707204578530197`*^9}, {3.670720574824189*^9, 3.6707205777242184`*^9}, {
   3.670720642284864*^9, 3.6707206915850415`*^9}, {3.670720731785042*^9, 
   3.670720737455042*^9}, {3.6707208167250414`*^9, 3.6707208267950416`*^9}, {
   3.6707208877150416`*^9, 3.670720901915042*^9}, {3.6707209878627634`*^9, 
   3.6707209951626906`*^9}, {3.670721090311739*^9, 3.670721109711545*^9}, {
   3.670721179150851*^9, 3.670721197641666*^9}, {3.670721471469906*^9, 
   3.6707215151999054`*^9}, {3.6707215544199057`*^9, 
   3.6707216124399056`*^9}, {3.6707216512899055`*^9, 
   3.6707216592799053`*^9}, {3.6707217028399057`*^9, 
   3.6707217525119057`*^9}, {3.6707217878559055`*^9, 
   3.6707218206219053`*^9}, {3.6707218661119056`*^9, 
   3.6707219472919054`*^9}, {3.6707219824719057`*^9, 
   3.6707219868019056`*^9}, {3.670722048271906*^9, 3.6707220931819057`*^9}, {
   3.670722132981906*^9, 3.6707221718719053`*^9}, {3.670726288541872*^9, 
   3.670726343204272*^9}, {3.670726401782272*^9, 3.6707264076166716`*^9}, {
   3.670726590636377*^9, 3.670726594645628*^9}, {3.6707267250320997`*^9, 
   3.670726801254677*^9}, {3.6707626571768227`*^9, 3.670762723501916*^9}, {
   3.670763076604774*^9, 3.6707631486843157`*^9}, 3.6707631864342566`*^9, {
   3.6707632797531524`*^9, 3.670763326607153*^9}, {3.6707633823568215`*^9, 
   3.6707634095550785`*^9}, {3.670763477100552*^9, 3.670763495475999*^9}, {
   3.6707635568308716`*^9, 3.670763562159054*^9}, {3.6707636029595184`*^9, 
   3.670763626156972*^9}, {3.670763672411095*^9, 3.670763708758399*^9}, {
   3.670764019926554*^9, 3.670764021119558*^9}, {3.670764052339856*^9, 
   3.670764052481399*^9}, 3.6707641412479467`*^9, {3.670764382594791*^9, 
   3.6707644226768045`*^9}, {3.6707648008603716`*^9, 3.670764818423679*^9}, {
   3.6707648574066057`*^9, 3.670764960497225*^9}, {3.6707663813885994`*^9, 
   3.6707663884074764`*^9}, {3.670766507614402*^9, 3.670766515233183*^9}, {
   3.6707665714741826`*^9, 3.6707665957103043`*^9}, {3.670766901060067*^9, 
   3.670766960018151*^9}, {3.670767001224209*^9, 3.6707670277012463`*^9}, {
   3.670767071498308*^9, 3.670767089627334*^9}, {3.6707671359684*^9, 
   3.670767274966598*^9}, {3.6707673236386724`*^9, 3.6707673239686728`*^9}, {
   3.6707684595249214`*^9, 3.670768459964922*^9}, {3.6707685136989975`*^9, 
   3.670768569992077*^9}, {3.6707686016791215`*^9, 3.670768613139138*^9}, {
   3.670768731003385*^9, 3.6707688315435286`*^9}, {3.670768874207589*^9, 
   3.6707688934536176`*^9}, {3.6707698450877776`*^9, 
   3.6707698792100477`*^9}, {3.670770496189084*^9, 3.6707705009265842`*^9}, 
   3.670775995428158*^9, 3.670776166703401*^9, {3.670776664624106*^9, 
   3.6707766664516087`*^9}, {3.670777102795731*^9, 3.670777108615739*^9}, {
   3.6707771461607924`*^9, 3.6707771553608055`*^9}, {3.6707771956508617`*^9, 
   3.670777379601122*^9}, {3.6707774188346844`*^9, 3.670777473822263*^9}, {
   3.67077750702231*^9, 3.670777523972334*^9}, {3.6707775581873817`*^9, 
   3.670777564509891*^9}, {3.6707779131878867`*^9, 3.6707779194078956`*^9}, {
   3.6710165041595955`*^9, 3.671016509849603*^9}, 3.6710169820402665`*^9, {
   3.6710180678992915`*^9, 3.6710180695092936`*^9}, {3.6710181144343567`*^9, 
   3.6710181499494066`*^9}, {3.6710186288400793`*^9, 3.67101862937008*^9}, 
   3.671020002187008*^9, {3.671021091537866*^9, 3.6710210925678673`*^9}, {
   3.671021132797925*^9, 3.6710211342279267`*^9}, {3.671025265499901*^9, 
   3.6710252669149227`*^9}, {3.6710253336509476`*^9, 
   3.6710253831892085`*^9}, {3.6710254759552097`*^9, 3.67102568241848*^9}, {
   3.6710257288111625`*^9, 3.671025830656545*^9}, {3.6710258702091923`*^9, 
   3.671025881574238*^9}, {3.671025916199371*^9, 3.671026038352332*^9}, {
   3.6710281718627434`*^9, 3.6710281807877755`*^9}, {3.671028247520486*^9, 
   3.671028253640495*^9}, {3.671028477605813*^9, 3.6710284886458282`*^9}, {
   3.6710288126462865`*^9, 3.6710288593988523`*^9}, {3.6710288980889072`*^9, 
   3.671028904286416*^9}, {3.671029150836765*^9, 3.6710291567417736`*^9}, {
   3.6710347762143145`*^9, 3.6710347803193207`*^9}, {3.671034811924367*^9, 
   3.6710348219668818`*^9}, {3.671034893946988*^9, 3.671034955537079*^9}, {
   3.6711127112370605`*^9, 3.6711127115670614`*^9}, {3.6711129009173265`*^9, 
   3.6711129165773487`*^9}, {3.671112978497435*^9, 3.6711130079274764`*^9}, {
   3.671113129487646*^9, 3.671113142727665*^9}, {3.6711131923277345`*^9, 
   3.6711131974077415`*^9}, {3.671113230637788*^9, 3.671113428508065*^9}, {
   3.671113825538621*^9, 3.6711138329586315`*^9}, {3.6711138737086887`*^9, 
   3.6711139173687496`*^9}, {3.671114346572399*^9, 3.6711143533124084`*^9}, {
   3.671117162900413*^9, 3.6711171891824555`*^9}, {3.671117303699644*^9, 
   3.6711173038396444`*^9}, {3.671117556879062*^9, 3.6711176887752757`*^9}, {
   3.671117769072407*^9, 3.6711178297265043`*^9}, {3.6711178853105965`*^9, 
   3.6711179182766514`*^9}, {3.6711179771227493`*^9, 
   3.6711179844567614`*^9}, {3.6711180484948645`*^9, 3.671118077829912*^9}, {
   3.671118118679979*^9, 3.671118122350985*^9}, {3.6711181688040595`*^9, 
   3.6711182742322316`*^9}, {3.671128487150755*^9, 3.671128488890755*^9}, {
   3.671129462903758*^9, 3.6711294907562585`*^9}, 3.6711295423587584`*^9, {
   3.6711301958432584`*^9, 3.6711301989432583`*^9}, {3.6711302343832583`*^9, 
   3.671130269523258*^9}, {3.6711303005852585`*^9, 3.6711303030352583`*^9}, {
   3.6711304781002584`*^9, 3.6711305480427585`*^9}, {3.6711331215182133`*^9, 
   3.671133136097443*^9}, {3.6711334367371616`*^9, 3.671133440785044*^9}, {
   3.6711335723653717`*^9, 3.671133572760356*^9}, 3.6711340721678524`*^9, {
   3.6711346448242774`*^9, 3.6711346454502773`*^9}, {3.671134684815277*^9, 
   3.6711347628252773`*^9}, {3.6711348051632776`*^9, 
   3.6711348119722776`*^9}, {3.671135577163578*^9, 3.67113567198958*^9}, {
   3.6711359550203986`*^9, 3.671136052017413*^9}, {3.6711921923310795`*^9, 
   3.67119219918609*^9}, {3.671201881855248*^9, 3.671201908157787*^9}, {
   3.6712019500378513`*^9, 3.6712019946879187`*^9}, {3.671202362890976*^9, 
   3.6712023709859886`*^9}, {3.6712024450086*^9, 3.6712024825861573`*^9}, {
   3.671202674391451*^9, 3.671202689758975*^9}, {3.6712123035498037`*^9, 
   3.6712123417966747`*^9}, {3.671212372105003*^9, 3.6712123842441177`*^9}, {
   3.6712125277261004`*^9, 3.6712125296351185`*^9}, {3.6712172323024807`*^9, 
   3.6712172362924876`*^9}, {3.6712308332531843`*^9, 
   3.6712308440307007`*^9}, {3.6712309770059595`*^9, 
   3.6712311482137194`*^9}, {3.6713093850602455`*^9, 3.671309421770297*^9}, {
   3.671309829038906*^9, 3.671310038189111*^9}, {3.671310340791934*^9, 
   3.6713103466219835`*^9}, {3.6713103903473577`*^9, 
   3.6713108380261726`*^9}, {3.6713109103817863`*^9, 
   3.6713109163793373`*^9}, {3.6713109720673103`*^9, 
   3.6713110091526318`*^9}, {3.671312084528164*^9, 3.6713120857081823`*^9}, {
   3.671312346929694*^9, 3.6713123478797092`*^9}, {3.671312827904399*^9, 
   3.6713128679694567`*^9}, {3.671313077092261*^9, 3.6713130969897904`*^9}, {
   3.6713154235126033`*^9, 3.6713154546326475`*^9}, {3.6713155539527884`*^9, 
   3.671315572582814*^9}, {3.6713156646504445`*^9, 3.6713157016229973`*^9}, {
   3.67131578097561*^9, 3.6713157853456163`*^9}, {3.6713159584758615`*^9, 
   3.6713160185109463`*^9}, {3.6713160637635107`*^9, 3.671316093273552*^9}, {
   3.671316158186144*^9, 3.6713161588261447`*^9}, {3.6713611614380074`*^9, 
   3.6713611914380493`*^9}, {3.6713612259280977`*^9, 
   3.6713612556981397`*^9}, {3.6713613029832077`*^9, 
   3.6713614032633476`*^9}, {3.671361444193405*^9, 3.6713614444834056`*^9}, {
   3.671361546781049*^9, 3.671361641251181*^9}, {3.671361675271229*^9, 
   3.6713616855712433`*^9}, {3.671361719721291*^9, 3.671361787081385*^9}, {
   3.6713618789340143`*^9, 3.6713619598341274`*^9}, {3.671362048194251*^9, 
   3.671362163354413*^9}, {3.6713622461145287`*^9, 3.6713622469945297`*^9}, {
   3.6713623487446723`*^9, 3.6713623972347403`*^9}, {3.6713624640848336`*^9, 
   3.6713624994048834`*^9}, {3.6713625590249667`*^9, 
   3.6713625819449987`*^9}, {3.67136762610975*^9, 3.671367635809763*^9}, {
   3.671367707469864*^9, 3.6713677267898903`*^9}, {3.6713678525800667`*^9, 
   3.6713678772201014`*^9}, {3.671367981580247*^9, 3.671367991360261*^9}, {
   3.6713681225904446`*^9, 3.6713681243404474`*^9}, {3.6713681708205123`*^9, 
   3.6713681810805264`*^9}, {3.6713682424706125`*^9, 3.671368280154667*^9}, {
   3.6713683460847588`*^9, 3.6713684765559464`*^9}, {3.6713686229685335`*^9, 
   3.6713686238485346`*^9}, {3.6713686945486336`*^9, 3.671368794908774*^9}, {
   3.671368826768819*^9, 3.671368850658852*^9}, {3.6713690257001038`*^9, 
   3.6713690455001316`*^9}, 3.6713714130322685`*^9, {3.6713778843911715`*^9, 
   3.671377925635236*^9}, {3.6713779768573084`*^9, 3.6713779817973156`*^9}, 
   3.671378131517525*^9, 3.671378539480098*^9, {3.671378596920178*^9, 
   3.6713786126202*^9}, 3.671378927542642*^9, {3.6713789653126945`*^9, 
   3.671378967722698*^9}, {3.6713789993627424`*^9, 3.6713790836338606`*^9}, {
   3.6713791163439064`*^9, 3.6713791165439067`*^9}, {3.671379154023959*^9, 
   3.671379158213965*^9}, {3.6713792247940583`*^9, 3.6713792373140755`*^9}, {
   3.6713793150041847`*^9, 3.6713793213141937`*^9}, {3.6713796052845907`*^9, 
   3.671379699644723*^9}, {3.6713798601909175`*^9, 3.6713798637009225`*^9}, {
   3.6713798985829716`*^9, 3.6713799048129807`*^9}, {3.6713799558750525`*^9, 
   3.6713799563750534`*^9}, {3.6713799915151024`*^9, 
   3.6713800251051493`*^9}, {3.6713801628413672`*^9, 3.671380172791381*^9}, 
   3.6713806755440865`*^9, {3.671380723334156*^9, 3.671380777704232*^9}, {
   3.6713808874943857`*^9, 3.671380927312445*^9}, {3.6713809588924894`*^9, 
   3.6713809916925354`*^9}, {3.6713811019726896`*^9, 3.671381139432742*^9}, {
   3.6713819096807566`*^9, 3.6713819267307806`*^9}, {3.671381966670854*^9, 
   3.67138209183803*^9}, {3.6713821279380803`*^9, 3.6713821345280895`*^9}, {
   3.671382165138132*^9, 3.671382167108135*^9}, {3.6713822766682887`*^9, 
   3.6713822978683186`*^9}, {3.6713823559783993`*^9, 
   3.6713823769584293`*^9}, {3.671382424948496*^9, 3.671382429989503*^9}, {
   3.671382588797735*^9, 3.671382596307746*^9}, {3.671407158730365*^9, 
   3.6714071644503727`*^9}, {3.6714072741430273`*^9, 
   3.6714072984655614`*^9}, {3.671419845564005*^9, 3.671419883434058*^9}, {
   3.6714262590360847`*^9, 3.671426275623608*^9}, {3.6714278267256985`*^9, 
   3.6714278327932997`*^9}, {3.6714278856136117`*^9, 3.67142789917132*^9}, {
   3.671427941146965*^9, 3.6714280190081606`*^9}, 3.671428083024144*^9, {
   3.6714480867112494`*^9, 3.671448125756482*^9}, {3.671448196594534*^9, 
   3.671448200604763*^9}, {3.671448500750931*^9, 3.671448569687874*^9}, {
   3.6714504983281856`*^9, 3.6714505090397987`*^9}, 3.6714532534138994`*^9, 
   3.6714533111762037`*^9, {3.6714533540266542`*^9, 3.671453373514769*^9}, {
   3.6714536186657906`*^9, 3.6714536224370065`*^9}, {3.671453652688737*^9, 
   3.671453688809803*^9}, {3.6714537354864726`*^9, 3.6714537377376013`*^9}, {
   3.671454038564808*^9, 3.6714540528996277`*^9}, {3.6714540867975664`*^9, 
   3.6714540874946065`*^9}, {3.671454219091133*^9, 3.6714542601794834`*^9}, 
   3.6714543128464956`*^9, {3.671454353507821*^9, 3.671454359832183*^9}, {
   3.6714544107540956`*^9, 3.6714544263729887`*^9}, 3.671454477000885*^9, {
   3.6714693364867783`*^9, 3.6714693405880127`*^9}, {3.6714694421618223`*^9, 
   3.671469449968269*^9}, {3.6714694855143023`*^9, 3.671469495060848*^9}, {
   3.671469529101795*^9, 3.6714696699598513`*^9}, {3.6714697673234205`*^9, 
   3.67146994809876*^9}, {3.6714765620792627`*^9, 3.6714765690096593`*^9}, {
   3.6714766767108192`*^9, 3.67147667881494*^9}, {3.6714767182411947`*^9, 
   3.671476722842458*^9}, 3.6714772670775867`*^9, {3.6714789298156896`*^9, 
   3.6714789359010377`*^9}, {3.671494895175892*^9, 3.6714949024483075`*^9}, {
   3.671494948810959*^9, 3.671494980570776*^9}, {3.6714961703888297`*^9, 
   3.6714961720509243`*^9}, {3.671497120361165*^9, 3.6714971243923955`*^9}, {
   3.671497157809307*^9, 3.6714971603274508`*^9}, {3.671542960563069*^9, 
   3.6715429957551184`*^9}, {3.6715525000287952`*^9, 3.671552515922704*^9}, {
   3.6715525460194254`*^9, 3.671552565400534*^9}, {3.671832981315166*^9, 
   3.6718330729334064`*^9}, {3.6718331294636393`*^9, 
   3.6718331578212614`*^9}, {3.6718331999226694`*^9, 
   3.6718332130504203`*^9}, {3.6718332466683435`*^9, 3.671833313436162*^9}, {
   3.6718333778658476`*^9, 3.6718333844702253`*^9}, {3.6718335025079765`*^9, 
   3.6718335049671173`*^9}, {3.671833595368288*^9, 3.6718336986911974`*^9}, 
   3.671836960605768*^9, {3.6718373306259327`*^9, 3.6718373416655636`*^9}, {
   3.6718469815094504`*^9, 3.671846989641962*^9}, {3.6718472605549083`*^9, 
   3.671847265837416*^9}, {3.6718476100504026`*^9, 3.6718476312304325`*^9}, {
   3.67184769252052*^9, 3.6718476971905265`*^9}, {3.6718480948225927`*^9, 
   3.6718481001626*^9}, {3.6718481659026933`*^9, 3.671848210697757*^9}, {
   3.6718484740446324`*^9, 3.6718484835546455`*^9}, {3.671848519304696*^9, 
   3.6718485374797225`*^9}, {3.6718485820097847`*^9, 
   3.6718486054623184`*^9}, {3.6719021076613827`*^9, 
   3.6719022098652287`*^9}, {3.6719022734548655`*^9, 3.671902285163535*^9}, {
   3.6719023463190327`*^9, 3.671902357686683*^9}, {3.671902441429473*^9, 
   3.671902452515107*^9}, {3.6719025163887606`*^9, 3.671902522539112*^9}, {
   3.671902614132351*^9, 3.6719026382417297`*^9}, {3.671902669611524*^9, 
   3.6719026942079315`*^9}, {3.671902805861317*^9, 3.671902829986697*^9}, {
   3.671902866647794*^9, 3.6719030263809304`*^9}, {3.6719042569603157`*^9, 
   3.6719042742743053`*^9}, 3.6719043555589547`*^9, {3.671904595277666*^9, 
   3.6719046136077147`*^9}, {3.6719046946223483`*^9, 
   3.6719047154525394`*^9}, {3.6719051694495068`*^9, 
   3.6719053565852103`*^9}, {3.6719053988296266`*^9, 3.671905416949663*^9}, {
   3.6719055710214753`*^9, 3.671905602449273*^9}, {3.671937434477701*^9, 
   3.671937456504961*^9}, {3.6719375773348722`*^9, 3.671937579254982*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"interface", "[", 
   RowBox[{"0", ",", "0.9"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "just", " ", "put", " ", "in", " ", "some", " ", "values", " ", "to", " ", 
    "demo", " ", "this", " ", 
    RowBox[{"function", ".", " ", "The"}], " ", "starting", " ", "mass", " ", 
    "is", " ", "determined", " ", "by", " ", "the", " ", "most", " ", 
    "recent", " ", "call", " ", "of", " ", "the", " ", 
    "stellarEvolutionSimulator", " ", "function"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6719372099108567`*^9, 3.671937235217304*^9}, {
  3.671937271191362*^9, 3.6719372715473824`*^9}, {3.6719373188040853`*^9, 
  3.6719374034409266`*^9}, {3.67193767625353*^9, 3.6719377268754253`*^9}, {
  3.6719382564737167`*^9, 3.671938278892999*^9}}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`mass$$ = 9., $CellContext`radius$$ = 
  3.8023298852970173`, $CellContext`luminosity$$ = 
  3846.756798490475, $CellContext`surfaceTemp$$ = 
  23331.26465163664, $CellContext`centerTemp$$ = 
  2.961107197984168*^7, $CellContext`coreHydrogen$$ = 
  0.699007502, $CellContext`coreHelium$$ = 
  0.281392784, $CellContext`coreCarbon$$ = 
  0.000143083832, $CellContext`coreNitrogen$$ = 
  0.012606908, $CellContext`coreOxygen$$ = 
  0.00143862718, $CellContext`startReal$$ = 0., $CellContext`stopReal$$ = 
  2.819678985*^7}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`age$$ = 0., $CellContext`checkBox$$ = 
     False, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`checkBox$$], False, "Core Radius Scaling"}, {
       False, True}}, {{
        Hold[$CellContext`age$$], 0., "Age: 0 to 28,196,790 years"}, 0., 
       2.819678985*^7}}, Typeset`size$$ = {963., {278., 281.}}, 
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
     True, $CellContext`checkBox$160004$$ = False, $CellContext`age$160005$$ =
      0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, 
       "Variables" :> {$CellContext`age$$ = 0., $CellContext`checkBox$$ = 
         False}, "ControllerVariables" :> {
         Hold[$CellContext`checkBox$$, $CellContext`checkBox$160004$$, False], 
         Hold[$CellContext`age$$, $CellContext`age$160005$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, 
       "Body" :> ($CellContext`mass$$ = \
$CellContext`massFunction[$CellContext`age$$]; $CellContext`radius$$ = \
$CellContext`radiusFunction[$CellContext`age$$]; $CellContext`luminosity$$ = \
$CellContext`luminosityFunction[$CellContext`age$$]; \
$CellContext`surfaceTemp$$ = \
$CellContext`surfaceTempFunction[$CellContext`age$$]; \
$CellContext`centerTemp$$ = \
$CellContext`centerTempFunction[$CellContext`age$$]; \
$CellContext`coreHydrogen$$ = $CellContext`mHFunction[$CellContext`age$$]; \
$CellContext`coreHelium$$ = $CellContext`mHeFunction[$CellContext`age$$]; \
$CellContext`coreCarbon$$ = $CellContext`mCFunction[$CellContext`age$$]; \
$CellContext`coreNitrogen$$ = $CellContext`mNFunction[$CellContext`age$$]; \
$CellContext`coreOxygen$$ = $CellContext`mOFunction[$CellContext`age$$]; 
        GraphicsGrid[{{
            Graphics3D[
             $CellContext`exterior[$CellContext`age$$], Background -> Black, 
             Boxed -> True, AxesStyle -> White, 
             PlotRange -> $CellContext`sphereRange[$CellContext`radius$$], 
             Axes -> True, ImageSize -> Large, PlotLabel -> "Exterior"], 
            Panel[
             Graphics[{FontSize -> 14., 
               Text[
                StringJoin["Mass: ", 
                 ToString[
                  NumberForm[$CellContext`mass$$, DigitBlock -> 3]], 
                 " M\[CircleDot]", "\nSurface Temperature: ", 
                 ToString[
                  NumberForm[
                   Round[$CellContext`surfaceTemp$$], DigitBlock -> 3]], 
                 "\[Degree]K", "\nCore Tempurature: ", 
                 ToString[
                  NumberForm[
                   Round[$CellContext`centerTemp$$], DigitBlock -> 3]], 
                 "\[Degree]K", "\nRadius: ", 
                 ToString[
                  
                  NumberForm[$CellContext`radius$$, DigitBlock -> 3, 
                   NumberSeparator -> ","]], " R\[CircleDot]", 
                 "\nLuminosity: ", 
                 ToString[
                  
                  AccountingForm[$CellContext`luminosity$$, DigitBlock -> 3, 
                   NumberSeparator -> ","]], " L\[CircleDot]", "\nAge: ", 
                 ToString[
                  
                  AccountingForm[$CellContext`age$$, DigitBlock -> 3, 
                   NumberSeparator -> ","]], " Years"], Alignment -> Left]}], 
             ImageSize -> {350, 250}], SpanFromLeft}, {
            
            BarChart[{$CellContext`mHFunction[$CellContext`age$$] 
              10^2, $CellContext`mHeFunction[$CellContext`age$$] 
              10^2, $CellContext`mCFunction[$CellContext`age$$] 
              10^2, $CellContext`mNFunction[$CellContext`age$$] 
              10^2, $CellContext`mOFunction[$CellContext`age$$] 10^2}, 
             PlotRange -> 100, ChartLabels -> {"H", "He", "C", "N", "O"}, 
             PlotLabel -> "Percent Composition of Core by Mass"], 
            Graphics[
             If[$CellContext`checkBox$$, {{Red, 
                Tooltip[
                 Circle[{0., 0.}, 
                  $CellContext`radiusFunction[$CellContext`age$$]], 
                 "Star Radius"]}, 
               $CellContext`core[$CellContext`age$$]}, 
              $CellContext`core[$CellContext`age$$]], PlotLabel -> 
             "Central Element Composition by Radius", Axes -> True, 
             Background -> Black], 
            Show[
             
             ListPlot[{{$CellContext`surfaceTemp$$, \
$CellContext`luminosity$$}}, PlotStyle -> {
                PointSize[Large], Purple}, 
              ScalingFunctions -> {"Reverse", "Log"}], 
             ParametricPlot[{
               $CellContext`surfaceTempFunction[$CellContext`u], 
               $CellContext`luminosityFunction[$CellContext`u]}, \
{$CellContext`u, $CellContext`startReal$$, $CellContext`stopReal$$}, 
              PerformanceGoal -> "Quality", PlotStyle -> {Blue, Dashed}, 
              ScalingFunctions -> {"Reverse", "Log"}], 
             PlotRange -> {{0., -$CellContext`maxTSurface}, {
                Log[$CellContext`minLuminosity], 
                Log[$CellContext`maxLuminosity]}}, Frame -> True, GridLines -> 
             Automatic, Background -> LightGray, FrameStyle -> Directive[Red],
              FrameLabel -> {
              "\!\(\*SubscriptBox[\(T\), \(s\)]\)", "L\[CircleDot]"}, 
             PlotLabel -> "HRD", Axes -> True, AxesOrigin -> {0., 0.}]}}, 
          ContentSelectable -> False, ImageSize -> Full, Background -> 
          Black]), 
       "Specifications" :> {{{$CellContext`checkBox$$, False, 
           "Core Radius Scaling"}, {
          False, True}}, {{$CellContext`age$$, 0., 
           "Age: 0 to 28,196,790 years"}, 0., 2.819678985*^7}}, 
       "Options" :> {ContentSize -> {1035., 625.}}, "DefaultOptions" :> {}],
      ImageSizeCache->{1004., {337., 344.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{},
  Initialization:>{$CellContext`massFunction = 
    InterpolatingFunction[{{0., 3.13297665*^7}}, {
      5, 7, 0, {1070}, {2}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1: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
qafYElvXm7DeNvLhAfTnBBEFYczzi2FdzbPkJWnkyteIO271171Lnv2AdfWq
yEMbmJfbQmz4j/5PHYyP7Caf+4PcUMIU+f7DTMEzx5hy/mWIC+RNee6KxE4V
U+RvWsy8gcup52gxP9SQ8aPm5Nl25MPXE6O2Ms/Ul/V19tG3+wh5TyT5nTP0
VZ8n17zGdTzzqIcUsV5rBfNiG/vz2hh3/tiv9xH9hpkBZWTM4Ds52wy+sYup
5642Q/18SzN+32ai7H76TOPIC7Pp31fHOsq9jDsrrYV+1n4t73sieUPHWq6n
b871/jLnu7hyHef8LjF8kQW/P9GCPglLvn+OluzDLUv4jEZZcT1HK87fFWJo
H3V/XWu+4yes+a40W0OfM9sGqL6V2J5tw/enj3ysli3qSIbasn915B3T7PjO
bLDje5htx7oD7fm9JvbgNclEmy/EZQYOnKdUB/6OiDvSZ++I73C4Sxyt5MS8
KCe+pxLO/A5/4pQeZ57Lbhfek5GuQO0LrtCvGrqx7oD1nNui9ZyTM+7gloc9
6Du2AfqVSxvBld5u4jp6W/hOlW1FnbeeXsDTi7x5brLbeW7TdvL3RNOPc+vr
z3erLJD3UWMvfycf/Al/uncQfwfUg/kuy4ewrmIosHdNBN+jmCi+OwNj2MeI
OPpXJnD+Zyfz92vVeb4zaem8V/ZXOIdeWcDK57fg//5nPudZpojvuX8p8ivO
VPBd3l+LeMFvTzhP15t5ThIv6J/zH3Sxue38XRjynud37yPRvptz0NzD7xX+
4BwdEQtEv24PDMT7WC0ZiL7XSgVi/b+HA1uiRkFfsHYMuKL4ePh3xE4EhspN
Rvx1uCzqzemUC8S5LZMH/75jBuKVCbOQf+XmbORp/a0ElLs5B3p9wjzwPj8V
8CFaC5CvJ6EKrp21ENzUchHrdS7mPvzVoA/sWYp1P3ksA19RrgH0V1iO/Pne
AmDnDSF8M9/+AZSVWcl9qq9CvNhMC3y/82qgt7s285x1gEbmulj/6nI9xJOn
6aOOTbc+4g6FBjzXI4bArtVruJ8+ovclI/i+rjVGHbWvxIgoE6DxHFPE8/NM
8X0TdMzAgyvMsM4y07XwWVau5TnpmUNfmW8Ov/KCdax/Zh3Wi5O0AJ++0YL7
LSWuULSEPmmfJfIW1Vmizo3ZVtATt1uBD8+3wnoyg62R165rzT6GkEeWWCNe
IGHDc9Cw4bn72EA/m00Ul7QFCl1tOTePbVEnx8GOepsd9HP29sgfdt+e3zvF
gfO03oHzkOGAPMEbYouCI/vo5Ig6ufGO/K56cmlpJ/ZLywm+uQHkuVnEkm9O
8O/VdAa673HGPppvkyd2O3NeVFzYHxcXxBViya+WurAPfeRqKq48ZwdX8J6I
fl7oyvn56op8cxU3xNM8iF4X3RCP6XLjd+uuZ1+ured8KrsDrxe685x9PTjv
azYAM0w2Ij7j8Cb258fm/jnaClxS6wVfr4UP59t2J9Y93LuL82K2J5D/vzwA
X55sMNY/eSkEcU/NMPh1Hh3nOg4n2cfzpxAf/SCB9/G3JOQ3nUrhnA08D0zf
mMZ+1KRzXzcz4bdTucb578xi3bCb0LPn5fLeP7wFvXFDHvQtUnf43nz7G7xt
zV2ei8M99tGrEOvr/3mf9zCyCPqr5H94T9qLOc8+D9j/0lLu+/1DnkdLGfuS
Wg70eElUmvWI67oQ01KIHq39+vwKzkVABdYxy6ngPXhVgfXFRlXy3ZpXyfdW
rRLx0lWVfHeMK5FXaEv9ngf5TF/G3Q8Tp8dTl81iPZmH1Ee/ICp+o75Pugp1
1JWqsN5BIXmIFdHbp4rzHMa4Vno/FhPj24h3BlWzP7OqeY5axER36vIhRKnM
avg7Kqs5l5+JElNqeD8ENXw/XGp4Lw6TW2fWsN9VNfyuL9RVZWs510Ji6/pa
vvNhtXz/btZyv89r+T4OrwPvXlLHe+hWx3mKIobcpS7/gbx02mP23fAx+xtI
3pxOjH/ymPdMqp7vyRJihRtx74l6/n4V1nO+P9Zz//IN0N3WNKCuX2ADf7fS
G/g7Uk/UlnwCn6HqE+S9tX/C/h59grznN4lKL4gfRjTyfV/SyP07NnJejjRy
Dq738yeNvF/iTTx/xSaej0ET19vWxP2cJD+Zy/ikpibO5w9igdxT9kuTaGr3
lO9EwNP++02UyHnKe1lD35TOp7znw5p5D2Y1c240mzn366hLeFKPOUT9YHwz
8qtvNHN+H/THnxEnfaKvb/AzxB2nPOPvuvIz9lFAXGTSz537uQ/9fgee8T2K
eob1o5KJAdfo68gn/1ROf0QT6xe/Jo/tZv6wgS3s0yhi/eQW5C1UaOHv2IIW
zqF6C+dbi7qXEbm6Ff15zsz/uon+ju2MJ+8mTjnEuEUY43bRrLMggbzuHOuY
ZdJ3Jau/Xh7jiwpZJ6SUWPqIOKyGqFdP3PiEdY42EU8/Jc5sZj13Ef4fDouG
/w==
      "], {Developer`PackedArrayForm, CompressedData["
1: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
korUpCEt6UhPBv4Hz7oK+g==
       "], CompressedData["
1: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
4N5s3x+4S9zDlthod0yA6Eu/ZXUC/h/BMINK
       "]}, {Automatic}], $CellContext`radiusFunction = 
    InterpolatingFunction[{{0., 3.13297665*^7}}, {
      5, 7, 0, {1070}, {2}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1: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
qafYElvXm7DeNvLhAfTnBBEFYczzi2FdzbPkJWnkyteIO271171Lnv2AdfWq
yEMbmJfbQmz4j/5PHYyP7Caf+4PcUMIU+f7DTMEzx5hy/mWIC+RNee6KxE4V
U+RvWsy8gcup52gxP9SQ8aPm5Nl25MPXE6O2Ms/Ul/V19tG3+wh5TyT5nTP0
VZ8n17zGdTzzqIcUsV5rBfNiG/vz2hh3/tiv9xH9hpkBZWTM4Ds52wy+sYup
5642Q/18SzN+32ai7H76TOPIC7Pp31fHOsq9jDsrrYV+1n4t73sieUPHWq6n
b871/jLnu7hyHef8LjF8kQW/P9GCPglLvn+OluzDLUv4jEZZcT1HK87fFWJo
H3V/XWu+4yes+a40W0OfM9sGqL6V2J5tw/enj3ysli3qSIbasn915B3T7PjO
bLDje5htx7oD7fm9JvbgNclEmy/EZQYOnKdUB/6OiDvSZ++I73C4Sxyt5MS8
KCe+pxLO/A5/4pQeZ57Lbhfek5GuQO0LrtCvGrqx7oD1nNui9ZyTM+7gloc9
6Du2AfqVSxvBld5u4jp6W/hOlW1FnbeeXsDTi7x5brLbeW7TdvL3RNOPc+vr
z3erLJD3UWMvfycf/Al/uncQfwfUg/kuy4ewrmIosHdNBN+jmCi+OwNj2MeI
OPpXJnD+Zyfz92vVeb4zaem8V/ZXOIdeWcDK57fg//5nPudZpojvuX8p8ivO
VPBd3l+LeMFvTzhP15t5ThIv6J/zH3Sxue38XRjynud37yPRvptz0NzD7xX+
4BwdEQtEv24PDMT7WC0ZiL7XSgVi/b+HA1uiRkFfsHYMuKL4ePh3xE4EhspN
Rvx1uCzqzemUC8S5LZMH/75jBuKVCbOQf+XmbORp/a0ElLs5B3p9wjzwPj8V
8CFaC5CvJ6EKrp21ENzUchHrdS7mPvzVoA/sWYp1P3ksA19RrgH0V1iO/Pne
AmDnDSF8M9/+AZSVWcl9qq9CvNhMC3y/82qgt7s285x1gEbmulj/6nI9xJOn
6aOOTbc+4g6FBjzXI4bArtVruJ8+ovclI/i+rjVGHbWvxIgoE6DxHFPE8/NM
8X0TdMzAgyvMsM4y07XwWVau5TnpmUNfmW8Ov/KCdax/Zh3Wi5O0AJ++0YL7
LSWuULSEPmmfJfIW1Vmizo3ZVtATt1uBD8+3wnoyg62R165rzT6GkEeWWCNe
IGHDc9Cw4bn72EA/m00Ul7QFCl1tOTePbVEnx8GOepsd9HP29sgfdt+e3zvF
gfO03oHzkOGAPMEbYouCI/vo5Ig6ufGO/K56cmlpJ/ZLywm+uQHkuVnEkm9O
8O/VdAa673HGPppvkyd2O3NeVFzYHxcXxBViya+WurAPfeRqKq48ZwdX8J6I
fl7oyvn56op8cxU3xNM8iF4X3RCP6XLjd+uuZ1+ured8KrsDrxe685x9PTjv
azYAM0w2Ij7j8Cb258fm/jnaClxS6wVfr4UP59t2J9Y93LuL82K2J5D/vzwA
X55sMNY/eSkEcU/NMPh1Hh3nOg4n2cfzpxAf/SCB9/G3JOQ3nUrhnA08D0zf
mMZ+1KRzXzcz4bdTucb578xi3bCb0LPn5fLeP7wFvXFDHvQtUnf43nz7G7xt
zV2ei8M99tGrEOvr/3mf9zCyCPqr5H94T9qLOc8+D9j/0lLu+/1DnkdLGfuS
Wg70eElUmvWI67oQ01KIHq39+vwKzkVABdYxy6ngPXhVgfXFRlXy3ZpXyfdW
rRLx0lWVfHeMK5FXaEv9ngf5TF/G3Q8Tp8dTl81iPZmH1Ee/ICp+o75Pugp1
1JWqsN5BIXmIFdHbp4rzHMa4Vno/FhPj24h3BlWzP7OqeY5axER36vIhRKnM
avg7Kqs5l5+JElNqeD8ENXw/XGp4Lw6TW2fWsN9VNfyuL9RVZWs510Ji6/pa
vvNhtXz/btZyv89r+T4OrwPvXlLHe+hWx3mKIobcpS7/gbx02mP23fAx+xtI
3pxOjH/ymPdMqp7vyRJihRtx74l6/n4V1nO+P9Zz//IN0N3WNKCuX2ADf7fS
G/g7Uk/UlnwCn6HqE+S9tX/C/h59grznN4lKL4gfRjTyfV/SyP07NnJejjRy
Dq738yeNvF/iTTx/xSaej0ET19vWxP2cJD+Zy/ikpibO5w9igdxT9kuTaGr3
lO9EwNP++02UyHnKe1lD35TOp7znw5p5D2Y1c240mzn366hLeFKPOUT9YHwz
8qtvNHN+H/THnxEnfaKvb/AzxB2nPOPvuvIz9lFAXGTSz537uQ/9fgee8T2K
eob1o5KJAdfo68gn/1ROf0QT6xe/Jo/tZv6wgS3s0yhi/eQW5C1UaOHv2IIW
zqF6C+dbi7qXEbm6Ff15zsz/uon+ju2MJ+8mTjnEuEUY43bRrLMggbzuHOuY
ZdJ3Jau/Xh7jiwpZJ6SUWPqIOKyGqFdP3PiEdY42EU8/Jc5sZj13Ef4fDouG
/w==
      "], {Developer`PackedArrayForm, CompressedData["
1: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
korUpCEt6UhPBv4Hz7oK+g==
       "], CompressedData["
1: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
fuY0Tw==
       "]}, {Automatic}], $CellContext`luminosityFunction = 
    InterpolatingFunction[{{0., 3.13297665*^7}}, {
      5, 7, 0, {1070}, {2}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1: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
qafYElvXm7DeNvLhAfTnBBEFYczzi2FdzbPkJWnkyteIO271171Lnv2AdfWq
yEMbmJfbQmz4j/5PHYyP7Caf+4PcUMIU+f7DTMEzx5hy/mWIC+RNee6KxE4V
U+RvWsy8gcup52gxP9SQ8aPm5Nl25MPXE6O2Ms/Ul/V19tG3+wh5TyT5nTP0
VZ8n17zGdTzzqIcUsV5rBfNiG/vz2hh3/tiv9xH9hpkBZWTM4Ds52wy+sYup
5642Q/18SzN+32ai7H76TOPIC7Pp31fHOsq9jDsrrYV+1n4t73sieUPHWq6n
b871/jLnu7hyHef8LjF8kQW/P9GCPglLvn+OluzDLUv4jEZZcT1HK87fFWJo
H3V/XWu+4yes+a40W0OfM9sGqL6V2J5tw/enj3ysli3qSIbasn915B3T7PjO
bLDje5htx7oD7fm9JvbgNclEmy/EZQYOnKdUB/6OiDvSZ++I73C4Sxyt5MS8
KCe+pxLO/A5/4pQeZ57Lbhfek5GuQO0LrtCvGrqx7oD1nNui9ZyTM+7gloc9
6Du2AfqVSxvBld5u4jp6W/hOlW1FnbeeXsDTi7x5brLbeW7TdvL3RNOPc+vr
z3erLJD3UWMvfycf/Al/uncQfwfUg/kuy4ewrmIosHdNBN+jmCi+OwNj2MeI
OPpXJnD+Zyfz92vVeb4zaem8V/ZXOIdeWcDK57fg//5nPudZpojvuX8p8ivO
VPBd3l+LeMFvTzhP15t5ThIv6J/zH3Sxue38XRjynud37yPRvptz0NzD7xX+
4BwdEQtEv24PDMT7WC0ZiL7XSgVi/b+HA1uiRkFfsHYMuKL4ePh3xE4EhspN
Rvx1uCzqzemUC8S5LZMH/75jBuKVCbOQf+XmbORp/a0ElLs5B3p9wjzwPj8V
8CFaC5CvJ6EKrp21ENzUchHrdS7mPvzVoA/sWYp1P3ksA19RrgH0V1iO/Pne
AmDnDSF8M9/+AZSVWcl9qq9CvNhMC3y/82qgt7s285x1gEbmulj/6nI9xJOn
6aOOTbc+4g6FBjzXI4bArtVruJ8+ovclI/i+rjVGHbWvxIgoE6DxHFPE8/NM
8X0TdMzAgyvMsM4y07XwWVau5TnpmUNfmW8Ov/KCdax/Zh3Wi5O0AJ++0YL7
LSWuULSEPmmfJfIW1Vmizo3ZVtATt1uBD8+3wnoyg62R165rzT6GkEeWWCNe
IGHDc9Cw4bn72EA/m00Ul7QFCl1tOTePbVEnx8GOepsd9HP29sgfdt+e3zvF
gfO03oHzkOGAPMEbYouCI/vo5Ig6ufGO/K56cmlpJ/ZLywm+uQHkuVnEkm9O
8O/VdAa673HGPppvkyd2O3NeVFzYHxcXxBViya+WurAPfeRqKq48ZwdX8J6I
fl7oyvn56op8cxU3xNM8iF4X3RCP6XLjd+uuZ1+ured8KrsDrxe685x9PTjv
azYAM0w2Ij7j8Cb258fm/jnaClxS6wVfr4UP59t2J9Y93LuL82K2J5D/vzwA
X55sMNY/eSkEcU/NMPh1Hh3nOg4n2cfzpxAf/SCB9/G3JOQ3nUrhnA08D0zf
mMZ+1KRzXzcz4bdTucb578xi3bCb0LPn5fLeP7wFvXFDHvQtUnf43nz7G7xt
zV2ei8M99tGrEOvr/3mf9zCyCPqr5H94T9qLOc8+D9j/0lLu+/1DnkdLGfuS
Wg70eElUmvWI67oQ01KIHq39+vwKzkVABdYxy6ngPXhVgfXFRlXy3ZpXyfdW
rRLx0lWVfHeMK5FXaEv9ngf5TF/G3Q8Tp8dTl81iPZmH1Ee/ICp+o75Pugp1
1JWqsN5BIXmIFdHbp4rzHMa4Vno/FhPj24h3BlWzP7OqeY5axER36vIhRKnM
avg7Kqs5l5+JElNqeD8ENXw/XGp4Lw6TW2fWsN9VNfyuL9RVZWs510Ji6/pa
vvNhtXz/btZyv89r+T4OrwPvXlLHe+hWx3mKIobcpS7/gbx02mP23fAx+xtI
3pxOjH/ymPdMqp7vyRJihRtx74l6/n4V1nO+P9Zz//IN0N3WNKCuX2ADf7fS
G/g7Uk/UlnwCn6HqE+S9tX/C/h59grznN4lKL4gfRjTyfV/SyP07NnJejjRy
Dq738yeNvF/iTTx/xSaej0ET19vWxP2cJD+Zy/ikpibO5w9igdxT9kuTaGr3
lO9EwNP++02UyHnKe1lD35TOp7znw5p5D2Y1c240mzn366hLeFKPOUT9YHwz
8qtvNHN+H/THnxEnfaKvb/AzxB2nPOPvuvIz9lFAXGTSz537uQ/9fgee8T2K
eob1o5KJAdfo68gn/1ROf0QT6xe/Jo/tZv6wgS3s0yhi/eQW5C1UaOHv2IIW
zqF6C+dbi7qXEbm6Ff15zsz/uon+ju2MJ+8mTjnEuEUY43bRrLMggbzuHOuY
ZdJ3Jau/Xh7jiwpZJ6SUWPqIOKyGqFdP3PiEdY42EU8/Jc5sZj13Ef4fDouG
/w==
      "], {Developer`PackedArrayForm, CompressedData["
1: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
korUpCEt6UhPBv4Hz7oK+g==
       "], CompressedData["
1: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
0ki0xzWj9QF92BGYNO1K4v8A1V3bRw==
       "]}, {Automatic}], $CellContext`surfaceTempFunction = 
    InterpolatingFunction[{{0., 3.13297665*^7}}, {
      5, 7, 0, {1070}, {2}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1: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
qafYElvXm7DeNvLhAfTnBBEFYczzi2FdzbPkJWnkyteIO271171Lnv2AdfWq
yEMbmJfbQmz4j/5PHYyP7Caf+4PcUMIU+f7DTMEzx5hy/mWIC+RNee6KxE4V
U+RvWsy8gcup52gxP9SQ8aPm5Nl25MPXE6O2Ms/Ul/V19tG3+wh5TyT5nTP0
VZ8n17zGdTzzqIcUsV5rBfNiG/vz2hh3/tiv9xH9hpkBZWTM4Ds52wy+sYup
5642Q/18SzN+32ai7H76TOPIC7Pp31fHOsq9jDsrrYV+1n4t73sieUPHWq6n
b871/jLnu7hyHef8LjF8kQW/P9GCPglLvn+OluzDLUv4jEZZcT1HK87fFWJo
H3V/XWu+4yes+a40W0OfM9sGqL6V2J5tw/enj3ysli3qSIbasn915B3T7PjO
bLDje5htx7oD7fm9JvbgNclEmy/EZQYOnKdUB/6OiDvSZ++I73C4Sxyt5MS8
KCe+pxLO/A5/4pQeZ57Lbhfek5GuQO0LrtCvGrqx7oD1nNui9ZyTM+7gloc9
6Du2AfqVSxvBld5u4jp6W/hOlW1FnbeeXsDTi7x5brLbeW7TdvL3RNOPc+vr
z3erLJD3UWMvfycf/Al/uncQfwfUg/kuy4ewrmIosHdNBN+jmCi+OwNj2MeI
OPpXJnD+Zyfz92vVeb4zaem8V/ZXOIdeWcDK57fg//5nPudZpojvuX8p8ivO
VPBd3l+LeMFvTzhP15t5ThIv6J/zH3Sxue38XRjynud37yPRvptz0NzD7xX+
4BwdEQtEv24PDMT7WC0ZiL7XSgVi/b+HA1uiRkFfsHYMuKL4ePh3xE4EhspN
Rvx1uCzqzemUC8S5LZMH/75jBuKVCbOQf+XmbORp/a0ElLs5B3p9wjzwPj8V
8CFaC5CvJ6EKrp21ENzUchHrdS7mPvzVoA/sWYp1P3ksA19RrgH0V1iO/Pne
AmDnDSF8M9/+AZSVWcl9qq9CvNhMC3y/82qgt7s285x1gEbmulj/6nI9xJOn
6aOOTbc+4g6FBjzXI4bArtVruJ8+ovclI/i+rjVGHbWvxIgoE6DxHFPE8/NM
8X0TdMzAgyvMsM4y07XwWVau5TnpmUNfmW8Ov/KCdax/Zh3Wi5O0AJ++0YL7
LSWuULSEPmmfJfIW1Vmizo3ZVtATt1uBD8+3wnoyg62R165rzT6GkEeWWCNe
IGHDc9Cw4bn72EA/m00Ul7QFCl1tOTePbVEnx8GOepsd9HP29sgfdt+e3zvF
gfO03oHzkOGAPMEbYouCI/vo5Ig6ufGO/K56cmlpJ/ZLywm+uQHkuVnEkm9O
8O/VdAa673HGPppvkyd2O3NeVFzYHxcXxBViya+WurAPfeRqKq48ZwdX8J6I
fl7oyvn56op8cxU3xNM8iF4X3RCP6XLjd+uuZ1+ured8KrsDrxe685x9PTjv
azYAM0w2Ij7j8Cb258fm/jnaClxS6wVfr4UP59t2J9Y93LuL82K2J5D/vzwA
X55sMNY/eSkEcU/NMPh1Hh3nOg4n2cfzpxAf/SCB9/G3JOQ3nUrhnA08D0zf
mMZ+1KRzXzcz4bdTucb578xi3bCb0LPn5fLeP7wFvXFDHvQtUnf43nz7G7xt
zV2ei8M99tGrEOvr/3mf9zCyCPqr5H94T9qLOc8+D9j/0lLu+/1DnkdLGfuS
Wg70eElUmvWI67oQ01KIHq39+vwKzkVABdYxy6ngPXhVgfXFRlXy3ZpXyfdW
rRLx0lWVfHeMK5FXaEv9ngf5TF/G3Q8Tp8dTl81iPZmH1Ee/ICp+o75Pugp1
1JWqsN5BIXmIFdHbp4rzHMa4Vno/FhPj24h3BlWzP7OqeY5axER36vIhRKnM
avg7Kqs5l5+JElNqeD8ENXw/XGp4Lw6TW2fWsN9VNfyuL9RVZWs510Ji6/pa
vvNhtXz/btZyv89r+T4OrwPvXlLHe+hWx3mKIobcpS7/gbx02mP23fAx+xtI
3pxOjH/ymPdMqp7vyRJihRtx74l6/n4V1nO+P9Zz//IN0N3WNKCuX2ADf7fS
G/g7Uk/UlnwCn6HqE+S9tX/C/h59grznN4lKL4gfRjTyfV/SyP07NnJejjRy
Dq738yeNvF/iTTx/xSaej0ET19vWxP2cJD+Zy/ikpibO5w9igdxT9kuTaGr3
lO9EwNP++02UyHnKe1lD35TOp7znw5p5D2Y1c240mzn366hLeFKPOUT9YHwz
8qtvNHN+H/THnxEnfaKvb/AzxB2nPOPvuvIz9lFAXGTSz537uQ/9fgee8T2K
eob1o5KJAdfo68gn/1ROf0QT6xe/Jo/tZv6wgS3s0yhi/eQW5C1UaOHv2IIW
zqF6C+dbi7qXEbm6Ff15zsz/uon+ju2MJ+8mTjnEuEUY43bRrLMggbzuHOuY
ZdJ3Jau/Xh7jiwpZJ6SUWPqIOKyGqFdP3PiEdY42EU8/Jc5sZj13Ef4fDouG
/w==
      "], {Developer`PackedArrayForm, CompressedData["
1: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
korUpCEt6UhPBv4Hz7oK+g==
       "], CompressedData["
1:eJwVmHc81d8fx40ilZSyM8pIS0iL1CsZmYkmLQlpKEkhFEoaElpkl1T3fsZd
tiursiLjpiVKkozyrYjU7/P76/k496z3eZ/zOef1unP2HXXxEhcTEzOYICYm
e0j2W+MzEaJ2/PINGBMhvVBCUPVLhIRitah/IyLcOrrj06JREX5c7bepYPjn
xlw3WaadT2KvkyFDfZ3iuDUMlfdsNVv3//5/4tNWM3yquj3QmOGV9gFXmz8i
lEm0HfQYFyFw4Vfl1X9FCEsQG6tmyCmZ6yv5T4Rm2TuK35lye+LyWA5Dg+7h
dYcZWre+LLVmuD8ovsWV4X8vLcPiGWp82H2jn2HkptFjm5n+ep+3NhYwTAt/
Vqws9hJ2wmtNRxmef3fmgJChscasDEnxlxAv3Om3hqHV4APvIwzfuI3fvMqw
+V3crHSG7r+SZe8wbL/fSIYxNFbNPriOoTdPSq+DGad1irKGK8Nv5tBNYOab
+vCDQiITh4TsgfkbmPUt37XpXCqz7nUOdUmnfotwWUc3oIjJp2L9DP8N/4ng
Uasg3j0ggpmdv3DVFxG2LtsyO6VThJaaiTer20SouNic6d8gwrf57/KDqkSY
7rauIKlQBCP3KRlilAh/pWbFvMpi5lHtMZW+KcLkKpXGZTEiZMo3Xq8MZuh+
5a3goAhtaZzqz27M/tlVNc60E+HEivU2xStFuOMc/bxAj9lP98qC7zOZ/F84
SuuKMetofKb+4Wsr5EX+hf+JWpFy8ZiiZVkrDknsSkh61IrkhPHvZxNbcWat
zpPS060Qj5Eet/VsReGinUqfbVthK303RtGwFf/xNhTlKDD9tSm9+NEWtMx/
1nS/vQXWT+/W2ZW3QN69rNI7uwW3OW/dv1xogVr580l5vi04/1ymS9q+Bcu2
7wqQWNQCg2e/e45MbcG/sqmb7Pua8XD1fqUHtc3406ep2/moGe+3OR4TXGxG
41z1C7MPNGOSxkp6vnUz4i1+aDnpNOO6cbSXq0Qz7r+u/LutownxJ4Xpl4VN
qFwySTk7tQkOZYJ5/PAm2LVXBsh7NuHLN7tIF4cm3OwuyVyzugntt5e6xZs0
wXuKcrrU8iZol1ivOr22CfqRaRfXOTfh0uyzbj98mvDwb/7xo9FNCLIpmx/F
aoKw81bc+ZdNGIvKCe6Y0oy6NSe+2tg3w1BiMDL5TjMWToq91TexBRu7RHKR
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
AI9CQuuL/8ZyKfhd3pTwr4DJ79sh/u9iCiOHz/n3ljLvZMHjqWsrKPBjkt4m
PmHyaDnl0MtqCk/qxLbK11O4P+VdilUjhZcs50T/Zgor7j1fcFNE4f3tjiW8
VxQW7arV/vGWQsVvX/oh8y5vtRLfaN5FgVh1d1/1ZyZvUfe/On1l9i+2rff5
AAXVHD7fdohCcozP3NKfFIKOOzUY/KYgvS0ocek4BaPWsNt3mXee7bFU7YEE
jaFjCc9YE2gkeufEklI0th7usKQn0Zi7zaSYnkwjZ6FaCzWVxrItMt0t02hw
lT8mms6gUZptL4yfSYNj8rivV4FGUShtbK1M4+94k/9dVRqukQHeEuo0vlts
HNmnSUOrpvVlA6M3Fj+zbsnSoeF9NmPMfR6NFUPnFJQX0HjkaZnxchGNhRJ/
ypOX0GD9vHPew5jGewW1bwuXMbonzWX56AomHkQm6prRCP+wT3PDGhotdR/7
fBld0/3ogjDOksYfnY7OAhsaAVJv4nvsmLiilHrVnJiyOOe3K6ODsvl+Otmb
aaw9ohBruZ2GuNH2403uNP7pux7z2kPjQHOJzvg+GtOSJYKTvJl1Xzvja3qQ
RrpY/ND7IzRuXf2qeMmfxoJQt76VgTQmayWYLA2mMXLjXDXCaHT4dGs6RtCo
/rVYY895Gqu1r6mdvEjjrI1aT3wsjU7/8AxuPI04udMDbTeY/Ln8zpqYTOOr
tnzFKkbP+W4NfHAyi8YHNyUVjRwaOvMsVrWwaKSe8luXQDP6bTN3hbuARtS3
ak+jQibfWT1SiqVMXsm25zKVzHp8PNfLVtMwC0or1XpOY48ja79lM41TldF3
ghg9uW9F++eSdzTuZm/L1PlIY3pq/1y1LzTuFQYXyw0ycYcvmSf/k4bl6LbX
x8ZoDBftCSqR5GC9Vuy+V1M5+MDf0zlNgYPZO9P0rdU50Oj6Ny1OjwO7q6f4
Hks4OBUQYqq6koOPe+emdYKD+4EFAf/ZcjD5e4HEE1cOHF9JC+R2cXAxoDNy
jzejh9drnSo9ysHpRdZ7VwRzMJ37kfctktHZfRbf1sdy8PPq/kytWxy4R+gq
SGVyoBg3N3j8EQfxB3Sdpgg4eFzSvnp5KQeDhHRUXDUHbHWR6XZGp29d9Nxu
wnsOo/f4Rmq9zO8DFkHpjI5P6WvePyTGxXfTlqlWU7mwrzsex2Z0/rd16v2G
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
Ldv/T+3wWbcZphVZ/BfK1O+3OXU2nGnfWG7RlsiMs351q8tjZh6LBL8LmpIE
UsVj1jSMs/HzUrnmf8NsJN4WyWR9Z0N9Q7ru9142FF9Wf/j2kQ3dq5UrC9+y
IXbpb7lbKxuW7Du7RfVsJCuc6bV4wgbXPmH7AyEbvi80K2Ty2Fgsbbs9gGJj
/0L77K85bJh/nlsakMHG2Pp5YTJJbOzNNtfmxrPh91wQcfwSG14hPUKnKDac
l3XttQllY3KKxPQdgUx9v3f9OT82eAOzL9T4sLFpZZupngcbS1ou7M90Y+NP
f9nGtZvZONicefy3IxuXr0el1tmwceqE9dGCdWxE+KnLlZuxMeXS8oTPy9iY
Yf5CsMiQjdgJ0+bFLmAjstnh8SRdNqYK3qalarLhk6X4xVGV6ce/L6uiwIb9
e62yf3JstFouMZGewoaTkYvGfCmm/yavs57ibPzWz+dx/rCgpV3coD7Cwot0
svLRfyw47pKc6TrIwlY//ZhZX1lw60wWG+hmIajmsFjnBxYmT8tdOtDOgtxr
1ybFNyw4NZ5duP0lC5tqu+fwmllQ7mt7pd3Ignfb5n2sOhZGzm1ysa1mIUH/
5pG/VSxci1m6taachZ2pHn2PSlkYMjD8lF3MwsOUVaq8Aha6Z37+IsplgTWT
e0iOz0Kk3Ca1PRwW3v6Z4lNFstCmLVUCNgv7/pXNaXzIQs/W1+SxHKb904gr
+tks9OUk637MYkHXMdYnL4MZ396nLDONhTcli53SUligDt2YRSSzYKCt111/
m4Wq/OiLErdYOKG12cz2BgvtB9eT6Yks8D9tC5uSwMLoT82m6GsscLvlH86M
Y2HV5R5NTiwL7hMSTuy+wsIy47fn1C4z6y/6V9l9kYXLdV7NpTEsLGkdWpxz
gYVxj6iYlGgWmiYnD6edZ0HDZOlV6hwL5wcr7OujWMj/UTytP5KFLNV1dZIM
Ldp2Fy+JYKF12Yueo2dZUD0a1lV4hoUbdQ7GsgwnuNlt3BPOQufWD7f6w1jY
+MZqRShD00y3J39DWXj/I9M6i2HO1NevNjD0XCl/RI/hu8ypvbIMz0hvypNg
+D9c3nGe
       "]}, {Automatic}], $CellContext`centerTempFunction = 
    InterpolatingFunction[{{0., 3.13297665*^7}}, {
      5, 7, 0, {1070}, {2}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1: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
qafYElvXm7DeNvLhAfTnBBEFYczzi2FdzbPkJWnkyteIO271171Lnv2AdfWq
yEMbmJfbQmz4j/5PHYyP7Caf+4PcUMIU+f7DTMEzx5hy/mWIC+RNee6KxE4V
U+RvWsy8gcup52gxP9SQ8aPm5Nl25MPXE6O2Ms/Ul/V19tG3+wh5TyT5nTP0
VZ8n17zGdTzzqIcUsV5rBfNiG/vz2hh3/tiv9xH9hpkBZWTM4Ds52wy+sYup
5642Q/18SzN+32ai7H76TOPIC7Pp31fHOsq9jDsrrYV+1n4t73sieUPHWq6n
b871/jLnu7hyHef8LjF8kQW/P9GCPglLvn+OluzDLUv4jEZZcT1HK87fFWJo
H3V/XWu+4yes+a40W0OfM9sGqL6V2J5tw/enj3ysli3qSIbasn915B3T7PjO
bLDje5htx7oD7fm9JvbgNclEmy/EZQYOnKdUB/6OiDvSZ++I73C4Sxyt5MS8
KCe+pxLO/A5/4pQeZ57Lbhfek5GuQO0LrtCvGrqx7oD1nNui9ZyTM+7gloc9
6Du2AfqVSxvBld5u4jp6W/hOlW1FnbeeXsDTi7x5brLbeW7TdvL3RNOPc+vr
z3erLJD3UWMvfycf/Al/uncQfwfUg/kuy4ewrmIosHdNBN+jmCi+OwNj2MeI
OPpXJnD+Zyfz92vVeb4zaem8V/ZXOIdeWcDK57fg//5nPudZpojvuX8p8ivO
VPBd3l+LeMFvTzhP15t5ThIv6J/zH3Sxue38XRjynud37yPRvptz0NzD7xX+
4BwdEQtEv24PDMT7WC0ZiL7XSgVi/b+HA1uiRkFfsHYMuKL4ePh3xE4EhspN
Rvx1uCzqzemUC8S5LZMH/75jBuKVCbOQf+XmbORp/a0ElLs5B3p9wjzwPj8V
8CFaC5CvJ6EKrp21ENzUchHrdS7mPvzVoA/sWYp1P3ksA19RrgH0V1iO/Pne
AmDnDSF8M9/+AZSVWcl9qq9CvNhMC3y/82qgt7s285x1gEbmulj/6nI9xJOn
6aOOTbc+4g6FBjzXI4bArtVruJ8+ovclI/i+rjVGHbWvxIgoE6DxHFPE8/NM
8X0TdMzAgyvMsM4y07XwWVau5TnpmUNfmW8Ov/KCdax/Zh3Wi5O0AJ++0YL7
LSWuULSEPmmfJfIW1Vmizo3ZVtATt1uBD8+3wnoyg62R165rzT6GkEeWWCNe
IGHDc9Cw4bn72EA/m00Ul7QFCl1tOTePbVEnx8GOepsd9HP29sgfdt+e3zvF
gfO03oHzkOGAPMEbYouCI/vo5Ig6ufGO/K56cmlpJ/ZLywm+uQHkuVnEkm9O
8O/VdAa673HGPppvkyd2O3NeVFzYHxcXxBViya+WurAPfeRqKq48ZwdX8J6I
fl7oyvn56op8cxU3xNM8iF4X3RCP6XLjd+uuZ1+ured8KrsDrxe685x9PTjv
azYAM0w2Ij7j8Cb258fm/jnaClxS6wVfr4UP59t2J9Y93LuL82K2J5D/vzwA
X55sMNY/eSkEcU/NMPh1Hh3nOg4n2cfzpxAf/SCB9/G3JOQ3nUrhnA08D0zf
mMZ+1KRzXzcz4bdTucb578xi3bCb0LPn5fLeP7wFvXFDHvQtUnf43nz7G7xt
zV2ei8M99tGrEOvr/3mf9zCyCPqr5H94T9qLOc8+D9j/0lLu+/1DnkdLGfuS
Wg70eElUmvWI67oQ01KIHq39+vwKzkVABdYxy6ngPXhVgfXFRlXy3ZpXyfdW
rRLx0lWVfHeMK5FXaEv9ngf5TF/G3Q8Tp8dTl81iPZmH1Ee/ICp+o75Pugp1
1JWqsN5BIXmIFdHbp4rzHMa4Vno/FhPj24h3BlWzP7OqeY5axER36vIhRKnM
avg7Kqs5l5+JElNqeD8ENXw/XGp4Lw6TW2fWsN9VNfyuL9RVZWs510Ji6/pa
vvNhtXz/btZyv89r+T4OrwPvXlLHe+hWx3mKIobcpS7/gbx02mP23fAx+xtI
3pxOjH/ymPdMqp7vyRJihRtx74l6/n4V1nO+P9Zz//IN0N3WNKCuX2ADf7fS
G/g7Uk/UlnwCn6HqE+S9tX/C/h59grznN4lKL4gfRjTyfV/SyP07NnJejjRy
Dq738yeNvF/iTTx/xSaej0ET19vWxP2cJD+Zy/ikpibO5w9igdxT9kuTaGr3
lO9EwNP++02UyHnKe1lD35TOp7znw5p5D2Y1c240mzn366hLeFKPOUT9YHwz
8qtvNHN+H/THnxEnfaKvb/AzxB2nPOPvuvIz9lFAXGTSz537uQ/9fgee8T2K
eob1o5KJAdfo68gn/1ROf0QT6xe/Jo/tZv6wgS3s0yhi/eQW5C1UaOHv2IIW
zqF6C+dbi7qXEbm6Ff15zsz/uon+ju2MJ+8mTjnEuEUY43bRrLMggbzuHOuY
ZdJ3Jau/Xh7jiwpZJ6SUWPqIOKyGqFdP3PiEdY42EU8/Jc5sZj13Ef4fDouG
/w==
      "], {Developer`PackedArrayForm, CompressedData["
1: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
korUpCEt6UhPBv4Hz7oK+g==
       "], CompressedData["
1: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
PuJ36i2YnXlmtCLvFk4t03hxquQW/gds5PO/
       "]}, {Automatic}], $CellContext`mHFunction = 
    InterpolatingFunction[{{0., 3.13297665*^7}}, {
      5, 7, 0, {1070}, {2}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1: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
qafYElvXm7DeNvLhAfTnBBEFYczzi2FdzbPkJWnkyteIO271171Lnv2AdfWq
yEMbmJfbQmz4j/5PHYyP7Caf+4PcUMIU+f7DTMEzx5hy/mWIC+RNee6KxE4V
U+RvWsy8gcup52gxP9SQ8aPm5Nl25MPXE6O2Ms/Ul/V19tG3+wh5TyT5nTP0
VZ8n17zGdTzzqIcUsV5rBfNiG/vz2hh3/tiv9xH9hpkBZWTM4Ds52wy+sYup
5642Q/18SzN+32ai7H76TOPIC7Pp31fHOsq9jDsrrYV+1n4t73sieUPHWq6n
b871/jLnu7hyHef8LjF8kQW/P9GCPglLvn+OluzDLUv4jEZZcT1HK87fFWJo
H3V/XWu+4yes+a40W0OfM9sGqL6V2J5tw/enj3ysli3qSIbasn915B3T7PjO
bLDje5htx7oD7fm9JvbgNclEmy/EZQYOnKdUB/6OiDvSZ++I73C4Sxyt5MS8
KCe+pxLO/A5/4pQeZ57Lbhfek5GuQO0LrtCvGrqx7oD1nNui9ZyTM+7gloc9
6Du2AfqVSxvBld5u4jp6W/hOlW1FnbeeXsDTi7x5brLbeW7TdvL3RNOPc+vr
z3erLJD3UWMvfycf/Al/uncQfwfUg/kuy4ewrmIosHdNBN+jmCi+OwNj2MeI
OPpXJnD+Zyfz92vVeb4zaem8V/ZXOIdeWcDK57fg//5nPudZpojvuX8p8ivO
VPBd3l+LeMFvTzhP15t5ThIv6J/zH3Sxue38XRjynud37yPRvptz0NzD7xX+
4BwdEQtEv24PDMT7WC0ZiL7XSgVi/b+HA1uiRkFfsHYMuKL4ePh3xE4EhspN
Rvx1uCzqzemUC8S5LZMH/75jBuKVCbOQf+XmbORp/a0ElLs5B3p9wjzwPj8V
8CFaC5CvJ6EKrp21ENzUchHrdS7mPvzVoA/sWYp1P3ksA19RrgH0V1iO/Pne
AmDnDSF8M9/+AZSVWcl9qq9CvNhMC3y/82qgt7s285x1gEbmulj/6nI9xJOn
6aOOTbc+4g6FBjzXI4bArtVruJ8+ovclI/i+rjVGHbWvxIgoE6DxHFPE8/NM
8X0TdMzAgyvMsM4y07XwWVau5TnpmUNfmW8Ov/KCdax/Zh3Wi5O0AJ++0YL7
LSWuULSEPmmfJfIW1Vmizo3ZVtATt1uBD8+3wnoyg62R165rzT6GkEeWWCNe
IGHDc9Cw4bn72EA/m00Ul7QFCl1tOTePbVEnx8GOepsd9HP29sgfdt+e3zvF
gfO03oHzkOGAPMEbYouCI/vo5Ig6ufGO/K56cmlpJ/ZLywm+uQHkuVnEkm9O
8O/VdAa673HGPppvkyd2O3NeVFzYHxcXxBViya+WurAPfeRqKq48ZwdX8J6I
fl7oyvn56op8cxU3xNM8iF4X3RCP6XLjd+uuZ1+ured8KrsDrxe685x9PTjv
azYAM0w2Ij7j8Cb258fm/jnaClxS6wVfr4UP59t2J9Y93LuL82K2J5D/vzwA
X55sMNY/eSkEcU/NMPh1Hh3nOg4n2cfzpxAf/SCB9/G3JOQ3nUrhnA08D0zf
mMZ+1KRzXzcz4bdTucb578xi3bCb0LPn5fLeP7wFvXFDHvQtUnf43nz7G7xt
zV2ei8M99tGrEOvr/3mf9zCyCPqr5H94T9qLOc8+D9j/0lLu+/1DnkdLGfuS
Wg70eElUmvWI67oQ01KIHq39+vwKzkVABdYxy6ngPXhVgfXFRlXy3ZpXyfdW
rRLx0lWVfHeMK5FXaEv9ngf5TF/G3Q8Tp8dTl81iPZmH1Ee/ICp+o75Pugp1
1JWqsN5BIXmIFdHbp4rzHMa4Vno/FhPj24h3BlWzP7OqeY5axER36vIhRKnM
avg7Kqs5l5+JElNqeD8ENXw/XGp4Lw6TW2fWsN9VNfyuL9RVZWs510Ji6/pa
vvNhtXz/btZyv89r+T4OrwPvXlLHe+hWx3mKIobcpS7/gbx02mP23fAx+xtI
3pxOjH/ymPdMqp7vyRJihRtx74l6/n4V1nO+P9Zz//IN0N3WNKCuX2ADf7fS
G/g7Uk/UlnwCn6HqE+S9tX/C/h59grznN4lKL4gfRjTyfV/SyP07NnJejjRy
Dq738yeNvF/iTTx/xSaej0ET19vWxP2cJD+Zy/ikpibO5w9igdxT9kuTaGr3
lO9EwNP++02UyHnKe1lD35TOp7znw5p5D2Y1c240mzn366hLeFKPOUT9YHwz
8qtvNHN+H/THnxEnfaKvb/AzxB2nPOPvuvIz9lFAXGTSz537uQ/9fgee8T2K
eob1o5KJAdfo68gn/1ROf0QT6xe/Jo/tZv6wgS3s0yhi/eQW5C1UaOHv2IIW
zqF6C+dbi7qXEbm6Ff15zsz/uon+ju2MJ+8mTjnEuEUY43bRrLMggbzuHOuY
ZdJ3Jau/Xh7jiwpZJ6SUWPqIOKyGqFdP3PiEdY42EU8/Jc5sZj13Ef4fDouG
/w==
      "], {Developer`PackedArrayForm, CompressedData["
1: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
korUpCEt6UhPBv4Hz7oK+g==
       "], CompressedData["
1:eJzt0PtPk1cAxvFiqoFZEZwbgVQQR3XcGuZULtU9MGBTijgYY4ATJmOr23TE
qBgCA62jsYpSFBKEIAiIIzBY54VrIxdhMKBYe4EKWMC+r0oUrHaFght7/40l
5/PL95eT5+Qc95S0mG9tWCwWn81iLZqdlsKSaNi5dktXMX3dXHG97wCNHX8t
S7KZsoNOTvGYRh4NtbR9RePExEXxLqYLm1zra/bT8Ci1efIqkQal+mSMy3So
XBjumkBjY5ijbu5LGvq5h+21zHlFMddXwfSjUMNvBUzNxSGN0UxXht832TCN
3dEdXsnsxTs+X/Rj6qwukdQxe4p+zg17ptFpT/fHMbv+Zuc/f46nkVjtvSqH
2S8p4LyJiaPxKy/b3hRLwy29ejjqcxrDE+zi5GgauYuGtev30ejd23k9IZKG
PKpoznkPjZPeG82B4TTEI8dCrgTT+Inv1uMgYO6dDYg5uo1GjXp382kfGqGB
OtGbTTQK39Mcz3Ni/mPBS9dvx7yzZVi8zUph3bXqYV+Kwjtfs5dnBylk5Hoq
Mhsp+B86cbnwPIVzIvVZZTKFoZWeukwvCravn/skPDNCYtbr4q4YcZtzz3x7
uxHf35CfujnwGKH+OTulKY/hUP2iQ2ydxsRc+ti5/Gl4CPX8cd402k/V/cNV
TME7pSotK3YKXRlUwN2ZSWhfhshWiCeRf210PcdlEhr5TPqRVAN61pruVF56
hHJLjk1/9wRmLjv3eFvGsZCR1Dr1/jgyDVslioQxWGuCllZcfIgWi6WvqFsP
3d+BDQ3WUdh+EaTw4o8i5/Bym9t3I4hoXRMkKddBaDIadHot4tOT7hjWafFj
fZeAtU+D0d6PZ5V5asy3yFcPDjxAnHhr9pLdA7TWVYjORqjQ5s/lBl+4j7fz
G/2klcPo7jjI2eylhEueSLp0cxA/LOws8wsdQPyB0qgPtP14uvdgTpuoD+yi
Q/9qrb24tNlecKugB12q8k913vcwZLR9q6y3CzJeM+uz5E5kSQZyeda7cIxY
LuJsV6DKzjfK80grwtpM56+WNaFKKHARqW6BYr9419bhD7xydN0gb2qA+lnt
ljWltaj43WHPyyfV6GxW6t3aKxAw71f14ZkSLM4rU5WPClFVrxzRRMqgcXK1
/YUvhdxaoI3ZcgZcH5W7rDgL7htk6Rc6jsMibGqvUx5GYk2qyeN0Cq5Sx7JW
745FaeM33OBdArAIgiAIgiAIgiAIgiAIgiAIgiAIgiCI/7X/AM9Nx7c=
       "]}, {Automatic}], $CellContext`mHeFunction = 
    InterpolatingFunction[{{0., 3.13297665*^7}}, {
      5, 7, 0, {1070}, {2}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1: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
qafYElvXm7DeNvLhAfTnBBEFYczzi2FdzbPkJWnkyteIO271171Lnv2AdfWq
yEMbmJfbQmz4j/5PHYyP7Caf+4PcUMIU+f7DTMEzx5hy/mWIC+RNee6KxE4V
U+RvWsy8gcup52gxP9SQ8aPm5Nl25MPXE6O2Ms/Ul/V19tG3+wh5TyT5nTP0
VZ8n17zGdTzzqIcUsV5rBfNiG/vz2hh3/tiv9xH9hpkBZWTM4Ds52wy+sYup
5642Q/18SzN+32ai7H76TOPIC7Pp31fHOsq9jDsrrYV+1n4t73sieUPHWq6n
b871/jLnu7hyHef8LjF8kQW/P9GCPglLvn+OluzDLUv4jEZZcT1HK87fFWJo
H3V/XWu+4yes+a40W0OfM9sGqL6V2J5tw/enj3ysli3qSIbasn915B3T7PjO
bLDje5htx7oD7fm9JvbgNclEmy/EZQYOnKdUB/6OiDvSZ++I73C4Sxyt5MS8
KCe+pxLO/A5/4pQeZ57Lbhfek5GuQO0LrtCvGrqx7oD1nNui9ZyTM+7gloc9
6Du2AfqVSxvBld5u4jp6W/hOlW1FnbeeXsDTi7x5brLbeW7TdvL3RNOPc+vr
z3erLJD3UWMvfycf/Al/uncQfwfUg/kuy4ewrmIosHdNBN+jmCi+OwNj2MeI
OPpXJnD+Zyfz92vVeb4zaem8V/ZXOIdeWcDK57fg//5nPudZpojvuX8p8ivO
VPBd3l+LeMFvTzhP15t5ThIv6J/zH3Sxue38XRjynud37yPRvptz0NzD7xX+
4BwdEQtEv24PDMT7WC0ZiL7XSgVi/b+HA1uiRkFfsHYMuKL4ePh3xE4EhspN
Rvx1uCzqzemUC8S5LZMH/75jBuKVCbOQf+XmbORp/a0ElLs5B3p9wjzwPj8V
8CFaC5CvJ6EKrp21ENzUchHrdS7mPvzVoA/sWYp1P3ksA19RrgH0V1iO/Pne
AmDnDSF8M9/+AZSVWcl9qq9CvNhMC3y/82qgt7s285x1gEbmulj/6nI9xJOn
6aOOTbc+4g6FBjzXI4bArtVruJ8+ovclI/i+rjVGHbWvxIgoE6DxHFPE8/NM
8X0TdMzAgyvMsM4y07XwWVau5TnpmUNfmW8Ov/KCdax/Zh3Wi5O0AJ++0YL7
LSWuULSEPmmfJfIW1Vmizo3ZVtATt1uBD8+3wnoyg62R165rzT6GkEeWWCNe
IGHDc9Cw4bn72EA/m00Ul7QFCl1tOTePbVEnx8GOepsd9HP29sgfdt+e3zvF
gfO03oHzkOGAPMEbYouCI/vo5Ig6ufGO/K56cmlpJ/ZLywm+uQHkuVnEkm9O
8O/VdAa673HGPppvkyd2O3NeVFzYHxcXxBViya+WurAPfeRqKq48ZwdX8J6I
fl7oyvn56op8cxU3xNM8iF4X3RCP6XLjd+uuZ1+ured8KrsDrxe685x9PTjv
azYAM0w2Ij7j8Cb258fm/jnaClxS6wVfr4UP59t2J9Y93LuL82K2J5D/vzwA
X55sMNY/eSkEcU/NMPh1Hh3nOg4n2cfzpxAf/SCB9/G3JOQ3nUrhnA08D0zf
mMZ+1KRzXzcz4bdTucb578xi3bCb0LPn5fLeP7wFvXFDHvQtUnf43nz7G7xt
zV2ei8M99tGrEOvr/3mf9zCyCPqr5H94T9qLOc8+D9j/0lLu+/1DnkdLGfuS
Wg70eElUmvWI67oQ01KIHq39+vwKzkVABdYxy6ngPXhVgfXFRlXy3ZpXyfdW
rRLx0lWVfHeMK5FXaEv9ngf5TF/G3Q8Tp8dTl81iPZmH1Ee/ICp+o75Pugp1
1JWqsN5BIXmIFdHbp4rzHMa4Vno/FhPj24h3BlWzP7OqeY5axER36vIhRKnM
avg7Kqs5l5+JElNqeD8ENXw/XGp4Lw6TW2fWsN9VNfyuL9RVZWs510Ji6/pa
vvNhtXz/btZyv89r+T4OrwPvXlLHe+hWx3mKIobcpS7/gbx02mP23fAx+xtI
3pxOjH/ymPdMqp7vyRJihRtx74l6/n4V1nO+P9Zz//IN0N3WNKCuX2ADf7fS
G/g7Uk/UlnwCn6HqE+S9tX/C/h59grznN4lKL4gfRjTyfV/SyP07NnJejjRy
Dq738yeNvF/iTTx/xSaej0ET19vWxP2cJD+Zy/ikpibO5w9igdxT9kuTaGr3
lO9EwNP++02UyHnKe1lD35TOp7znw5p5D2Y1c240mzn366hLeFKPOUT9YHwz
8qtvNHN+H/THnxEnfaKvb/AzxB2nPOPvuvIz9lFAXGTSz537uQ/9fgee8T2K
eob1o5KJAdfo68gn/1ROf0QT6xe/Jo/tZv6wgS3s0yhi/eQW5C1UaOHv2IIW
zqF6C+dbi7qXEbm6Ff15zsz/uon+ju2MJ+8mTjnEuEUY43bRrLMggbzuHOuY
ZdJ3Jau/Xh7jiwpZJ6SUWPqIOKyGqFdP3PiEdY42EU8/Jc5sZj13Ef4fDouG
/w==
      "], {Developer`PackedArrayForm, CompressedData["
1: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
korUpCEt6UhPBv4Hz7oK+g==
       "], CompressedData["
1:eJzt13k0Ve+/B3AkSYYMKRQl5atURCrKu5KhNJpSSFIhKSpDkTEVigwpSUnI
mLlzzCENSByZzj7mYzqGI32LStzNH3fdP+6667fuveuuddf6Pv+81j7PsD/7
eT7n2c9edfqSwVlODg6OjdwcHCmL5btMuGiY7xe19gvp9xSj+CPzaGAF4GIv
af7VTLmH3DQ4ygob2M+nIcfr4y1bHhr89vV7RS6gQa2h02Kal4ax231fUvho
0JaMdkrip6E3XbVxvhAN6tdD9riR/Z6JykzqkVYNblr6iPSjvuVRIXKcRunq
8nhSxcrmJ6bkeEp3h5U3kuMZU7UerFtIQ9YfztNG5Li2ut8qcxbRwIirLzUQ
oGGaZma3kxx/vnqcla8wDZO1PnoqYjRIrnc3P7uUhmNHpTU3S9EgUJPWQJWh
gWvDypPSa8h2vEN5IevJa70fDXtUaLiUdTPTbQcN1an20V66NOQditj22ogG
u/aVWiFnaPBU/KoZ6UqDk4CmhXMw2W/Y/89UMg2DCnT7DdU0yOTTN+39RoPZ
Q7UftasbsOXHipR3JxtwuNM2MCWxAdFdeo+OTDdA1HLgkpjdFxhbmondGCI1
1HRJCWrE8kphWSnDJhirKAgckm/G2ndbX9f8bEaTBzWIo6YFyrK5YWKxrdB8
4Hss/AodGgfkzilpE8gSt+i7J86AtNj2QVkWA3cbpVNyC9sgmsX1FzWoHeKx
1hWuZh1Q/nxYNFW8E5y/vb+u9OxEQsLUwASzEwZNwnnx+l24zWO5SjOnC/VF
aatkJboRS1j8OenZjYYo4TOmPd0Q8CrvkdnXgylzaa916T3YdobN7bGYiTLf
7PWmV5i46pvN0dLExAbtwOzqbb04tCh28UBULzC2lNvhVy/2B2+PNzXrQ6SE
97ElhX2Yne4iiX5EiXkJF7v2g+vGisiWxn7U/KxpOKsygIplCfzRIQNQSXbX
WTE0gCv0N4I3dAZhfcA7b/L5IMZHfpnOmxoEqzNlysOYhbwvp+w/vWLBKT34
UxzvEJard28xshpCTL/dpdb8IVy8t22mWWQY5WHKYdUXhuGs5VRj9G4YiyXP
CfhJj+D4ucfui5xHcDEB+1vejWDm0Ys8fpFR5N3hsqwxGkWXW88+17ujEDop
3fEkfxTRfAe4NrWPIo2e0d/2exSiQsIzU6JsHKir9beXZ4O3z5JDeisbHgnO
Eg1abNRdPpa1+hAbmce/Um6asHFe85a2rgUbK9b4ROr8479bkjvx4P9Sy70X
/1fl+MKM+O8Ya23233L3t/rw/4ndvnr/kn4ipWH/iqvjtvxLvlVOC/2vPFsm
+1/KczTq/n9mYqfQf6qu462QWQdmpoL/owEhV+ZUkGHd+49WvTo1p71m891Z
+WsPzplm8TZo1oMj6nOG8P8VOOumJ08DZnUqDLozq7A+15yG59m3Zo0IYPjP
2pT08easSz+89pv1l4uk76yMNZ7ec/8DbXuvufX1074xN6+byQ1w9vmc/K7N
xZth4ToXz+hW57n7Ft25PHefwNZLsy4biL0wN562rd3c+pUvPzv3vKg/Ndee
cdlsVupDTuO58S/fODhrXVCD1lx7rq9qc/XNjWvnnCgVmpv35wFsbdKXHPpv
ZrUvqXPVnotrDe+sOyJ/mewllak8tkuLdMrE5u5uUv3FWr2as/NVZ1SqTmqe
knZYlTS574/zOlILR18dKdKKeXzl80gNzkZodpizIZ69+10iqXEAxfEQ6eE6
n13lZmw4SgY4tJ8g+yVePmx1nI3HfBmKLHI/lVEarD9MmtN4bkmkMRlX7ssf
Xkbk/awsAxUMyec+cWxrvAEbzt7inNykG4IvRVgdZUOz0PBC2BFyvx505qg9
zEb6TqZYAblPR+/8HWh7kFzfR/KucfpsBHsw18XvYyNFOe5cki4b48LZCS+1
2Rjilt14ndzffdVUK5btZmM6Tk/ST5ONh+Nyp5I12HBRMd/vs40NjRLTXSxV
NtiNMtoVSmzUBD3jpa9nY6XMmTLRtWy0M39yb5Vhw+TDiPsvcTZKd2Wmiwuw
UakovHEbJxuwnNo8Mj4Kimv67cSuUWjuvKWYUjOKj+pL44eyRzHhuMJpS/go
yt8/UxhxGIXzwnmJmjqjYOQcstRZOwoWd89HNf5RCApd6Rj7MYK1BQcXPusd
wSnCaGdk8wjc7pcPTH8cQb7n4ry0ohHk5ITFHM0YwbJ774YWxY3APoDayYgY
AccOab762yPgTben91wn650XD/BdHMEHfoGvKlYjKD5Hsd9nNIL3sbIOqrrk
e1TsRWHH9hGkdUu5aiiOILVdqXgH+b6lDtd2twuNYMfWineynCMwPnBdRmx8
GGI7k81ruodhKRTTYNcwjNPPfiyVfjuMWoecsPl5w1AIV9uklDiMZ8cq+xIf
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

       "]}, {Automatic}], $CellContext`mCFunction = 
    InterpolatingFunction[{{0., 3.13297665*^7}}, {
      5, 7, 0, {1070}, {2}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1:eJw9VwlYz9n7LRLZs0eiQWpQTAZJ+X4Hadcm7XspaymUyjJERIuiEpUWpGQt
RWOKNCWlXSnJSINIRET6/X3P6fl7Hs95znnP+977ue977xd5p60mrgPExMTE
f/5VlhD7/z9esr5ZNjkeAqKfYLtYoW1g5AHBx/eqyk21xwR13lXfFfyiBENv
/ZVSOSNOMOipXdWriLOCqrQ5CVl25wQnEsy+r5TPEKTqKL2yC7oq0PrDunxE
epZgs1r0v2NSbwmKCttefDTMF1z4vUxds/WeQCuqW/J/84sFbj//tFmWCbZH
TpLYfb9ScLTRXSwkoFaQdc7vn7IPDYK/Xoybaqz3TKBkE3bXtvFf+DdktQm+
22y+n2HWLlDZkiyu59kpiDoUZKVR2CUIXP67XeTdLwKt7K4fDsd6BWo3infc
VxAX/qQ10qckhMeit4wZfGeIsNb3tcK3rBHC4QPmHFKskxYWPDi7qttjvDDs
7mfFdzdkhK8VFgy53CgndHhZkTQp6BfhVCuX77FLFYQzGnv6xDN/FXYr2jxK
HTBf+HzXOOVBi1WFb41z4neOWiz8eZT5ZRnqQv9xmbMXxgmEQe3GkwrfrRAO
fZxc4flmtfDnZ4wXXNcXPk72LPtzibHQS2PoTfuLZsJpQe1Xg5UthCmeGm96
IqxF8b/6GuxE6+xZNtBR+PP7naIOO4nqO2SIuwhFx1ay2VV4KjZWKrPMTcTd
pKa5i3jJQxcPEe8elrhBqKqqWm1WsVGUF36ja5Mo7pc5YosIY7fJbRWhTtEY
T2HZw4dml8I9RXkKUUO9RKjsuxe4Zf5HL1H8xhD7bSIeurV4G/ymyt6i/LSE
cG8RX1na4S2KG37U8RGt92pSko+IH1T94oN9VWlvF+kXMqO3i/zDh7aCx9TP
2yGKK1X67BDpc9VygZ8OfQfK3lTfKfJZXPDbKeI2hlk7RXVPrnwPHrBrtq/o
O9tf2/qK+MPA4+D7y+4D4+q++OK8EhX9ROsUTLPwA78V5CfyF1Zc8RPV94ys
B//k0AteYTJllwjrtyzche8L0t4lylsUbQFus80Vce3bW6HHf965S1T/6pHd
4HfK94MvGBS8S7SPLucQ6AoTQpFnpBkOfdjXCOhbLCPBZ/hEgRuan8A6y4ad
hP497iTyikdFg2/cFA0enB2NdSo/kAvkY5D3yTAGvvQAcv2LMahb/pioMCiW
6/wWi3yhPbEnhOiVE4s8iZdEF+lTqL9X4xTixh7k9VHE0fnEr28YjxgfB2xY
Hgc93yMO62lGUjfOi+N3tRLVR5wGJv9+mudnexrrbgqinp5BfUf1aX5vD+OF
086wH6uIPhvOwNcXeobfc436pjpy4TdixNR46GaCePDDTvHs74F4nm8qdcsi
6m1t1F9IJlBXSACPW5WAOnNdE/h9B6g3JpFPKCCOfEa9q7dfn5LIfqslMn8d
ufP2RM5NVCL3c6Mfa6lHfKH/0+Sz3JfGWeg69mdxzvP3UO84Q73kNnl5PeOC
z8Qh0knQ6+Ykod6BVUQJuyTW257EvoTQNyGR8U/XGf9QlMS+N/T73zB+9Bsx
TyqZ/onJrDOLGLIgGX4pjWTU1dKmPsw0GfU8bRmPXU8s8SJW+hMdDxKfhzPP
O451Fp2jvuAqeXMe6zk8IFeop7/9JfULXdyfhHgK4t0jUsB7JxMzZqfQr0ou
KyBK6KcgP2YdUdGZ+qYt/bof65080K+Hsc6cUyn8nhRy08vE0lzmCQqJV8qZ
r9BAHv6CeVId9Id8Jb4YkMr6I1IZn0Te+gu5UDmV86aWinqhWqm8r6bku51S
+98x+nUOEOVjiD2Z9A8pIb5qY94iqXPATBWinRXxXPA55O3LPcd+vz3H+zj9
PPD0WqJLyHnuq+A857XnPNebf4H30YMYlXSB72kTsWBiGlDJLI3rHyf/UJWG
Oi1jLvI9NrnIdyeU3OLCRc55wUXWbyTWfLrIPoxMZ5/npiPvrHE66weS77vM
uPe/1BUmZoBHGmVw3sPJZ9RnwP9a8RLnLugS782HS4gP9MrkPRt6Gfz23cuc
h4QrfB/SrjLvv2uIW7ve4D1SyaZvbQ7flde34OsUv8PfjZwC8OljihAfe+cB
v3dXOefKt5L7barm/Sqq5TkYPub3FNVz/hc+4femNsJ/fcJT6JJHmlmv7xnv
3/bnPJ93//J+r29lX1tfcj6c/+M9aH0Fv5/7G77THe38Pdv5jv0Vf8/fgWOd
PJ/JH/l+nu9in1U/g2f/1c0+rf7K76zoYV8tvvO+t/QCxd37gNKd/+P99RX3
hz5goD/6c1QCXH6ipD/6nzQYOE5FCvG43KHA6yuG++N3sWwE4i7mo8Czm0cD
R7qNof52LPO8xvvjXn2egPqxfpPABT9k4OvdOwW+7wOmQg8PkoNPRmo6eOcx
efhkx80AZsTNxDoHZyogLzJzNnwX1JSAifd/BToYz0UdtcZ54GKuKsjr65jP
/fn9hrhQYiH0urDfgTtkF6Nu+sUl4OVLl8I//KE69P02GtAV3mtCLzwgAOZN
/QO68q0VjFutwrpXfmhxfynaWO+1oS7ibl/0gFvOGiDeYrCG8V4jnkOmCdZr
dDKDr03GHPEP1esQDw6zRHyKrjX3OdgWXPWBHeJDjjtAL7J3At5RdeF5jHRD
PKdjPXTNcg+g1rWNyO+K2wx8EbIV37XwTy/w0t3ewI37tsO/++BOxJcd8kPd
50f8eY7HA+G7nbAHXO7aPqxX8WA/5+FNEPxnxYOhG005Apy07Cji3q6h7Ht0
OOem+jjqmMuc4PpW0dzviVhw67o4+uTi2aetiahfWZTEOrNSOV+HznM/VWnw
SchlQK/enAnd7t4V+GOmXSfuz+L8d95kX3Vvsc6ZPJ7r1zs8Z9sC9rf0HtaV
XlUENC4phq95XSnixfllqDdzbgX7d6YK9fwn1HJf0Y/Bnac94f3LbKJf4xnq
9SQ+h69DvJVz6trGOS57xflY2o78sZffwe8xp5O+9I/sX+8n6I56X7i/+B6e
99fvvAfWfdiX9j9iASKeu2xgAH63bg8Clxo1JAD30GAouHTwcMTl7o8MwH2W
lEZ8nP5YYNTJ8dATX06Er3nWZOQZq8hCH60oB/560vQA3CvJX5Cn3zUD+uGW
Wcgb+Wg26/2thLziPXPg3yg/Dxh3QxnxlOXzwZ2LFgCt9VShL6tYiDrK5ovA
A0oWo77aODXUs9Bfyv3vVOf6McuAhVc1kGd+XxP1VtQs534bBeCq+ULWi/oD
upfNCvjtJq8Etj1aCV1n9yr6FLSga5Vo8VwsVqPO7abV4K8stIF7y7Xh99HU
AR5I04FPb7Qu9+GtC59ipS6/a5YecLcPcWS+Htb1GKIPf5eBPvS+cH3Ue1hJ
PW60AXyxBgbg7UEG8N25Rb7/nQHWiZEzhL7I0JD7CzBkP9LIw2sZPyi2BvrR
X9cg/7rpGugdfuTO8Wvgv1CwBuuKt5KHDzICuisYcV9aRqiz0M0IPmEQsSSZ
vvoCI9Td8Yy6Xy/14InGAfz3szH0Bl1j1BnuTL5vpzHPOZi+/bHEyDRj1JuQ
0+8voj+3mrrCc3L5DsbnfmPeMEkTxIukiXZTieWKxG5VE/Zd0wTrdmqbcP5N
qafYElvXm7DeNvLhAfTnBBEFYczzi2FdzbPkJWnkyteIO271171Lnv2AdfWq
yEMbmJfbQmz4j/5PHYyP7Caf+4PcUMIU+f7DTMEzx5hy/mWIC+RNee6KxE4V
U+RvWsy8gcup52gxP9SQ8aPm5Nl25MPXE6O2Ms/Ul/V19tG3+wh5TyT5nTP0
VZ8n17zGdTzzqIcUsV5rBfNiG/vz2hh3/tiv9xH9hpkBZWTM4Ds52wy+sYup
5642Q/18SzN+32ai7H76TOPIC7Pp31fHOsq9jDsrrYV+1n4t73sieUPHWq6n
b871/jLnu7hyHef8LjF8kQW/P9GCPglLvn+OluzDLUv4jEZZcT1HK87fFWJo
H3V/XWu+4yes+a40W0OfM9sGqL6V2J5tw/enj3ysli3qSIbasn915B3T7PjO
bLDje5htx7oD7fm9JvbgNclEmy/EZQYOnKdUB/6OiDvSZ++I73C4Sxyt5MS8
KCe+pxLO/A5/4pQeZ57Lbhfek5GuQO0LrtCvGrqx7oD1nNui9ZyTM+7gloc9
6Du2AfqVSxvBld5u4jp6W/hOlW1FnbeeXsDTi7x5brLbeW7TdvL3RNOPc+vr
z3erLJD3UWMvfycf/Al/uncQfwfUg/kuy4ewrmIosHdNBN+jmCi+OwNj2MeI
OPpXJnD+Zyfz92vVeb4zaem8V/ZXOIdeWcDK57fg//5nPudZpojvuX8p8ivO
VPBd3l+LeMFvTzhP15t5ThIv6J/zH3Sxue38XRjynud37yPRvptz0NzD7xX+
4BwdEQtEv24PDMT7WC0ZiL7XSgVi/b+HA1uiRkFfsHYMuKL4ePh3xE4EhspN
Rvx1uCzqzemUC8S5LZMH/75jBuKVCbOQf+XmbORp/a0ElLs5B3p9wjzwPj8V
8CFaC5CvJ6EKrp21ENzUchHrdS7mPvzVoA/sWYp1P3ksA19RrgH0V1iO/Pne
AmDnDSF8M9/+AZSVWcl9qq9CvNhMC3y/82qgt7s285x1gEbmulj/6nI9xJOn
6aOOTbc+4g6FBjzXI4bArtVruJ8+ovclI/i+rjVGHbWvxIgoE6DxHFPE8/NM
8X0TdMzAgyvMsM4y07XwWVau5TnpmUNfmW8Ov/KCdax/Zh3Wi5O0AJ++0YL7
LSWuULSEPmmfJfIW1Vmizo3ZVtATt1uBD8+3wnoyg62R165rzT6GkEeWWCNe
IGHDc9Cw4bn72EA/m00Ul7QFCl1tOTePbVEnx8GOepsd9HP29sgfdt+e3zvF
gfO03oHzkOGAPMEbYouCI/vo5Ig6ufGO/K56cmlpJ/ZLywm+uQHkuVnEkm9O
8O/VdAa673HGPppvkyd2O3NeVFzYHxcXxBViya+WurAPfeRqKq48ZwdX8J6I
fl7oyvn56op8cxU3xNM8iF4X3RCP6XLjd+uuZ1+ured8KrsDrxe685x9PTjv
azYAM0w2Ij7j8Cb258fm/jnaClxS6wVfr4UP59t2J9Y93LuL82K2J5D/vzwA
X55sMNY/eSkEcU/NMPh1Hh3nOg4n2cfzpxAf/SCB9/G3JOQ3nUrhnA08D0zf
mMZ+1KRzXzcz4bdTucb578xi3bCb0LPn5fLeP7wFvXFDHvQtUnf43nz7G7xt
zV2ei8M99tGrEOvr/3mf9zCyCPqr5H94T9qLOc8+D9j/0lLu+/1DnkdLGfuS
Wg70eElUmvWI67oQ01KIHq39+vwKzkVABdYxy6ngPXhVgfXFRlXy3ZpXyfdW
rRLx0lWVfHeMK5FXaEv9ngf5TF/G3Q8Tp8dTl81iPZmH1Ee/ICp+o75Pugp1
1JWqsN5BIXmIFdHbp4rzHMa4Vno/FhPj24h3BlWzP7OqeY5axER36vIhRKnM
avg7Kqs5l5+JElNqeD8ENXw/XGp4Lw6TW2fWsN9VNfyuL9RVZWs510Ji6/pa
vvNhtXz/btZyv89r+T4OrwPvXlLHe+hWx3mKIobcpS7/gbx02mP23fAx+xtI
3pxOjH/ymPdMqp7vyRJihRtx74l6/n4V1nO+P9Zz//IN0N3WNKCuX2ADf7fS
G/g7Uk/UlnwCn6HqE+S9tX/C/h59grznN4lKL4gfRjTyfV/SyP07NnJejjRy
Dq738yeNvF/iTTx/xSaej0ET19vWxP2cJD+Zy/ikpibO5w9igdxT9kuTaGr3
lO9EwNP++02UyHnKe1lD35TOp7znw5p5D2Y1c240mzn366hLeFKPOUT9YHwz
8qtvNHN+H/THnxEnfaKvb/AzxB2nPOPvuvIz9lFAXGTSz537uQ/9fgee8T2K
eob1o5KJAdfo68gn/1ROf0QT6xe/Jo/tZv6wgS3s0yhi/eQW5C1UaOHv2IIW
zqF6C+dbi7qXEbm6Ff15zsz/uon+ju2MJ+8mTjnEuEUY43bRrLMggbzuHOuY
ZdJ3Jau/Xh7jiwpZJ6SUWPqIOKyGqFdP3PiEdY42EU8/Jc5sZj13Ef4fDouG
/w==
      "], {Developer`PackedArrayForm, CompressedData["
1:eJwd11OwGFgSANDYtm3bmRgT2/bEtm1ObNu27WRi27b3vL1Vp+pWf/VPK3Gj
dpXaBg4UKFDGYIH+/wL+QQhKQCg4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGI
SSxiE4e4xCM+CUhIIhKThKQkIzkpSEkqUpOGtKQjPRkC8icTmclCVrKRnRzk
JBe5yUNe8pGfvyhAQQpRmCIUpRjFKUFJ/qYUpSlDWcpRngpUpBKVqUJVqlGd
GtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBb8Q0ta0Zo2tKUd7elARzrRmS50pRvd
6UFPetGbPvSlH/0ZwEAGMZghDGUYwxnBSEYxmjGMZRzjmcBEJvEvk5nCVKYx
nRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGd
HexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkPy5xmStc5RrX
ucFNbnGbO9zlHvd5wEMe8ZgnPOUZz3nBS17xmje85R3v+cBHPvGZL3zlG9/5
wU9+8Zs/BBR/YIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcGMYlFbOIQ
l3jEJwEJSURikpCUZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxkJwc5yUVu8pCX
fOTnLwpQkEIUpghFKUZxSlCSvylFacpQlnKUpwIVqURlqlCValSnBjWpRW3q
UJd61KcBDWlEY5rQlGY0pwX/0JJWtKYNAQ28He3pQEc60ZkudKUb3elBT3rR
mz70pR/9GcBABjGYIQxlGMMZwUhGMZoxjGUc45nARCbxL5OZwlSmMZ0ZzGQW
s5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVraxnR3sZBe7
2cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5D8ucZkrXOUa17nBTW5x
mzvc5R73ecBDHvGYJzzlGc95wUte8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGb
PwQM/sAEISjBCE4IQhKK0IQhLOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8C
EpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxkISvZyE4OcpKL3OQhL/nIz18U
oCCFKEwRilKM4pSgJH9TitKUoSzlKE8FKlKJylShKtWoTg1qUova1KEu9ahP
AxrSiMY0oSnNaE4L/qElrWhNG9rSjvZ0oCOd6EwXutKN7vSgJ73oTR/60o/+
DGAggxjMEIYyjOGMYCSjGM0YxjKO8UxgIpP4l8lMYSrTmM4MZjKL2cxhLvOY
zwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxhK9vYzg52sovd7GEv+9jP
AQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUu8h+XuMwVrnKN69zgJre4zR3uco/7
POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+8o3v/OAnv/jNHwKW/sAE
ISjBCE4IQhKK0IQhLOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQh
KclITgpSkorUpCEt6UhPBjKSicxkISvZyE4OcpKL3OQhL/nIz18UoCCFKEwR
ilKM4pSgJH9TitKUoSzlKE8FKlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0
oSnNaE4L/qElrWhNG9rSjvZ0oCOd6EwXutKN7vSgJ73oTR/60o/+DGAggxjM
EIYyjOGMYCSjGM0YxjKO8UxgIpP4l8lMYSrTmM4MZjKL2cxhLvOYzwIWsojF
LGEpy1jOClayitWsYS3rWM8GNrKJzWxhK9vYzg52sovd7GEv+9jPAQ5yiMMc
4SjHOM4JTnKK05zhLOc4zwUu8h+XuMwVrnKN69zgJre4zR3uco/7POAhj3jM
E57yjOe84CWveM0b3vKO93zgI5/4zBe+8o3v/OAnv/jNHwIO/sAEISjBCE4I
QhKK0IQhLOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpS
korUpCEt6UhPBv4Hz7oK+g==
       "], CompressedData["
1:eJzt11lYjdHfN3BKkUoSMmY30yCiQuqbFBpEREoKSYmSBjQYU2kgGiilVNKI
BqIizZPmub3vvUspRVIhJfGs+/+cPAfP9Z69R+979Lmutdf+rem3hlv8+Nl9
NjNnzJixdtaMGXIFQsVLiiSgJBbtsLxRAqo3XFuNhyWgwxldFM8libXrXn4J
F5KErP7ANiVRSUzGr5xhsFwSigZa3kdXSuKXooyPo5gkFqkX8vOvkoTrbL0t
3sS3c9Yo/CZuU7m7uOsyA3HqrvJpbgz0dF33PxfOwLyZlw3PZzNQM8PeeKSK
gZyUPoUPHQzoqVnZeX1goLMzSntpHwMV5l+9Pn9k4Kzgy8CvpHyDOT/nC8XA
kbGicO82BlYsjbu8oZ6BIROVMJsKBtpWa1Mu7xiI7UmzTXrFQLeaeYNKBgOn
J8yrt6UwoLNj80h3PAP7KvsPSj8k7Wj/DZWNYMB4HvdhwTAGpp41DM+9y0DT
yWYHq2AGro6OeRsRGzsXrl1GygUCd7n+I/WGqesz1aIYsB2zTvqdwMA1h82L
bz9noHjq+rFdBaQ9B/Ps8AYGFDqqO9/3M/A5sub4wZniWD+ZoT7GEEfF10W7
YnaIY63Gv7ZOF3H0Zyj90ogXB/dnjTWNdeL4lh1jIPBbHE1Gy8RtpSTwRsAu
5dpuCexOCz9u4iaBX7p2Dw2jJTDf/k1MR7EEItY6GpoMSGDZj7RTswQlsT7F
YK7qekl8sKh5v/0AWa+HAtauFyUROfdP9pYoSTQ2LW+tfCuJXqfZy850S+JM
3dHKU1xSEJ/B0NWQksKIgbfN/B1SGFupwK9sJwXbrhdvP/lLYdP7C7Ofpknh
a3hZS2KtFMwFdWykRqTgNPBV4OoCaWgmrzy/UkUaii7q18QPSYN7w8XxPk9p
rN24v6o7VhrxlovGNUulIWxcHrZjUBqU4Y5EPSEZSLy/XrlIVQb503cW+x2R
gUbEyAsuXxnceCg+a+i5DGrCRR5dYsmgfDpfQHuOLBR8DKc/q8qiNFRw3zdb
WcSFBRsLRsvCc/LDyfYmWYxIhvkECK7GvaiQMevdq5GevIz7Q+hqxPK/sU76
sBpzgiTSO9TW4DZDQv9VxBrUjVntaOKWg6W2+ad6dzns3/Z4Vf+kHC7LD3/m
XJYH+3cvTyavAgbTJRdJhCpgx58li9tlFJFkd8SitFQRG4IlFso5rkXEd9vd
L2SVsEHXKdTktxIqx0fmUp7rMLu0LUtSaj0+Co4tMdqijNuCS24EbFLGyTwb
r/+bqlYoe9A6mPefp038GulCy76624m2j1FnTztUaGRDa/HppSXte8GVh2gT
8uz30vZ8jdlJKyHerElbxfy6kdYpbI487YD5iBitlXjHAlpNxyc8tCvzXSf8
iTUL5w/SejqmddLKVe6opk1Z+/w17epw0STa83N2h9KWeV6/8p/6bjH2tMpn
8w7Q5rolaNLCK0iWNjxYex7tUPzEj5vE1K3hTNoGiyXvaC25r8fTDqV88aHN
6p1zknb+feyk1TTdLkPb/FBxFu2pj6I9fkTbzIEC2o2BvpG0XDZSrrSxBsGG
tK1pIjK0zCU2077EnQIPm2lX+OYn05r5FnrR/hVI30PLv+yyOO0S2b3ffYi3
8uaU0jaZ3w6hXTwlcoz2cFSkEu0j9VV/bxANjwe+pz0mxLlPm/jc+iTt5z2D
G2l/WeTz0ta0dbK86f6/1XlBO/vx8yDaxwHLbGiZn2M0aS808onS6qQljV6n
5+uvZS1tR8HxdFpV58hbtEE+e1xpWRM3jtJK1GzeRzt50U+f9tg/Bz1ac6uv
RrQeC1ZZ0IZJNzjSJkbM8KMVHbuXQGv82r2EduhE8Sdao8umQnQ/tp3z0aAt
0zB0pu3sTXtK++xg+ygtS2gA9Pjucgk/oK283chDz8/eovGrtOa3sgXpedXt
dMig7RR2PkOvy3r9cyb0euaoXwug86Ng0vTnf/J4et69IDoPxOFym8izQNXn
Dj0fB5jVIXR/5FfbhBMXuMZtj6Dz8uBTqyh6XS+HsWOIKu/4n8cTqdjJpidE
l83fndLovJQOd8wgvlILHnxJ1PB61pVP16sJNC2m+5czeqKKjp+owN9I58Ej
hlUn0bt5ydkeevyJFw8MEd/d01j9i6jv+5GLe7MyImwffRIiZmvtFRUjHtTE
I0VikANMNImHFd8M7CWOOQ1Y2RANS68YexGbmjLf3iP+/Lmw6AWR9+Ol3A5i
l9v59dzk/Jni4ZfYROxo//jYnbjXfOv5eqLHxQdnoa4MkVvrlVjEh7IDda+2
krzQ9db9o0HWbZ6a9hDIvuMND/ysrYy0aFPuxJ1kviZ2NIvsUYaYXEzwY3PS
foGwaMQZZewWXKsXcJPMy9KekPRsso8VqSbDnyQvposy28w2ILjpg/H5HxvQ
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
gtA9G5GDTyiMrk5q1kqi0K3U8UgzmUJpzl3Z/SkUYj2ktb1TSfzXDyJa0yik
51EP9j8l+1M/lpr7nOTf6F25+Zmk3MZZ7Xw2WT/bClPDHApWP/bsScil8F1W
IvXWWwpTL9+uES8mcQ5lHnGvoNBWbTc3v5aCiti0yPVmClu1G3bldlC4b35y
hxebQkfbvZa+DxTafZoF5/ZTWHFUzfvXIAWjYLeA118peM7tTDEZJevwmXOg
6Qc5T5bvCFGboMB1cl2n3xSJn3g5pPwvhRM11Z/GZ7IRGe/3YDkPG5+HAtTU
5rDRJRM935CfjaTXJf4W89g4tHjTktPCpHyX1h6PhWz8+7qhO0iUjcQ6n6DE
ZWyUOq3vLV/JRvh5L+HvDDYuP60wUZBi4+YeATM3WVKelqbTKMeG9NWPUdpr
2Qg9WptctZ6N6vBrDXYqJJ5OrKPUZiLPjwMzNdjY3N15dtY2No54aO1S1mUj
Nft14x09NphnmH9kjdhQ/+PAzbWfDZH8Lynyh9jotPdufHGEDbEC7fin1mzo
wPPCGns2lhdOP8M5Nlp6WtV43NmwkhXOj7jGhlvyOeXlgWxozbHMzghnIyb4
YLJHHBsXr8mtuveMjb1mMWIib9mIWzJ3aKyGjO/QrEZJDhtfK1xvXh8hcbNS
v/dwczARLHtBaAkH9Xq8r1sUOEiNv/dFSJuDmdJ336WbcnA974ztYwcODhgN
9P/x5mDr1D+30gccFI5rDYpkcSB8dO5ZgWoOPhpbNXf2cPBQ/1vviz8c+N03
+9gi2gVTm3SpFRu7UPXT2UvQuAtF+nNqex26UFEfe7LXvwvDIjeMnj/uwktZ
Aynegi5M2X27/aq1C/vMHNZGfunChPVyNe9/XVjeXnUkaU43bvJ9LNg5vxv9
E69ePVjcjbQjp5qal3ejbU7KbiVGN26964uokuzGoO0qu8My3QjiTdK6K9uN
q9uMZbWIw9bXfE9JdyNxlfy0jEQ3NsXFpMWs7MbbbAnql2g3NszzFTMV7sb1
DSpWHL5ufHy3xjV1ZjfOqlfvfDJK+iV+YVsXpwu1rzcrrnnfBZlFAiqpOV0Y
sNsbcjWuC2utXJZXBnaBKuQvu+/WhfWyL8T5rLpgeMn38PpdXThHxchJru/C
wT7dh8NLuzBqusY3hasL1l2veY9/4WBpyS03RgsHmc5zGUNvOPCYZRtYk8jB
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
3OGpYvzQUl/ws7cY/wUy1hZr
       "]}, {Automatic}], $CellContext`mNFunction = 
    InterpolatingFunction[{{0., 3.13297665*^7}}, {
      5, 7, 0, {1070}, {2}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1: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
qafYElvXm7DeNvLhAfTnBBEFYczzi2FdzbPkJWnkyteIO271171Lnv2AdfWq
yEMbmJfbQmz4j/5PHYyP7Caf+4PcUMIU+f7DTMEzx5hy/mWIC+RNee6KxE4V
U+RvWsy8gcup52gxP9SQ8aPm5Nl25MPXE6O2Ms/Ul/V19tG3+wh5TyT5nTP0
VZ8n17zGdTzzqIcUsV5rBfNiG/vz2hh3/tiv9xH9hpkBZWTM4Ds52wy+sYup
5642Q/18SzN+32ai7H76TOPIC7Pp31fHOsq9jDsrrYV+1n4t73sieUPHWq6n
b871/jLnu7hyHef8LjF8kQW/P9GCPglLvn+OluzDLUv4jEZZcT1HK87fFWJo
H3V/XWu+4yes+a40W0OfM9sGqL6V2J5tw/enj3ysli3qSIbasn915B3T7PjO
bLDje5htx7oD7fm9JvbgNclEmy/EZQYOnKdUB/6OiDvSZ++I73C4Sxyt5MS8
KCe+pxLO/A5/4pQeZ57Lbhfek5GuQO0LrtCvGrqx7oD1nNui9ZyTM+7gloc9
6Du2AfqVSxvBld5u4jp6W/hOlW1FnbeeXsDTi7x5brLbeW7TdvL3RNOPc+vr
z3erLJD3UWMvfycf/Al/uncQfwfUg/kuy4ewrmIosHdNBN+jmCi+OwNj2MeI
OPpXJnD+Zyfz92vVeb4zaem8V/ZXOIdeWcDK57fg//5nPudZpojvuX8p8ivO
VPBd3l+LeMFvTzhP15t5ThIv6J/zH3Sxue38XRjynud37yPRvptz0NzD7xX+
4BwdEQtEv24PDMT7WC0ZiL7XSgVi/b+HA1uiRkFfsHYMuKL4ePh3xE4EhspN
Rvx1uCzqzemUC8S5LZMH/75jBuKVCbOQf+XmbORp/a0ElLs5B3p9wjzwPj8V
8CFaC5CvJ6EKrp21ENzUchHrdS7mPvzVoA/sWYp1P3ksA19RrgH0V1iO/Pne
AmDnDSF8M9/+AZSVWcl9qq9CvNhMC3y/82qgt7s285x1gEbmulj/6nI9xJOn
6aOOTbc+4g6FBjzXI4bArtVruJ8+ovclI/i+rjVGHbWvxIgoE6DxHFPE8/NM
8X0TdMzAgyvMsM4y07XwWVau5TnpmUNfmW8Ov/KCdax/Zh3Wi5O0AJ++0YL7
LSWuULSEPmmfJfIW1Vmizo3ZVtATt1uBD8+3wnoyg62R165rzT6GkEeWWCNe
IGHDc9Cw4bn72EA/m00Ul7QFCl1tOTePbVEnx8GOepsd9HP29sgfdt+e3zvF
gfO03oHzkOGAPMEbYouCI/vo5Ig6ufGO/K56cmlpJ/ZLywm+uQHkuVnEkm9O
8O/VdAa673HGPppvkyd2O3NeVFzYHxcXxBViya+WurAPfeRqKq48ZwdX8J6I
fl7oyvn56op8cxU3xNM8iF4X3RCP6XLjd+uuZ1+ured8KrsDrxe685x9PTjv
azYAM0w2Ij7j8Cb258fm/jnaClxS6wVfr4UP59t2J9Y93LuL82K2J5D/vzwA
X55sMNY/eSkEcU/NMPh1Hh3nOg4n2cfzpxAf/SCB9/G3JOQ3nUrhnA08D0zf
mMZ+1KRzXzcz4bdTucb578xi3bCb0LPn5fLeP7wFvXFDHvQtUnf43nz7G7xt
zV2ei8M99tGrEOvr/3mf9zCyCPqr5H94T9qLOc8+D9j/0lLu+/1DnkdLGfuS
Wg70eElUmvWI67oQ01KIHq39+vwKzkVABdYxy6ngPXhVgfXFRlXy3ZpXyfdW
rRLx0lWVfHeMK5FXaEv9ngf5TF/G3Q8Tp8dTl81iPZmH1Ee/ICp+o75Pugp1
1JWqsN5BIXmIFdHbp4rzHMa4Vno/FhPj24h3BlWzP7OqeY5axER36vIhRKnM
avg7Kqs5l5+JElNqeD8ENXw/XGp4Lw6TW2fWsN9VNfyuL9RVZWs510Ji6/pa
vvNhtXz/btZyv89r+T4OrwPvXlLHe+hWx3mKIobcpS7/gbx02mP23fAx+xtI
3pxOjH/ymPdMqp7vyRJihRtx74l6/n4V1nO+P9Zz//IN0N3WNKCuX2ADf7fS
G/g7Uk/UlnwCn6HqE+S9tX/C/h59grznN4lKL4gfRjTyfV/SyP07NnJejjRy
Dq738yeNvF/iTTx/xSaej0ET19vWxP2cJD+Zy/ikpibO5w9igdxT9kuTaGr3
lO9EwNP++02UyHnKe1lD35TOp7znw5p5D2Y1c240mzn366hLeFKPOUT9YHwz
8qtvNHN+H/THnxEnfaKvb/AzxB2nPOPvuvIz9lFAXGTSz537uQ/9fgee8T2K
eob1o5KJAdfo68gn/1ROf0QT6xe/Jo/tZv6wgS3s0yhi/eQW5C1UaOHv2IIW
zqF6C+dbi7qXEbm6Ff15zsz/uon+ju2MJ+8mTjnEuEUY43bRrLMggbzuHOuY
ZdJ3Jau/Xh7jiwpZJ6SUWPqIOKyGqFdP3PiEdY42EU8/Jc5sZj13Ef4fDouG
/w==
      "], {Developer`PackedArrayForm, CompressedData["
1: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
korUpCEt6UhPBv4Hz7oK+g==
       "], CompressedData["
1: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
1A==
       "]}, {Automatic}], $CellContext`mOFunction = 
    InterpolatingFunction[{{0., 3.13297665*^7}}, {
      5, 7, 0, {1070}, {2}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1: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
qafYElvXm7DeNvLhAfTnBBEFYczzi2FdzbPkJWnkyteIO271171Lnv2AdfWq
yEMbmJfbQmz4j/5PHYyP7Caf+4PcUMIU+f7DTMEzx5hy/mWIC+RNee6KxE4V
U+RvWsy8gcup52gxP9SQ8aPm5Nl25MPXE6O2Ms/Ul/V19tG3+wh5TyT5nTP0
VZ8n17zGdTzzqIcUsV5rBfNiG/vz2hh3/tiv9xH9hpkBZWTM4Ds52wy+sYup
5642Q/18SzN+32ai7H76TOPIC7Pp31fHOsq9jDsrrYV+1n4t73sieUPHWq6n
b871/jLnu7hyHef8LjF8kQW/P9GCPglLvn+OluzDLUv4jEZZcT1HK87fFWJo
H3V/XWu+4yes+a40W0OfM9sGqL6V2J5tw/enj3ysli3qSIbasn915B3T7PjO
bLDje5htx7oD7fm9JvbgNclEmy/EZQYOnKdUB/6OiDvSZ++I73C4Sxyt5MS8
KCe+pxLO/A5/4pQeZ57Lbhfek5GuQO0LrtCvGrqx7oD1nNui9ZyTM+7gloc9
6Du2AfqVSxvBld5u4jp6W/hOlW1FnbeeXsDTi7x5brLbeW7TdvL3RNOPc+vr
z3erLJD3UWMvfycf/Al/uncQfwfUg/kuy4ewrmIosHdNBN+jmCi+OwNj2MeI
OPpXJnD+Zyfz92vVeb4zaem8V/ZXOIdeWcDK57fg//5nPudZpojvuX8p8ivO
VPBd3l+LeMFvTzhP15t5ThIv6J/zH3Sxue38XRjynud37yPRvptz0NzD7xX+
4BwdEQtEv24PDMT7WC0ZiL7XSgVi/b+HA1uiRkFfsHYMuKL4ePh3xE4EhspN
Rvx1uCzqzemUC8S5LZMH/75jBuKVCbOQf+XmbORp/a0ElLs5B3p9wjzwPj8V
8CFaC5CvJ6EKrp21ENzUchHrdS7mPvzVoA/sWYp1P3ksA19RrgH0V1iO/Pne
AmDnDSF8M9/+AZSVWcl9qq9CvNhMC3y/82qgt7s285x1gEbmulj/6nI9xJOn
6aOOTbc+4g6FBjzXI4bArtVruJ8+ovclI/i+rjVGHbWvxIgoE6DxHFPE8/NM
8X0TdMzAgyvMsM4y07XwWVau5TnpmUNfmW8Ov/KCdax/Zh3Wi5O0AJ++0YL7
LSWuULSEPmmfJfIW1Vmizo3ZVtATt1uBD8+3wnoyg62R165rzT6GkEeWWCNe
IGHDc9Cw4bn72EA/m00Ul7QFCl1tOTePbVEnx8GOepsd9HP29sgfdt+e3zvF
gfO03oHzkOGAPMEbYouCI/vo5Ig6ufGO/K56cmlpJ/ZLywm+uQHkuVnEkm9O
8O/VdAa673HGPppvkyd2O3NeVFzYHxcXxBViya+WurAPfeRqKq48ZwdX8J6I
fl7oyvn56op8cxU3xNM8iF4X3RCP6XLjd+uuZ1+ured8KrsDrxe685x9PTjv
azYAM0w2Ij7j8Cb258fm/jnaClxS6wVfr4UP59t2J9Y93LuL82K2J5D/vzwA
X55sMNY/eSkEcU/NMPh1Hh3nOg4n2cfzpxAf/SCB9/G3JOQ3nUrhnA08D0zf
mMZ+1KRzXzcz4bdTucb578xi3bCb0LPn5fLeP7wFvXFDHvQtUnf43nz7G7xt
zV2ei8M99tGrEOvr/3mf9zCyCPqr5H94T9qLOc8+D9j/0lLu+/1DnkdLGfuS
Wg70eElUmvWI67oQ01KIHq39+vwKzkVABdYxy6ngPXhVgfXFRlXy3ZpXyfdW
rRLx0lWVfHeMK5FXaEv9ngf5TF/G3Q8Tp8dTl81iPZmH1Ee/ICp+o75Pugp1
1JWqsN5BIXmIFdHbp4rzHMa4Vno/FhPj24h3BlWzP7OqeY5axER36vIhRKnM
avg7Kqs5l5+JElNqeD8ENXw/XGp4Lw6TW2fWsN9VNfyuL9RVZWs510Ji6/pa
vvNhtXz/btZyv89r+T4OrwPvXlLHe+hWx3mKIobcpS7/gbx02mP23fAx+xtI
3pxOjH/ymPdMqp7vyRJihRtx74l6/n4V1nO+P9Zz//IN0N3WNKCuX2ADf7fS
G/g7Uk/UlnwCn6HqE+S9tX/C/h59grznN4lKL4gfRjTyfV/SyP07NnJejjRy
Dq738yeNvF/iTTx/xSaej0ET19vWxP2cJD+Zy/ikpibO5w9igdxT9kuTaGr3
lO9EwNP++02UyHnKe1lD35TOp7znw5p5D2Y1c240mzn366hLeFKPOUT9YHwz
8qtvNHN+H/THnxEnfaKvb/AzxB2nPOPvuvIz9lFAXGTSz537uQ/9fgee8T2K
eob1o5KJAdfo68gn/1ROf0QT6xe/Jo/tZv6wgS3s0yhi/eQW5C1UaOHv2IIW
zqF6C+dbi7qXEbm6Ff15zsz/uon+ju2MJ+8mTjnEuEUY43bRrLMggbzuHOuY
ZdJ3Jau/Xh7jiwpZJ6SUWPqIOKyGqFdP3PiEdY42EU8/Jc5sZj13Ef4fDouG
/w==
      "], {Developer`PackedArrayForm, CompressedData["
1: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
korUpCEt6UhPBv4Hz7oK+g==
       "], CompressedData["
1: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
MtmvmW6+yID+dEqgXSQDve8UuG7HM/B3d9jP92kM9EtwZGzIYSD7jcaFnkIG
2C+FGolVMEDEyS33rGWgfltztPV9Bvp8hFoeP2DglGt9STNpWMuxsn87sfv1
f/vf/m/9r/vlvyps2FX6b1vHNf7xf+03tsUy/6glKFhMGa3MVUTZYfXrDmUx
l1UhpZTO/gLKo3xRNynX+xzJpdz8fen1f+ZdLJVOqdfQmEhZI3ov6p/5VdmC
KH3EStwpuV7m2/8T/6u94T+u1Ff453vYC1AqirD/vU/6wierl1LAeE025b6o
WmvKPCPHVZThId6VTaTqSzapUb4xXEE0kpZyfeOilPxspNJAKtpbcrCe9LDK
xLo6UofELbdrSFMUI98TpIsjQ7qqSN/v3qteQWpgE7uzjDQnw9atiFRk/dx0
AWnAzldeeaQ7BkMGr1F1aof1JZMKLU7YEk2qmbTC4QLp77rw/S6k6dKqbNak
c5E3FQ6R0uIOf5Ki6rw7pryKlO9T+6ePLWT+GtPhTaT0W/dULpFOlxYOHSAt
ZzZ0nWlmQIZ/9vRlUvZVO3hXkmbFaQV6k+fGeAP9TnUTA21icontjeS6fD5k
n93AwAM5XjOhejL/qNfL5chzRpiL/ziNYMD7zRtP/UpynsEfGWGlDLSvL0jY
d5uBvQYZM4V5DNx0n7zFfI2BG+7O6TbkOTbE9uLZK/Jcm5eaKtEPZKDRUPvp
DHnuVTBbTpx0Z+BexBGH2fMM/A/2V2Mb
       "]}, {Automatic}], $CellContext`exterior[
      Pattern[$CellContext`age, 
       Blank[]]] := Block[{$CellContext`sMass = $CellContext`massFunction[1]}, 
      Which[
       And[$CellContext`sMass == 1, $CellContext`age > 1.2301379784972*^10], {{
         Hue[
          $CellContext`colorFunction[$CellContext`minRadius, \
$CellContext`maxRadius, 
           $CellContext`radiusFunction[$CellContext`age]]], 
         Sphere[{0., 0., 0.}, 
          $CellContext`radiusFunction[$CellContext`age]]}, {Yellow, Thick, 
         $CellContext`splineCircle[{0., 0., 0.}, 
          255.36003168258475` (
           1 + ($CellContext`age - 1.2301379784972*^10)/(1.23015028*^10 - 
            1.2301379784972*^10)), {0., 6.283185307179586}]}, {Green, Thick, 
         $CellContext`splineCircle[{0., 0., 0.}, 
          173.98440203892892` (
           1 + ($CellContext`age - 1.23014904984972*^10)/(1.23015028*^10 - 
            1.23014904984972*^10)), {0., 6.283185307179586}]}, {Purple, Thick, 
         $CellContext`splineCircle[{0., 0., 0.}, 
          114.38026923196936` (
           1 + ($CellContext`age - 1.230150156984972*^10)/(1.23015028*^10 - 
            1.230150156984972*^10)), {0., 6.283185307179586}]}}, 
       And[$CellContext`sMass == 0.5, $CellContext`age > 1.375874649*^11], {
        Lighter[
         Hue[
          $CellContext`colorFunction[$CellContext`minRadius, \
$CellContext`maxRadius, 
           $CellContext`radiusFunction[$CellContext`age]]], ($CellContext`age - 
          1.375874649*^11)/(1.52874961*^11 - 1.375874649*^11)], 
        Sphere[{0., 0., 0.}, 
         $CellContext`radiusFunction[$CellContext`age]]}, 
       And[$CellContext`sMass == 0.1, $CellContext`age > 4.6085752152*^12], {
        Lighter[
         Hue[
          $CellContext`colorFunction[$CellContext`minRadius, \
$CellContext`maxRadius, 
           $CellContext`radiusFunction[$CellContext`age]]], ($CellContext`age - 
          4.6085752152*^12)/(4.65512648*^12 - 4.6085752152*^12)], 
        Sphere[{0., 0., 0.}, 
         $CellContext`radiusFunction[$CellContext`age]]}, True, {
        Hue[
         $CellContext`colorFunction[$CellContext`minRadius, \
$CellContext`maxRadius, 
          $CellContext`radiusFunction[$CellContext`age]]], 
        Sphere[{0., 0., 0.}, 
         $CellContext`radiusFunction[$CellContext`age]]}]], \
$CellContext`colorFunction[Blank[] Removed["min"], Blank[] Removed["max"], 
      Pattern[$CellContext`r, 
       Blank[]]] := 
    Block[{$CellContext`adjust = 0.}, 
      Return[0.175 - (($CellContext`r - Removed["min"]) 0.175)/(
        Removed["max"] - Removed["min"])]; Null], $CellContext`colorFunction[
     Removed["min"] Blank[], Removed["max"] Blank[], 
      Pattern[$CellContext`r, 
       Blank[]]] := 
    Block[{$CellContext`adjust = 0.}, 
      Return[0.175 - (($CellContext`r - Removed["min"]) 0.175)/(
        Removed["max"] - Removed["min"])]; Null], $CellContext`minRadius = 
    3.8023298852970173`, $CellContext`maxRadius = 
    524.5967431070571, $CellContext`splineCircle[
      Pattern[$CellContext`m, 
       Blank[List]], 
      Pattern[$CellContext`r, 
       Blank[]], 
      Optional[
       Pattern[$CellContext`angles, 
        Blank[List]], {0., 6.283185307179586}]] := Condition[
      Block[{$CellContext`seg, $CellContext`\[Phi], $CellContext`start, \
$CellContext`end, $CellContext`pts, $CellContext`w, $CellContext`k}, \
{$CellContext`start, $CellContext`end} = Mod[
          N[$CellContext`angles], 6.283185307179586]; 
       If[$CellContext`end <= $CellContext`start, 
         AddTo[$CellContext`end, 6.283185307179586]]; $CellContext`seg = 
        Quotient[
          N[$CellContext`end - $CellContext`start], 
          1.5707963267948966`]; $CellContext`\[Phi] = Mod[
          N[$CellContext`end - $CellContext`start], 1.5707963267948966`]; 
       If[$CellContext`seg == 
         4., $CellContext`seg = 3.; $CellContext`\[Phi] = 
          1.5707963267948966`]; $CellContext`pts = Map[$CellContext`r Dot[
            RotationMatrix[$CellContext`start], #]& , 
          Join[
           
           Take[{{1., 0.}, {1., 1.}, {0., 1.}, {-1., 1.}, {-1., 
            0.}, {-1., -1.}, {0., -1.}}, 2. $CellContext`seg + 1.], 
           Map[Dot[
             RotationMatrix[$CellContext`seg 1.5707963267948966`], #]& , {{1., 
              Tan[$CellContext`\[Phi]/2.]}, {
              Cos[$CellContext`\[Phi]], 
              Sin[$CellContext`\[Phi]]}}]]]; 
       If[Length[$CellContext`m] == 2, $CellContext`pts = 
         Map[$CellContext`m + #& , $CellContext`pts], $CellContext`pts = 
         Map[$CellContext`m + #& , 
           Transpose[
            Append[
             Transpose[$CellContext`pts], 
             ConstantArray[0, 
              Length[$CellContext`pts]]]]]]; $CellContext`w = Join[
          
          Take[{1., 1./Sqrt[2.], 1., 1./Sqrt[2.], 1., 1./Sqrt[2.], 1.}, 
           2. $CellContext`seg + 1.], {
           Cos[$CellContext`\[Phi]/2.], 1.}]; $CellContext`k = 
        Join[{0., 0., 0.}, 
          (Riffle[#, #]& )[
           Range[$CellContext`seg + 1.]], {$CellContext`seg + 1.}]; 
       BSplineCurve[$CellContext`pts, SplineDegree -> 2, 
         SplineKnots -> $CellContext`k, SplineWeights -> $CellContext`w]], 
      Or[Length[$CellContext`m] == 2., Length[$CellContext`m] == 
       3.]], $CellContext`sphereRange[
      Pattern[$CellContext`radius, 
       Blank[]]] := Which[$CellContext`radius < $CellContext`maxRadius/1000., 
      Return[$CellContext`maxRadius/
       1000.], $CellContext`radius < $CellContext`maxRadius/100., 
      Return[$CellContext`maxRadius/100.], True, 
      Return[$CellContext`maxRadius]], $CellContext`core[
      Pattern[$CellContext`age, 
       Blank[]]] := 
    Block[{$CellContext`he = $CellContext`rHeFunction[$CellContext`age] + \
$CellContext`rCFunction[$CellContext`age] + \
$CellContext`rOFunction[$CellContext`age], $CellContext`c = \
$CellContext`rCFunction[$CellContext`age] + \
$CellContext`rOFunction[$CellContext`age]}, 
      Return[{{LightBlue, 
         Tooltip[
          Disk[{0., 0.}, 
           $CellContext`rHeFunction[$CellContext`age]], "Helium"]}, {Yellow, 
         Tooltip[
          Disk[{0., 0.}, 
           $CellContext`rCFunction[$CellContext`age]], "Carbon"]}, {Pink, 
         Tooltip[
          Disk[{0., 0.}, 
           $CellContext`rOFunction[$CellContext`age]], "Oxygen"]}, Axes -> 
        True}]], $CellContext`rHeFunction = 
    InterpolatingFunction[{{0., 3.13297665*^7}}, {
      5, 7, 0, {1070}, {2}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1: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
qafYElvXm7DeNvLhAfTnBBEFYczzi2FdzbPkJWnkyteIO271171Lnv2AdfWq
yEMbmJfbQmz4j/5PHYyP7Caf+4PcUMIU+f7DTMEzx5hy/mWIC+RNee6KxE4V
U+RvWsy8gcup52gxP9SQ8aPm5Nl25MPXE6O2Ms/Ul/V19tG3+wh5TyT5nTP0
VZ8n17zGdTzzqIcUsV5rBfNiG/vz2hh3/tiv9xH9hpkBZWTM4Ds52wy+sYup
5642Q/18SzN+32ai7H76TOPIC7Pp31fHOsq9jDsrrYV+1n4t73sieUPHWq6n
b871/jLnu7hyHef8LjF8kQW/P9GCPglLvn+OluzDLUv4jEZZcT1HK87fFWJo
H3V/XWu+4yes+a40W0OfM9sGqL6V2J5tw/enj3ysli3qSIbasn915B3T7PjO
bLDje5htx7oD7fm9JvbgNclEmy/EZQYOnKdUB/6OiDvSZ++I73C4Sxyt5MS8
KCe+pxLO/A5/4pQeZ57Lbhfek5GuQO0LrtCvGrqx7oD1nNui9ZyTM+7gloc9
6Du2AfqVSxvBld5u4jp6W/hOlW1FnbeeXsDTi7x5brLbeW7TdvL3RNOPc+vr
z3erLJD3UWMvfycf/Al/uncQfwfUg/kuy4ewrmIosHdNBN+jmCi+OwNj2MeI
OPpXJnD+Zyfz92vVeb4zaem8V/ZXOIdeWcDK57fg//5nPudZpojvuX8p8ivO
VPBd3l+LeMFvTzhP15t5ThIv6J/zH3Sxue38XRjynud37yPRvptz0NzD7xX+
4BwdEQtEv24PDMT7WC0ZiL7XSgVi/b+HA1uiRkFfsHYMuKL4ePh3xE4EhspN
Rvx1uCzqzemUC8S5LZMH/75jBuKVCbOQf+XmbORp/a0ElLs5B3p9wjzwPj8V
8CFaC5CvJ6EKrp21ENzUchHrdS7mPvzVoA/sWYp1P3ksA19RrgH0V1iO/Pne
AmDnDSF8M9/+AZSVWcl9qq9CvNhMC3y/82qgt7s285x1gEbmulj/6nI9xJOn
6aOOTbc+4g6FBjzXI4bArtVruJ8+ovclI/i+rjVGHbWvxIgoE6DxHFPE8/NM
8X0TdMzAgyvMsM4y07XwWVau5TnpmUNfmW8Ov/KCdax/Zh3Wi5O0AJ++0YL7
LSWuULSEPmmfJfIW1Vmizo3ZVtATt1uBD8+3wnoyg62R165rzT6GkEeWWCNe
IGHDc9Cw4bn72EA/m00Ul7QFCl1tOTePbVEnx8GOepsd9HP29sgfdt+e3zvF
gfO03oHzkOGAPMEbYouCI/vo5Ig6ufGO/K56cmlpJ/ZLywm+uQHkuVnEkm9O
8O/VdAa673HGPppvkyd2O3NeVFzYHxcXxBViya+WurAPfeRqKq48ZwdX8J6I
fl7oyvn56op8cxU3xNM8iF4X3RCP6XLjd+uuZ1+ured8KrsDrxe685x9PTjv
azYAM0w2Ij7j8Cb258fm/jnaClxS6wVfr4UP59t2J9Y93LuL82K2J5D/vzwA
X55sMNY/eSkEcU/NMPh1Hh3nOg4n2cfzpxAf/SCB9/G3JOQ3nUrhnA08D0zf
mMZ+1KRzXzcz4bdTucb578xi3bCb0LPn5fLeP7wFvXFDHvQtUnf43nz7G7xt
zV2ei8M99tGrEOvr/3mf9zCyCPqr5H94T9qLOc8+D9j/0lLu+/1DnkdLGfuS
Wg70eElUmvWI67oQ01KIHq39+vwKzkVABdYxy6ngPXhVgfXFRlXy3ZpXyfdW
rRLx0lWVfHeMK5FXaEv9ngf5TF/G3Q8Tp8dTl81iPZmH1Ee/ICp+o75Pugp1
1JWqsN5BIXmIFdHbp4rzHMa4Vno/FhPj24h3BlWzP7OqeY5axER36vIhRKnM
avg7Kqs5l5+JElNqeD8ENXw/XGp4Lw6TW2fWsN9VNfyuL9RVZWs510Ji6/pa
vvNhtXz/btZyv89r+T4OrwPvXlLHe+hWx3mKIobcpS7/gbx02mP23fAx+xtI
3pxOjH/ymPdMqp7vyRJihRtx74l6/n4V1nO+P9Zz//IN0N3WNKCuX2ADf7fS
G/g7Uk/UlnwCn6HqE+S9tX/C/h59grznN4lKL4gfRjTyfV/SyP07NnJejjRy
Dq738yeNvF/iTTx/xSaej0ET19vWxP2cJD+Zy/ikpibO5w9igdxT9kuTaGr3
lO9EwNP++02UyHnKe1lD35TOp7znw5p5D2Y1c240mzn366hLeFKPOUT9YHwz
8qtvNHN+H/THnxEnfaKvb/AzxB2nPOPvuvIz9lFAXGTSz537uQ/9fgee8T2K
eob1o5KJAdfo68gn/1ROf0QT6xe/Jo/tZv6wgS3s0yhi/eQW5C1UaOHv2IIW
zqF6C+dbi7qXEbm6Ff15zsz/uon+ju2MJ+8mTjnEuEUY43bRrLMggbzuHOuY
ZdJ3Jau/Xh7jiwpZJ6SUWPqIOKyGqFdP3PiEdY42EU8/Jc5sZj13Ef4fDouG
/w==
      "], {Developer`PackedArrayForm, CompressedData["
1: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
korUpCEt6UhPBv4Hz7oK+g==
       "], CompressedData["
1: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
7rXm/oS7rNE+489+wv8Dl2po8g==
       "]}, {Automatic}], $CellContext`rCFunction = 
    InterpolatingFunction[{{0., 3.13297665*^7}}, {
      5, 7, 0, {1070}, {2}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1: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
qafYElvXm7DeNvLhAfTnBBEFYczzi2FdzbPkJWnkyteIO271171Lnv2AdfWq
yEMbmJfbQmz4j/5PHYyP7Caf+4PcUMIU+f7DTMEzx5hy/mWIC+RNee6KxE4V
U+RvWsy8gcup52gxP9SQ8aPm5Nl25MPXE6O2Ms/Ul/V19tG3+wh5TyT5nTP0
VZ8n17zGdTzzqIcUsV5rBfNiG/vz2hh3/tiv9xH9hpkBZWTM4Ds52wy+sYup
5642Q/18SzN+32ai7H76TOPIC7Pp31fHOsq9jDsrrYV+1n4t73sieUPHWq6n
b871/jLnu7hyHef8LjF8kQW/P9GCPglLvn+OluzDLUv4jEZZcT1HK87fFWJo
H3V/XWu+4yes+a40W0OfM9sGqL6V2J5tw/enj3ysli3qSIbasn915B3T7PjO
bLDje5htx7oD7fm9JvbgNclEmy/EZQYOnKdUB/6OiDvSZ++I73C4Sxyt5MS8
KCe+pxLO/A5/4pQeZ57Lbhfek5GuQO0LrtCvGrqx7oD1nNui9ZyTM+7gloc9
6Du2AfqVSxvBld5u4jp6W/hOlW1FnbeeXsDTi7x5brLbeW7TdvL3RNOPc+vr
z3erLJD3UWMvfycf/Al/uncQfwfUg/kuy4ewrmIosHdNBN+jmCi+OwNj2MeI
OPpXJnD+Zyfz92vVeb4zaem8V/ZXOIdeWcDK57fg//5nPudZpojvuX8p8ivO
VPBd3l+LeMFvTzhP15t5ThIv6J/zH3Sxue38XRjynud37yPRvptz0NzD7xX+
4BwdEQtEv24PDMT7WC0ZiL7XSgVi/b+HA1uiRkFfsHYMuKL4ePh3xE4EhspN
Rvx1uCzqzemUC8S5LZMH/75jBuKVCbOQf+XmbORp/a0ElLs5B3p9wjzwPj8V
8CFaC5CvJ6EKrp21ENzUchHrdS7mPvzVoA/sWYp1P3ksA19RrgH0V1iO/Pne
AmDnDSF8M9/+AZSVWcl9qq9CvNhMC3y/82qgt7s285x1gEbmulj/6nI9xJOn
6aOOTbc+4g6FBjzXI4bArtVruJ8+ovclI/i+rjVGHbWvxIgoE6DxHFPE8/NM
8X0TdMzAgyvMsM4y07XwWVau5TnpmUNfmW8Ov/KCdax/Zh3Wi5O0AJ++0YL7
LSWuULSEPmmfJfIW1Vmizo3ZVtATt1uBD8+3wnoyg62R165rzT6GkEeWWCNe
IGHDc9Cw4bn72EA/m00Ul7QFCl1tOTePbVEnx8GOepsd9HP29sgfdt+e3zvF
gfO03oHzkOGAPMEbYouCI/vo5Ig6ufGO/K56cmlpJ/ZLywm+uQHkuVnEkm9O
8O/VdAa673HGPppvkyd2O3NeVFzYHxcXxBViya+WurAPfeRqKq48ZwdX8J6I
fl7oyvn56op8cxU3xNM8iF4X3RCP6XLjd+uuZ1+ured8KrsDrxe685x9PTjv
azYAM0w2Ij7j8Cb258fm/jnaClxS6wVfr4UP59t2J9Y93LuL82K2J5D/vzwA
X55sMNY/eSkEcU/NMPh1Hh3nOg4n2cfzpxAf/SCB9/G3JOQ3nUrhnA08D0zf
mMZ+1KRzXzcz4bdTucb578xi3bCb0LPn5fLeP7wFvXFDHvQtUnf43nz7G7xt
zV2ei8M99tGrEOvr/3mf9zCyCPqr5H94T9qLOc8+D9j/0lLu+/1DnkdLGfuS
Wg70eElUmvWI67oQ01KIHq39+vwKzkVABdYxy6ngPXhVgfXFRlXy3ZpXyfdW
rRLx0lWVfHeMK5FXaEv9ngf5TF/G3Q8Tp8dTl81iPZmH1Ee/ICp+o75Pugp1
1JWqsN5BIXmIFdHbp4rzHMa4Vno/FhPj24h3BlWzP7OqeY5axER36vIhRKnM
avg7Kqs5l5+JElNqeD8ENXw/XGp4Lw6TW2fWsN9VNfyuL9RVZWs510Ji6/pa
vvNhtXz/btZyv89r+T4OrwPvXlLHe+hWx3mKIobcpS7/gbx02mP23fAx+xtI
3pxOjH/ymPdMqp7vyRJihRtx74l6/n4V1nO+P9Zz//IN0N3WNKCuX2ADf7fS
G/g7Uk/UlnwCn6HqE+S9tX/C/h59grznN4lKL4gfRjTyfV/SyP07NnJejjRy
Dq738yeNvF/iTTx/xSaej0ET19vWxP2cJD+Zy/ikpibO5w9igdxT9kuTaGr3
lO9EwNP++02UyHnKe1lD35TOp7znw5p5D2Y1c240mzn366hLeFKPOUT9YHwz
8qtvNHN+H/THnxEnfaKvb/AzxB2nPOPvuvIz9lFAXGTSz537uQ/9fgee8T2K
eob1o5KJAdfo68gn/1ROf0QT6xe/Jo/tZv6wgS3s0yhi/eQW5C1UaOHv2IIW
zqF6C+dbi7qXEbm6Ff15zsz/uon+ju2MJ+8mTjnEuEUY43bRrLMggbzuHOuY
ZdJ3Jau/Xh7jiwpZJ6SUWPqIOKyGqFdP3PiEdY42EU8/Jc5sZj13Ef4fDouG
/w==
      "], {Developer`PackedArrayForm, CompressedData["
1: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
korUpCEt6UhPBv4Hz7oK+g==
       "], CompressedData["
1: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
jf8BiG8kyQ==
       "]}, {Automatic}], $CellContext`rOFunction = 
    InterpolatingFunction[{{0., 3.13297665*^7}}, {
      5, 7, 0, {1070}, {2}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1: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
qafYElvXm7DeNvLhAfTnBBEFYczzi2FdzbPkJWnkyteIO271171Lnv2AdfWq
yEMbmJfbQmz4j/5PHYyP7Caf+4PcUMIU+f7DTMEzx5hy/mWIC+RNee6KxE4V
U+RvWsy8gcup52gxP9SQ8aPm5Nl25MPXE6O2Ms/Ul/V19tG3+wh5TyT5nTP0
VZ8n17zGdTzzqIcUsV5rBfNiG/vz2hh3/tiv9xH9hpkBZWTM4Ds52wy+sYup
5642Q/18SzN+32ai7H76TOPIC7Pp31fHOsq9jDsrrYV+1n4t73sieUPHWq6n
b871/jLnu7hyHef8LjF8kQW/P9GCPglLvn+OluzDLUv4jEZZcT1HK87fFWJo
H3V/XWu+4yes+a40W0OfM9sGqL6V2J5tw/enj3ysli3qSIbasn915B3T7PjO
bLDje5htx7oD7fm9JvbgNclEmy/EZQYOnKdUB/6OiDvSZ++I73C4Sxyt5MS8
KCe+pxLO/A5/4pQeZ57Lbhfek5GuQO0LrtCvGrqx7oD1nNui9ZyTM+7gloc9
6Du2AfqVSxvBld5u4jp6W/hOlW1FnbeeXsDTi7x5brLbeW7TdvL3RNOPc+vr
z3erLJD3UWMvfycf/Al/uncQfwfUg/kuy4ewrmIosHdNBN+jmCi+OwNj2MeI
OPpXJnD+Zyfz92vVeb4zaem8V/ZXOIdeWcDK57fg//5nPudZpojvuX8p8ivO
VPBd3l+LeMFvTzhP15t5ThIv6J/zH3Sxue38XRjynud37yPRvptz0NzD7xX+
4BwdEQtEv24PDMT7WC0ZiL7XSgVi/b+HA1uiRkFfsHYMuKL4ePh3xE4EhspN
Rvx1uCzqzemUC8S5LZMH/75jBuKVCbOQf+XmbORp/a0ElLs5B3p9wjzwPj8V
8CFaC5CvJ6EKrp21ENzUchHrdS7mPvzVoA/sWYp1P3ksA19RrgH0V1iO/Pne
AmDnDSF8M9/+AZSVWcl9qq9CvNhMC3y/82qgt7s285x1gEbmulj/6nI9xJOn
6aOOTbc+4g6FBjzXI4bArtVruJ8+ovclI/i+rjVGHbWvxIgoE6DxHFPE8/NM
8X0TdMzAgyvMsM4y07XwWVau5TnpmUNfmW8Ov/KCdax/Zh3Wi5O0AJ++0YL7
LSWuULSEPmmfJfIW1Vmizo3ZVtATt1uBD8+3wnoyg62R165rzT6GkEeWWCNe
IGHDc9Cw4bn72EA/m00Ul7QFCl1tOTePbVEnx8GOepsd9HP29sgfdt+e3zvF
gfO03oHzkOGAPMEbYouCI/vo5Ig6ufGO/K56cmlpJ/ZLywm+uQHkuVnEkm9O
8O/VdAa673HGPppvkyd2O3NeVFzYHxcXxBViya+WurAPfeRqKq48ZwdX8J6I
fl7oyvn56op8cxU3xNM8iF4X3RCP6XLjd+uuZ1+ured8KrsDrxe685x9PTjv
azYAM0w2Ij7j8Cb258fm/jnaClxS6wVfr4UP59t2J9Y93LuL82K2J5D/vzwA
X55sMNY/eSkEcU/NMPh1Hh3nOg4n2cfzpxAf/SCB9/G3JOQ3nUrhnA08D0zf
mMZ+1KRzXzcz4bdTucb578xi3bCb0LPn5fLeP7wFvXFDHvQtUnf43nz7G7xt
zV2ei8M99tGrEOvr/3mf9zCyCPqr5H94T9qLOc8+D9j/0lLu+/1DnkdLGfuS
Wg70eElUmvWI67oQ01KIHq39+vwKzkVABdYxy6ngPXhVgfXFRlXy3ZpXyfdW
rRLx0lWVfHeMK5FXaEv9ngf5TF/G3Q8Tp8dTl81iPZmH1Ee/ICp+o75Pugp1
1JWqsN5BIXmIFdHbp4rzHMa4Vno/FhPj24h3BlWzP7OqeY5axER36vIhRKnM
avg7Kqs5l5+JElNqeD8ENXw/XGp4Lw6TW2fWsN9VNfyuL9RVZWs510Ji6/pa
vvNhtXz/btZyv89r+T4OrwPvXlLHe+hWx3mKIobcpS7/gbx02mP23fAx+xtI
3pxOjH/ymPdMqp7vyRJihRtx74l6/n4V1nO+P9Zz//IN0N3WNKCuX2ADf7fS
G/g7Uk/UlnwCn6HqE+S9tX/C/h59grznN4lKL4gfRjTyfV/SyP07NnJejjRy
Dq738yeNvF/iTTx/xSaej0ET19vWxP2cJD+Zy/ikpibO5w9igdxT9kuTaGr3
lO9EwNP++02UyHnKe1lD35TOp7znw5p5D2Y1c240mzn366hLeFKPOUT9YHwz
8qtvNHN+H/THnxEnfaKvb/AzxB2nPOPvuvIz9lFAXGTSz537uQ/9fgee8T2K
eob1o5KJAdfo68gn/1ROf0QT6xe/Jo/tZv6wgS3s0yhi/eQW5C1UaOHv2IIW
zqF6C+dbi7qXEbm6Ff15zsz/uon+ju2MJ+8mTjnEuEUY43bRrLMggbzuHOuY
ZdJ3Jau/Xh7jiwpZJ6SUWPqIOKyGqFdP3PiEdY42EU8/Jc5sZj13Ef4fDouG
/w==
      "], {Developer`PackedArrayForm, CompressedData["
1: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
korUpCEt6UhPBv4Hz7oK+g==
       "], CompressedData["
1:eJztzjENwCAQAMBvwoaIhoGpSS3goRJImOuvVmoGDywsdwqu9PcZR0TcKQAA
AAAAAIAF9Rz5v762+wHAHhOhHASQ
       "]}, {Automatic}], $CellContext`maxTSurface = 
    23558.48563000357, $CellContext`minLuminosity = 
    3846.756798490475, $CellContext`maxLuminosity = 
    37851.1562015959}]], "Output",
 CellChangeTimes->{3.6719382178605084`*^9, 3.6719382820451794`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Data Initialization Functions (Initialize and \
Connect):",
 FontFamily->"Times New Roman",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "Section",
 CellChangeTimes->{{3.6695110152244797`*^9, 3.6695110219661794`*^9}, {
  3.6705114859285517`*^9, 3.67051149050111*^9}, {3.671020930167638*^9, 
  3.6710209511776676`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"initialize", "[", "fileName_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "reads", " ", "data", " ", "from", " ", "a",
      " ", "data", " ", "file", " ", 
     RowBox[{"(", 
      RowBox[{"input", " ", "as", " ", "a", " ", "parameter"}], ")"}], " ", 
     "into", " ", "a", " ", "list", " ", "of", " ", "associations", " ", 
     "Mathematica", " ", "can", " ", "use", " ", "and", " ", "we", " ", "can",
      " ", 
     RowBox[{"understand", ".", " ", "Each"}], " ", "association", " ", 
     "refers", " ", "to", " ", "a", " ", "list", " ", "of", " ", "that", " ", 
     "type", " ", "of", " ", "data"}], ",", " ", 
    RowBox[{"arranged", " ", "in", " ", "chronological", " ", 
     RowBox[{"order", ".", " ", "We"}], " ", "had", " ", "originally", " ", 
     "intended", " ", "to", " ", "use", " ", "datasets", " ", "to", " ", 
     "serve", " ", "this", " ", "purpose"}], ",", " ", 
    RowBox[{
    "but", " ", "we", " ", "decided", " ", "to", " ", "use", " ", "plain", 
     " ", "associations", " ", "instead", " ", "because", " ", 
     RowBox[{"there", "'"}], "s", " ", "better", " ", "support", " ", "in", 
     " ", "Mathematica", " ", "for", " ", "this", " ", "style", " ", "of", 
     " ", "database"}], ",", " ", 
    RowBox[{
    "and", " ", "the", " ", "syntax", " ", "for", " ", "calling", " ", 
     "these", " ", "values", " ", "is", " ", "less", " ", 
     RowBox[{"complicated", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{"SetDirectory", "[", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
         "\"\<Stellar Database\>\""}], "]"}], "]"}], "]"}], ";", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Quiet", " ", "is", " ", "used", " ", "to", " ", "suppress", " ", 
        "the", " ", "error", " ", "messages", " ", "due", " ", "to", " ", 
        "the", " ", 
        RowBox[{"palettes", ".", " ", "Note"}], " ", "that", " ", "the", " ", 
        "program", " ", "still", " ", "functions", " ", "fully", " ", 
        "without", " ", "Quiet"}], ";", " ", 
       RowBox[{
       "it", " ", "is", " ", "just", " ", "annoying", " ", "to", " ", "see", 
        " ", "the", " ", "messages", " ", "unnecessarily"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"Import", "[", 
       RowBox[{"fileName", ",", "\"\<Table\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<Age\>\"", "\[Rule]", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2."}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<Mass\>\"", "\[Rule]", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "3."}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<Luminosity\>\"", "\[Rule]", 
           SuperscriptBox["10.", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "4."}], "]"}], "]"}]]}], ",", 
          RowBox[{"\"\<Radius\>\"", "\[Rule]", 
           SuperscriptBox["10.", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "5."}], "]"}], "]"}]]}], ",", 
          RowBox[{"\"\<\!\(\*SubscriptBox[\(T\), \(s\)]\)\>\"", "\[Rule]", 
           SuperscriptBox["10.", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "6."}], "]"}], "]"}]]}], ",", 
          RowBox[{"\"\<\!\(\*SubscriptBox[\(T\), \(c\)]\)\>\"", "\[Rule]", 
           SuperscriptBox["10.", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "7."}], "]"}], "]"}]]}], ",", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \(c\)]\)\>\"", "\[Rule]", 
           SuperscriptBox["10.", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "8."}], "]"}], "]"}]]}], ",", 
          RowBox[{"\"\<\!\(\*SubscriptBox[\(P\), \(c\)]\)\>\"", "\[Rule]", 
           SuperscriptBox["10.", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "9."}], "]"}], "]"}]]}], ",", 
          RowBox[{"\"\<\!\(\*SubscriptBox[\(M\), \(H\)]\)\>\"", "\[Rule]", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "11."}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<\!\(\*SubscriptBox[\(M\), \(He\)]\)\>\"", "\[Rule]", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "12."}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<\!\(\*SubscriptBox[\(M\), \(C\)]\)\>\"", "\[Rule]", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "13."}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<\!\(\*SubscriptBox[\(M\), \(N\)]\)\>\"", "\[Rule]", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "14."}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<\!\(\*SubscriptBox[\(M\), \(O\)]\)\>\"", "\[Rule]", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "15."}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<\!\(\*SubscriptBox[\(R\), \(He\)]\)\>\"", "\[Rule]", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "27."}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<\!\(\*SubscriptBox[\(R\), \(C\)]\)\>\"", "\[Rule]", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "28."}], "]"}], "]"}]}], ",", 
          RowBox[{"\"\<\!\(\*SubscriptBox[\(R\), \(O\)]\)\>\"", "\[Rule]", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "29."}], "]"}], "]"}]}]}], "|>"}], ",", 
        "data"}], "}"}], "\[IndentingNewLine]", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.670676747082619*^9, {3.6706768828210077`*^9, 3.6706769151148825`*^9}, {
   3.670677060569326*^9, 3.6706771135819764`*^9}, {3.6706772259675956`*^9, 
   3.6706772844705205`*^9}, {3.6706773224323363`*^9, 
   3.6706773858336043`*^9}, {3.6706775291036534`*^9, 
   3.6706775322537165`*^9}, {3.6707073742446694`*^9, 
   3.6707074298440523`*^9}, {3.670707526704052*^9, 3.670707528354052*^9}, {
   3.670707560514052*^9, 3.670707581794052*^9}, {3.6707078988043504`*^9, 
   3.6707079107844706`*^9}, {3.670770822076584*^9, 3.6707708377390842`*^9}, {
   3.670771127911584*^9, 3.6707711345115843`*^9}, {3.6710261047675734`*^9, 
   3.6710264251862755`*^9}, {3.671202071303035*^9, 3.671202109840593*^9}, {
   3.6712045487869253`*^9, 3.6712045495269265`*^9}, {3.6712184106833735`*^9, 
   3.6712185236905775`*^9}, {3.6712185682886763`*^9, 3.671218584655706*^9}, {
   3.6712186856558948`*^9, 3.671218687180897*^9}, {3.6712807515817823`*^9, 
   3.671280794555865*^9}, {3.671280827659919*^9, 3.671280948018176*^9}, {
   3.671280991352237*^9, 3.671281002875261*^9}, {3.6715379444405923`*^9, 
   3.6715379523706036`*^9}, {3.6719364173045225`*^9, 3.671936423482876*^9}, {
   3.671937002763009*^9, 3.67193709789145*^9}, {3.6719371287412143`*^9, 
   3.6719371484863434`*^9}, {3.6719380170480223`*^9, 
   3.6719380497788944`*^9}, {3.671938116496711*^9, 3.6719381197778983`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"initialize", "[", "\"\<11 Solar Masses.txt\>\"", "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "enter", " ", "a", " ", "file", " ", "name", " ", "and", " ", "execute", 
    " ", "the", " ", "function"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.671938059853471*^9, 3.6719380842748675`*^9}, {
  3.67193812662329*^9, 3.671938187483771*^9}, {3.671938373400405*^9, 
  3.6719383761075597`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"connect", "[", 
    RowBox[{"lst_", ",", "ist_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "This", " ", "function", " ", "will", " ", "take", " ", "two", " ", 
      "lists", " ", "and", " ", "return", " ", "a", " ", "list", " ", "of", 
      " ", 
      RowBox[{"coordinates", ".", " ", "This"}], " ", "is", " ", "important", 
      " ", "because", " ", "it", " ", "allows", " ", "us", " ", "to", " ", 
      "pair", " ", "up", " ", "different", " ", "sets", " ", "of", " ", 
      "data", " ", 
      RowBox[{"(", 
       RowBox[{
       "generally", " ", "Age", " ", "and", " ", "some", " ", "other", " ", 
        "quantity"}], ")"}], " ", "and", " ", "use", " ", "the", " ", "list", 
      " ", "of", " ", "coordinates", " ", "in", " ", "our", " ", 
      RowBox[{"interpolations", ".", " ", "That"}], " ", "is", " ", 
      "important", " ", "because", " ", "in", " ", "our", " ", "data"}], ",", 
     " ", 
     RowBox[{
     "age", " ", "varies", " ", "nonlinearly", " ", "with", " ", "step"}], 
     ",", " ", 
     RowBox[{
     "so", " ", "if", " ", "we", " ", "just", " ", "tried", " ", "to", " ", 
      "interpolate", " ", "single", " ", "sets", " ", "of", " ", "data", " ", 
      "by", " ", "themselves", " ", "we", " ", "would", " ", "get", " ", 
      "functions", " ", "that", " ", "were", " ", "wildly", " ", "inaccurate",
       " ", "in", " ", "terms", " ", "of", " ", "time"}], ",", " ", 
     RowBox[{
     "which", " ", "conflicts", " ", "with", " ", "the", " ", "goals", " ", 
      "of", " ", "our", " ", 
      RowBox[{"project", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Return", "[", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"Riffle", "[", 
       RowBox[{"lst", ",", "ist"}], "]"}], ",", "2"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6701180777711744`*^9, 3.670118079284374*^9}, {
   3.6701181692339745`*^9, 3.6701182365635743`*^9}, {3.6701182989167747`*^9, 
   3.670118315671296*^9}, {3.6701183707247543`*^9, 3.6701184691158466`*^9}, {
   3.670118503873315*^9, 3.67011859720991*^9}, {3.670118823161914*^9, 
   3.670118959288067*^9}, 3.670119017569667*^9, {3.6701190619360666`*^9, 
   3.670119100967267*^9}, {3.6701194712913933`*^9, 3.6701195023845854`*^9}, {
   3.671026452611379*^9, 3.671026892218009*^9}, {3.671027124721356*^9, 
   3.6710272184942055`*^9}, {3.671027250384324*^9, 3.6710272514368286`*^9}, {
   3.671027390749843*^9, 3.671027604790638*^9}, 3.6712021150656004`*^9, 
   3.671204468696802*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"connect", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "2", ",", "324.4", ",", "43", ",", "4"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "232.4", ",", "2", ",", "84.2", ",", "90"}], 
     "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"put", " ", "in", " ", "two", " ", "lists", " ", 
     RowBox[{"(", 
      RowBox[{"of", " ", "equal", " ", "length"}], ")"}], " ", "to", " ", 
     "demo", " ", "our", " ", "connect", " ", 
     RowBox[{"function", ".", " ", "It"}], " ", "was", " ", "originally", " ",
      "made", " ", "to", " ", "work", " ", "for", " ", "any", " ", 
     "arbitrary", " ", "number", " ", "of", " ", "equally", " ", "long", " ", 
     "lists"}], ",", " ", 
    RowBox[{
    "but", " ", "that", " ", "was", " ", "not", " ", "useful", " ", "for", 
     " ", "us", " ", "because", " ", "our", " ", "correlations", " ", "were", 
     " ", "only", " ", "between", " ", "two", " ", "datasets", " ", "at", " ",
      "a", " ", "time"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6719378173015976`*^9, 3.6719379592487164`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["SphereRange:",
 FontFamily->"Times New Roman",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "Section",
 CellChangeTimes->{{3.6695110152244797`*^9, 3.6695110219661794`*^9}, {
   3.6705114859285517`*^9, 3.67051149050111*^9}, {3.671020930167638*^9, 
   3.6710209511776676`*^9}, {3.671028263723009*^9, 3.6710282863655415`*^9}, 
   3.671448376723837*^9, {3.671468997538391*^9, 3.671469002782691*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sphereRange", "[", "radius_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "returns", " ", "a", " ", "value", " ", 
     "to", " ", "be", " ", "used", " ", "in", " ", "the", " ", "PlotRange", 
     " ", "of", " ", "the", " ", "sphere", " ", 
     RowBox[{"graphic", ".", " ", "It"}], " ", "switches", " ", "scales", " ",
      "whenever", " ", "the", " ", "radius", " ", "of", " ", "the", " ", 
     "star", " ", "exceeds", " ", "that", " ", "of", " ", "the", " ", 
     "current", " ", 
     RowBox[{"scale", ".", " ", "On"}], " ", "one", " ", "hand"}], ",", " ", 
    RowBox[{
    "this", " ", "system", " ", "is", " ", "inelegant", " ", "and", " ", 
     "simplistic"}], ",", " ", 
    RowBox[{"but", " ", "on", " ", "the", " ", "other"}], ",", " ", 
    RowBox[{
    "it", " ", "does", "  ", "the", " ", "least", " ", "modification", " ", 
     "to", " ", "the", " ", "star", " ", "visual", " ", "while", " ", "still",
      " ", "showing", " ", "the", " ", "entire", " ", 
     RowBox[{"star", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"radius", "<", 
     FractionBox["maxRadius", "1000."]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", 
     FractionBox["maxRadius", "1000."], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"radius", "<", 
     FractionBox["maxRadius", "100."]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", 
     FractionBox["maxRadius", "100."], "]"}], ",", "\[IndentingNewLine]", 
    "True", ",", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", "maxRadius", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.671028291678049*^9, 3.671028412995721*^9}, {
   3.671028573125948*^9, 3.671028580465958*^9}, {3.6710286953636208`*^9, 
   3.6710287148961477`*^9}, {3.671028762183715*^9, 3.6710287647237186`*^9}, {
   3.67102887896638*^9, 3.6710288914088974`*^9}, {3.6710290910641804`*^9, 
   3.6710290930041833`*^9}, {3.6710291772643023`*^9, 
   3.6710292422493944`*^9}, {3.671029289379461*^9, 3.67102948687224*^9}, {
   3.671029523142291*^9, 3.6710295301473017`*^9}, {3.6710295624998474`*^9, 
   3.671029799870184*^9}, {3.671029911110341*^9, 3.671029911530342*^9}, {
   3.671029985172946*^9, 3.6710301531831837`*^9}, {3.67103474598927*^9, 
   3.6710347471967716`*^9}, {3.6712021229356127`*^9, 
   3.6712021245081153`*^9}, {3.6712046732598953`*^9, 3.671204685624915*^9}, {
   3.6712099958986607`*^9, 3.671209997835664*^9}, 3.671210043973754*^9, {
   3.671210087008828*^9, 3.671210105259859*^9}, 3.671210158356947*^9, {
   3.6714484197482977`*^9, 3.671448431175951*^9}, {3.6714924730633545`*^9, 
   3.671492570949953*^9}, {3.6714968614603567`*^9, 3.6714968814615006`*^9}, {
   3.6714972152955947`*^9, 3.671497224621128*^9}, {3.671906386195101*^9, 
   3.671906404987176*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Core Function:",
 FontFamily->"Times New Roman",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "Section",
 CellChangeTimes->{{3.6695110152244797`*^9, 3.6695110219661794`*^9}, {
  3.6705114859285517`*^9, 3.67051149050111*^9}, {3.671020930167638*^9, 
  3.6710209511776676`*^9}, {3.671028263723009*^9, 3.6710282863655415`*^9}, {
  3.6711172343365307`*^9, 3.6711172413385425`*^9}, {3.6711348530202775`*^9, 
  3.671134858065277*^9}, {3.6713789391026583`*^9, 3.671378949502673*^9}, {
  3.671380123701312*^9, 3.6713801420313377`*^9}, {3.671380941442465*^9, 
  3.671380949512476*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"core", "[", "age_", "]"}], ":=", " ", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "This", " ", "function", " ", "returns", " ", "the", " ", "set", " ", 
     "of", " ", "graphics", " ", "primitives", " ", "and", " ", "directives", 
     " ", "that", " ", "make", " ", "up", " ", "the", " ", "Internal", " ", 
     RowBox[{"Diagram", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"he", "=", 
        RowBox[{
         RowBox[{"rHeFunction", "[", "age", "]"}], "+", 
         RowBox[{"rCFunction", "[", "age", "]"}], "+", 
         RowBox[{"rOFunction", "[", "age", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"c", "=", 
        RowBox[{
         RowBox[{"rCFunction", "[", "age", "]"}], "+", 
         RowBox[{"rOFunction", "[", "age", "]"}]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"LightBlue", ",", 
          RowBox[{"Tooltip", "[", 
           RowBox[{
            RowBox[{"Disk", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.", ",", "0."}], "}"}], ",", 
              RowBox[{"rHeFunction", "[", "age", "]"}]}], "]"}], ",", 
            "\"\<Helium\>\""}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Yellow", ",", 
          RowBox[{"Tooltip", "[", 
           RowBox[{
            RowBox[{"Disk", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.", ",", "0."}], "}"}], ",", 
              RowBox[{"rCFunction", "[", "age", "]"}]}], "]"}], ",", 
            "\"\<Carbon\>\""}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Pink", ",", 
          RowBox[{"Tooltip", "[", 
           RowBox[{
            RowBox[{"Disk", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.", ",", "0."}], "}"}], ",", 
              RowBox[{"rOFunction", "[", "age", "]"}]}], "]"}], ",", 
            "\"\<Oxygen\>\""}], "]"}]}], "}"}], ",", 
        RowBox[{"Axes", "\[Rule]", "True"}]}], "\[IndentingNewLine]", "}"}], 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6711172514825583`*^9, 3.671117295805631*^9}, {
   3.671132608996628*^9, 3.671132716833515*^9}, 3.67113316987679*^9, {
   3.6711337610042505`*^9, 3.6711338118587456`*^9}, {3.671134413917674*^9, 
   3.671134426769163*^9}, {3.6711349051232777`*^9, 3.6711349083422775`*^9}, {
   3.671141213208379*^9, 3.6711412406183786`*^9}, {3.6712021432131433`*^9, 
   3.6712021493581524`*^9}, {3.671204567666954*^9, 3.6712045684244556`*^9}, {
   3.6712102714912615`*^9, 3.671210294947302*^9}, {3.67121162177501*^9, 
   3.6712117233322024`*^9}, {3.6712117862803135`*^9, 3.671211787842316*^9}, {
   3.6713084542889376`*^9, 3.6713085200215297`*^9}, 3.67130863400919*^9, 
   3.671308717729308*^9, {3.671308839414479*^9, 3.671308920934593*^9}, {
   3.6713090575247855`*^9, 3.6713090809048185`*^9}, {3.6713102320109963`*^9, 
   3.671310234803521*^9}, {3.671311586710104*^9, 3.6713115893551273`*^9}, 
   3.671377799221052*^9, {3.671378019837369*^9, 3.6713780244073753`*^9}, {
   3.671378081227455*^9, 3.6713781161675034`*^9}, {3.6713784784100122`*^9, 
   3.6713784986500406`*^9}, 3.6713789335326505`*^9, {3.671382665734844*^9, 
   3.671382673864856*^9}, {3.6713827617949843`*^9, 3.671382772705*^9}, {
   3.6714071161678047`*^9, 3.6714071324003277`*^9}, {3.671476293165882*^9, 
   3.6714762986961985`*^9}, {3.6715397379721365`*^9, 
   3.6715397398421392`*^9}, {3.671904620755123*^9, 3.671904631526739*^9}, {
   3.671922962572956*^9, 3.6719229662541666`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["ColorFunction:",
 FontFamily->"Times New Roman",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "Section",
 CellChangeTimes->{{3.6695110152244797`*^9, 3.6695110219661794`*^9}, {
  3.6705114859285517`*^9, 3.67051149050111*^9}, {3.671020930167638*^9, 
  3.6710209511776676`*^9}, {3.671028263723009*^9, 3.6710282863655415`*^9}, {
  3.6711172343365307`*^9, 3.6711172413385425`*^9}, {3.6711348530202775`*^9, 
  3.6711348745522776`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"colorFunction", "[", 
   RowBox[{"min_", ",", "max_", ",", "r_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "returns", " ", "a", " ", "value", " ", 
    "for", " ", "the", " ", "hue", " ", "of", " ", "the", " ", "sphere", " ", 
    RowBox[{"graphic", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"adjust", "=", "0."}], "}"}], ",", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "adjust", " ", "is", " ", "supposed", " ", "to", " ", "be", " ", "the", 
       " ", "proportional", " ", "equivalent", " ", "of", " ", "radius", " ", 
       "along", " ", "the", " ", "scale", " ", "of", " ", "1"}], "-", 
      RowBox[{
      "max", " ", "but", " ", "instead", " ", "on", " ", "the", " ", "scale", 
       " ", "of", " ", "0"}], "-", "0.18"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Return", "[", 
      RowBox[{"0.175", "-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r", "-", "min"}], ")"}], "*", "0.175"}], 
        RowBox[{"max", "-", "min"}]]}], "]"}], ";"}]}], 
   RowBox[{"(*", 
    RowBox[{
    "0.175", " ", "is", " ", "the", " ", "highest", " ", "Hue", " ", "number",
      " ", "that", " ", "is", " ", "desirable", " ", "for", " ", "our", " ", 
     "color", " ", "range"}], "*)"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.671129651903758*^9, 3.6711297269387584`*^9}, {
   3.6711297741387587`*^9, 3.6711297832687583`*^9}, {3.6711298566612587`*^9, 
   3.6711301712657585`*^9}, {3.6711304138702583`*^9, 
   3.6711304210402584`*^9}, {3.6711348949242773`*^9, 3.671134964999277*^9}, 
   3.6712021554906616`*^9, {3.67120457172196*^9, 3.6712045723619614`*^9}, {
   3.6712106841604576`*^9, 3.671210711413531*^9}, {3.6714193324032836`*^9, 
   3.6714193341832857`*^9}, {3.6714194668034725`*^9, 3.67141952900356*^9}, {
   3.671419570373618*^9, 3.6714195897436457`*^9}, {3.6714196258336964`*^9, 
   3.6714196281636996`*^9}, {3.6714196834787774`*^9, 3.671419734533849*^9}, {
   3.67141977784391*^9, 3.6714197848639197`*^9}, {3.6714773677793465`*^9, 
   3.671477395959958*^9}, {3.6714775715510015`*^9, 3.671477580006485*^9}, {
   3.671477611761301*^9, 3.6714776598800535`*^9}, {3.671478211617611*^9, 
   3.6714782218781977`*^9}, {3.6714783971542234`*^9, 
   3.6714784389076114`*^9}, {3.671478475585709*^9, 3.671478476171743*^9}, {
   3.671478669858821*^9, 3.6714786806714396`*^9}, {3.6714787513374815`*^9, 
   3.671478783742335*^9}, {3.6714788465209255`*^9, 3.671478860605731*^9}, {
   3.6714790666105137`*^9, 3.6714790668295264`*^9}, {3.6714800812885504`*^9, 
   3.671480145381216*^9}, {3.671480202869504*^9, 3.671480239808617*^9}, {
   3.6714806123249235`*^9, 3.6714806964197335`*^9}, {3.671491304258503*^9, 
   3.671491312914998*^9}, {3.6714920792828317`*^9, 3.67149207977986*^9}, {
   3.671492241722123*^9, 3.671492248013482*^9}, {3.6714926432280874`*^9, 
   3.671492643436099*^9}, {3.6714928002810707`*^9, 3.6714928140728593`*^9}, {
   3.6714934943767705`*^9, 3.6714935710401554`*^9}, {3.671493643433296*^9, 
   3.671493647207512*^9}, {3.6714950671817293`*^9, 3.6714951019567184`*^9}, {
   3.6714952581396523`*^9, 3.6714952585326743`*^9}, {3.6714953081865144`*^9, 
   3.6714953083825254`*^9}, {3.6714953840338526`*^9, 
   3.6714953880700836`*^9}, {3.671495618495263*^9, 3.6714956276967897`*^9}, {
   3.671496015769986*^9, 3.6714960164290237`*^9}, {3.6714960550992355`*^9, 
   3.6714961152976785`*^9}, {3.6714962118832026`*^9, 
   3.6714962137163076`*^9}, {3.6714963360153027`*^9, 3.671496367540106*^9}, {
   3.6718375712776966`*^9, 3.671837586478566*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Exterior:",
 FontFamily->"Times New Roman",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "Section",
 CellChangeTimes->{{3.6695110152244797`*^9, 3.6695110219661794`*^9}, {
   3.6705114859285517`*^9, 3.67051149050111*^9}, {3.671020930167638*^9, 
   3.6710209511776676`*^9}, {3.671028263723009*^9, 3.6710282863655415`*^9}, 
   3.671448376723837*^9, {3.671468997538391*^9, 3.671469084338356*^9}, {
   3.671469252024947*^9, 3.6714692686188965`*^9}, {3.6718334838819113`*^9, 
   3.6718335131865873`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"exterior", "[", "age_", "]"}], ":=", 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "This", " ", "function", " ", "determines", " ", "the", " ", "output", 
      " ", "of", " ", "the", " ", "external", " ", 
      RowBox[{"visual", ".", " ", "Its"}], " ", "main", " ", "purpose", " ", 
      "is", " ", "to", " ", "detect", " ", "special", " ", "cases", " ", 
      "for", " ", "certain", " ", "mass", " ", "and", " ", "time", " ", 
      "conditions", " ", "and", " ", "return", " ", "a", " ", "modified", " ",
       "image", " ", "to", " ", "represent", " ", "something", " ", 
      "happening", " ", "that", " ", "wouldnt", " ", "be", " ", "shown", " ", 
      "by", " ", "a", " ", "simple", " ", "sphere", " ", "graphic", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "such", " ", "as", " ", "a", " ", "star", " ", "collapsing", " ", 
         "into", " ", "a", " ", "white", " ", "dwarf", " ", "or", " ", "a", 
         " ", "planetary", " ", "nebula"}], ")"}], ".", " ", "Because"}], " ",
       "it", " ", "determines", " ", "singular"}], ",", " ", 
     RowBox[{"special", " ", "cases"}], ",", " ", 
     RowBox[{
     "actual", " ", "values", " ", "for", " ", "certain", " ", "variables", 
      " ", "have", " ", "been", " ", "used", " ", "instead", " ", "of", " ", 
      "the", " ", "variables", " ", "themselves", " ", "in", " ", "order", 
      " ", "to", " ", "reduce", " ", "the", " ", "workload", " ", "on", " ", 
      "the", " ", 
      RowBox[{"Kernel", "."}]}]}], "*)"}],
   FontWeight->"Plain"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Plain"], 
  RowBox[{
   StyleBox["Block",
    FontWeight->"Bold"], 
   StyleBox["[",
    FontWeight->"Bold"], 
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{"sMass", "=", 
       RowBox[{"massFunction", "[", "1", "]"}]}], "}"}],
     FontWeight->"Bold"], 
    StyleBox[",",
     FontWeight->"Bold"], 
    StyleBox["\[IndentingNewLine]",
     FontWeight->"Bold"], 
    RowBox[{
     StyleBox["Which",
      FontWeight->"Bold"], 
     StyleBox["[",
      FontWeight->"Bold"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Bold"], 
     RowBox[{
      StyleBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"sMass", "\[Equal]", "1"}], "&&", 
         RowBox[{"age", ">", "1.2301379784972`*^10"}]}], ")"}],
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Bold"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Bold"], 
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Hue", "[", 
            RowBox[{"colorFunction", "[", 
             RowBox[{"minRadius", ",", "maxRadius", ",", 
              RowBox[{"radiusFunction", "[", "age", "]"}]}], "]"}], "]"}], 
           ",", 
           RowBox[{"Sphere", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.", ",", "0.", ",", "0."}], "}"}], " ", ",", 
             RowBox[{"radiusFunction", "[", "age", "]"}]}], "]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Yellow", ",", "Thick", ",", 
           RowBox[{"splineCircle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.", ",", "0.", ",", "0."}], "}"}], ",", 
             RowBox[{"255.36003168258475`", "*", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"age", "-", "1.2301379784972`*^10"}], 
                 RowBox[{"1.23015028`*^10", "-", "1.2301379784972`*^10"}]]}], 
               ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"0.", ",", "6.283185307179586`"}], "}"}]}], "]"}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Green", ",", "Thick", ",", 
           RowBox[{"splineCircle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.", ",", "0.", ",", "0."}], "}"}], ",", 
             RowBox[{"173.98440203892892`", "*", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"age", "-", "1.23014904984972`*^10"}], 
                 RowBox[{"1.23015028`*^10", "-", "1.23014904984972`*^10"}]]}],
                ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"0.", ",", "6.283185307179586`"}], "}"}]}], "]"}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Purple", ",", "Thick", ",", 
           RowBox[{"splineCircle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.", ",", "0.", ",", "0."}], "}"}], ",", 
             RowBox[{"114.38026923196936`", "*", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"age", "-", "1.230150156984972`*^10"}], 
                 RowBox[{
                 "1.23015028`*^10", "-", "1.230150156984972`*^10"}]]}], 
               ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"0.", ",", "6.283185307179586`"}], "}"}]}], "]"}]}], 
          "}"}]}], "}"}],
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Bold"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Bold"], 
      StyleBox[
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Case", " ", "for", " ", "a", " ", "single"}], "-", 
         RowBox[{
          RowBox[{"M", "\[CircleDot]", " ", "star"}], " ", "on", " ", "the", 
          " ", "horizontal", " ", "branch"}], " ", "-", " ", 
         RowBox[{
         "shows", " ", "planetary", " ", "nebula", " ", "ejection"}]}], "*)"}],
       FontWeight->"Bold"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Bold"], 
      RowBox[{
       StyleBox["(",
        FontWeight->"Plain"], 
       StyleBox[
        RowBox[{
         RowBox[{
          StyleBox["sMass",
           FontWeight->"Plain"], 
          StyleBox["\[Equal]",
           FontWeight->"Plain"], "0.5"}], "&&", 
         RowBox[{"age", ">", "1.375874649`*^11"}]}],
        FontWeight->"Bold"], 
       StyleBox[")",
        FontWeight->"Bold"]}], 
      StyleBox[",",
       FontWeight->"Bold"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Bold"], 
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "[", 
          RowBox[{
           RowBox[{"Hue", "[", 
            RowBox[{"colorFunction", "[", 
             RowBox[{"minRadius", ",", "maxRadius", ",", 
              RowBox[{"radiusFunction", "[", "age", "]"}]}], "]"}], "]"}], 
           ",", 
           FractionBox[
            RowBox[{"age", "-", "1.375874649`*^11"}], 
            RowBox[{"1.52874961`*^11", "-", "1.375874649`*^11"}]]}], "]"}], 
         ",", 
         RowBox[{"Sphere", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.", ",", "0.", ",", "0."}], "}"}], " ", ",", 
           RowBox[{"radiusFunction", "[", "age", "]"}]}], "]"}]}], "}"}],
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Bold"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Bold"], 
      StyleBox[
       RowBox[{
        StyleBox["(",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{
          StyleBox["sMass",
           FontWeight->"Plain"], 
          StyleBox["\[Equal]",
           FontWeight->"Plain"], "0.1"}], "&&", 
         RowBox[{"age", ">", "4.6085752152`*^12"}]}], ")"}],
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Bold"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Bold"], 
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "[", 
          RowBox[{
           RowBox[{"Hue", "[", 
            RowBox[{"colorFunction", "[", 
             RowBox[{"minRadius", ",", "maxRadius", ",", 
              RowBox[{"radiusFunction", "[", "age", "]"}]}], "]"}], "]"}], 
           ",", 
           FractionBox[
            RowBox[{"age", "-", "4.6085752152`*^12"}], 
            RowBox[{"4.65512648`*^12", "-", "4.6085752152`*^12"}]]}], "]"}], 
         ",", 
         RowBox[{"Sphere", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.", ",", "0.", ",", "0."}], "}"}], " ", ",", 
           RowBox[{"radiusFunction", "[", "age", "]"}]}], "]"}]}], "}"}],
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Bold"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Bold"], 
      StyleBox[
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Both", " ", "of", " ", "the", " ", "above", " ", "are", " ", 
          "cases", " ", "for", " ", "sub"}], "-", 
         RowBox[{
          RowBox[{"M", "\[CircleDot]", " ", "stars"}], " ", "at", " ", "the", 
          " ", "ends", " ", "of", " ", "their", " ", 
          RowBox[{"lives", ".", " ", "The"}], " ", "spere", " ", "will", " ", 
          "show", " ", "a", " ", "lightened", " ", "color", " ", "as", " ", 
          "the", " ", "star", " ", "collapses", " ", "into", " ", "a", " ", 
          "white", " ", 
          RowBox[{"dwarf", "."}]}]}], "*)"}],
       FontWeight->"Bold"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Bold"], 
      StyleBox["True",
       FontWeight->"Bold"], 
      StyleBox[",",
       FontWeight->"Bold"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Bold"], 
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Hue", "[", 
          RowBox[{"colorFunction", "[", 
           RowBox[{"minRadius", ",", "maxRadius", ",", 
            RowBox[{"radiusFunction", "[", "age", "]"}]}], "]"}], "]"}], ",", 
         RowBox[{"Sphere", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.", ",", "0.", ",", "0."}], "}"}], " ", ",", 
           RowBox[{"radiusFunction", "[", "age", "]"}]}], "]"}]}], "}"}],
       FontWeight->"Bold"]}], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Bold"], 
     StyleBox[
      RowBox[{"(*", 
       RowBox[{"General", " ", 
        RowBox[{"case", "."}]}], "*)"}],
      FontWeight->"Bold"], 
     StyleBox["\[IndentingNewLine]",
      FontWeight->"Bold"], 
     StyleBox["]",
      FontWeight->"Bold"]}]}], 
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Bold"], 
   StyleBox["]",
    FontWeight->"Bold"]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.671469271324051*^9, 3.671469297912572*^9}, {
   3.6714693452722807`*^9, 3.6714693751609898`*^9}, {3.671469413636191*^9, 
   3.6714694142252245`*^9}, {3.6714807339748816`*^9, 
   3.6714807626625223`*^9}, {3.6714809213636*^9, 3.671480923714734*^9}, {
   3.6714914985156136`*^9, 3.6714915210699034`*^9}, {3.671492824938481*^9, 
   3.671492836147122*^9}, {3.6714934094909153`*^9, 3.6714934164693146`*^9}, {
   3.671494993842535*^9, 3.671494997115722*^9}, {3.671496217796541*^9, 
   3.67149622652404*^9}, 3.6714962574508095`*^9, {3.6714963765416207`*^9, 
   3.671496379943815*^9}, {3.6718335246052403`*^9, 3.671833528516464*^9}, {
   3.671834002761589*^9, 3.671834014153241*^9}, {3.6718342905280485`*^9, 
   3.671834328718233*^9}, {3.6718347651981983`*^9, 3.6718347652031984`*^9}, {
   3.6718348705922265`*^9, 3.6718348721533155`*^9}, {3.6718349453375015`*^9, 
   3.6718349846017475`*^9}, {3.671835039845907*^9, 3.6718350466722975`*^9}, {
   3.671835282645795*^9, 3.6718353128795238`*^9}, {3.671835381467447*^9, 
   3.671835381777465*^9}, 3.671835482003197*^9, 3.6718355298589344`*^9, {
   3.671835819888523*^9, 3.671835822893695*^9}, {3.6718358707204304`*^9, 
   3.671835940012394*^9}, {3.671835991395333*^9, 3.6718360200469713`*^9}, {
   3.6718361267120724`*^9, 3.67183613297243*^9}, {3.6718361834173155`*^9, 
   3.671836201078326*^9}, {3.6718363236203346`*^9, 3.6718363385301876`*^9}, {
   3.671836447760435*^9, 3.671836467372557*^9}, {3.6718366786746426`*^9, 
   3.6718367250802975`*^9}, {3.6718367609283476`*^9, 
   3.6718368231519065`*^9}, {3.671836865540331*^9, 3.671836900571335*^9}, {
   3.6718373468768616`*^9, 3.671837354095275*^9}, {3.67183740559022*^9, 
   3.671837407562333*^9}, {3.671837608605832*^9, 3.6718376804719424`*^9}, {
   3.6718377293737392`*^9, 3.671837747929801*^9}, 3.671837852394776*^9, {
   3.67183800387844*^9, 3.671838025433673*^9}, {3.671838178901451*^9, 
   3.6718381994296255`*^9}, {3.6718382358727093`*^9, 
   3.6718382366797557`*^9}, {3.6718455254825716`*^9, 
   3.6718455516726084`*^9}, {3.6718455896526623`*^9, 
   3.6718456036026816`*^9}, {3.671891447109062*^9, 3.671891460234813*^9}, {
   3.6718915737703075`*^9, 3.671891739574791*^9}, 3.671891777191942*^9, {
   3.6718918535253077`*^9, 3.6718919270105114`*^9}, {3.671891977897422*^9, 
   3.6718920043099327`*^9}, 3.6718920516226387`*^9, 3.6718922399134083`*^9, {
   3.6718922913043475`*^9, 3.671892338003019*^9}, {3.6718923759711905`*^9, 
   3.671892751232654*^9}, {3.6718991486431365`*^9, 3.671899278707576*^9}, 
   3.6718993177478085`*^9, {3.6718997264611855`*^9, 3.6718998013854713`*^9}, {
   3.6719001028807154`*^9, 3.671900120319713*^9}, {3.6719001595319557`*^9, 
   3.6719001935229*^9}, {3.6719002332421722`*^9, 3.671900293479617*^9}, {
   3.6719004405560293`*^9, 3.671900459015085*^9}, 3.6719005722815638`*^9, {
   3.6719009098308706`*^9, 3.6719009318731313`*^9}, 3.671900993816674*^9, {
   3.6719012415798454`*^9, 3.6719012651531935`*^9}, {3.6719018854966755`*^9, 
   3.6719018887278605`*^9}, {3.671904742243072*^9, 3.6719047860125756`*^9}, {
   3.671904820941573*^9, 3.6719048266789017`*^9}, 3.6719053751072693`*^9, {
   3.671906546052244*^9, 3.67190654826237*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Third Party Code (SplineCircle):",
 FontFamily->"Times New Roman",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "Section",
 CellChangeTimes->{{3.6695110152244797`*^9, 3.6695110219661794`*^9}, {
   3.6705114859285517`*^9, 3.67051149050111*^9}, {3.671020930167638*^9, 
   3.6710209511776676`*^9}, {3.671028263723009*^9, 3.6710282863655415`*^9}, 
   3.671448376723837*^9, {3.671468997538391*^9, 3.671469084338356*^9}, {
   3.671469252024947*^9, 3.6714692686188965`*^9}, {3.6718334838819113`*^9, 
   3.6718335131865873`*^9}, {3.67189940711092*^9, 3.6718994300442314`*^9}}],

Cell[TextData[{
 "This function is a third party code and can be found ",
 ButtonBox["here",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathematica.stackexchange.com/questions/10957/an-efficient-\
circular-arc-primitive-for-graphics3d"], None},
  ButtonNote->
   "http://mathematica.stackexchange.com/questions/10957/an-efficient-\
circular-arc-primitive-for-graphics3d"],
 ". It returns a circular NURBS spline graphic which can be used in \
Graphics3D in leu of \[OpenCurlyDoubleQuote]Circle\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]Disk\[CloseCurlyDoubleQuote]. In our code, it\
\[CloseCurlyQuote]s used for the planetary nebula ejections of a single M\
\[CircleDot] star and is only found in the helper function \
\[OpenCurlyDoubleQuote]exterior\[CloseCurlyDoubleQuote]. \
It\[CloseCurlyQuote]s also valuble to note that the original code has been \
modified for optimization in various ways."
}], "Text",
 CellChangeTimes->{{3.6718994399928007`*^9, 3.6718995593516273`*^9}, {
  3.6718995910424404`*^9, 3.671899690372122*^9}, {3.6719057041790915`*^9, 
  3.6719057378670187`*^9}, {3.671905787426853*^9, 3.671905808298047*^9}, {
  3.671906071757116*^9, 3.671906147639456*^9}, {3.671906600653367*^9, 
  3.671906632450186*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"splineCircle", "[", 
   RowBox[{"m_List", ",", "r_", ",", 
    RowBox[{"angles_List:", " ", 
     RowBox[{"{", 
      RowBox[{"0.", ",", "6.283185307179586`"}], "}"}]}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "seg", ",", "\[Phi]", ",", "start", ",", "end", ",", "pts", ",", "w", 
       ",", "k"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"start", ",", "end"}], "}"}], "=", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"angles", "//", "N"}], ",", "6.283185307179586`"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"end", "\[LessEqual]", "start"}], ",", 
        RowBox[{"end", "+=", "6.283185307179586`"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"seg", "=", 
       RowBox[{"Quotient", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"end", "-", "start"}], "//", "N"}], ",", 
         "1.5707963267948966`"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Phi]", "=", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"end", "-", "start"}], "//", "N"}], ",", 
         "1.5707963267948966`"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"seg", "\[Equal]", "4."}], ",", 
        RowBox[{
         RowBox[{"seg", "=", "3."}], ";", 
         RowBox[{"\[Phi]", "=", "1.5707963267948966`"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pts", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"r", " ", 
          RowBox[{
           RowBox[{"RotationMatrix", "[", "start", "]"}], ".", "#"}]}], "&"}],
         "/@", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1.", ",", "0."}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1.", ",", "1."}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "1."}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1."}], ",", "1."}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1."}], ",", "0."}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1."}], ",", 
                RowBox[{"-", "1."}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.", ",", 
                RowBox[{"-", "1."}]}], "}"}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"2.", "*", " ", "seg"}], "+", "1."}]}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"RotationMatrix", "[", 
              RowBox[{"seg", "*", "1.5707963267948966`"}], "]"}], ".", "#"}], 
            "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1.", ",", 
               RowBox[{"Tan", "[", 
                FractionBox["\[Phi]", "2."], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]", "]"}], ",", 
               RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "}"}]}], "}"}]}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "m", "]"}], "\[Equal]", "2"}], ",", 
        RowBox[{"pts", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"m", "+", "#"}], "&"}], "/@", "pts"}]}], ",", 
        RowBox[{"pts", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"m", "+", "#"}], "&"}], "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", "pts", "]"}], ",", 
             RowBox[{"ConstantArray", "[", 
              RowBox[{"0", ",", 
               RowBox[{"Length", "[", "pts", "]"}]}], "]"}]}], "]"}], 
           "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"w", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1.", ",", 
             FractionBox["1.", 
              SqrtBox["2."]], ",", "1.", ",", 
             FractionBox["1.", 
              SqrtBox["2."]], ",", "1.", ",", 
             FractionBox["1.", 
              SqrtBox["2."]], ",", "1."}], "}"}], ",", 
           RowBox[{
            RowBox[{"2.", "*", " ", "seg"}], "+", "1."}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            FractionBox["\[Phi]", "2."], "]"}], ",", "1."}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"k", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.", ",", "0.", ",", "0."}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Riffle", "[", 
            RowBox[{"#", ",", "#"}], "]"}], "&"}], "@", 
          RowBox[{"Range", "[", 
           RowBox[{"seg", "+", "1."}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"seg", "+", "1."}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"BSplineCurve", "[", 
       RowBox[{"pts", ",", 
        RowBox[{"SplineDegree", "\[Rule]", "2"}], ",", 
        RowBox[{"SplineKnots", "\[Rule]", "k"}], ",", 
        RowBox[{"SplineWeights", "\[Rule]", "w"}]}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "m", "]"}], "\[Equal]", "2."}], "||", 
    RowBox[{
     RowBox[{"Length", "[", "m", "]"}], "\[Equal]", "3."}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.671897832528859*^9, 3.671897832529859*^9}, {
  3.6719048414247446`*^9, 3.6719050110954494`*^9}, {3.6719050572370887`*^9, 
  3.6719051135083075`*^9}, {3.6719056298218384`*^9, 3.6719056504820204`*^9}, {
  3.6719060678088903`*^9, 3.671906068459927*^9}, {3.671906152710746*^9, 
  3.6719061568259816`*^9}, {3.67190623127724*^9, 3.6719063342291284`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["UI:",
 FontFamily->"Times New Roman",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "Section",
 CellChangeTimes->{{3.671927065799647*^9, 3.671927066679697*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Home Screen:",
 FontFamily->"Times New Roman",
 FontSize->16,
 FontColor->RGBColor[0., 0., 0.]]], "Subsection",
 CellChangeTimes->{{3.671927379407584*^9, 3.6719273909092417`*^9}, 
   3.671928521135887*^9}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Main Code:",
 FontFamily->"Times New Roman",
 FontSize->14,
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "Subsubsection",
 CellChangeTimes->{{3.671928560727152*^9, 3.6719285628292723`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"homeScreen", "[", "]"}], ":=", 
  RowBox[{"(*", 
   RowBox[{
   "the", " ", "demo", " ", "of", " ", "this", " ", "function", " ", "is", 
    " ", "at", " ", "the", " ", "top"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "produces", " ", "the", " ", "homescreen", 
    " ", "and", " ", "will", " ", "take", " ", "the", " ", "value", " ", 
    "inputed", " ", "by", " ", "the", " ", "button", " ", "pressed", " ", 
    "to", " ", "open", " ", "the", " ", "bounds", " ", "palette"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "choice", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"CreatePalette", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"TextCell", "[", 
           RowBox[{
           "\"\<Stellar Evolution Simulator\>\"", ",", "\"\<Title\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", "24"}]}], "]"}], ",", 
          RowBox[{"TextCell", "[", 
           RowBox[{
           "\"\<Please choose the desired starting mass of the star (in MSun)\
\>\"", ",", "\"\<Text\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}]}], "}"}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"ButtonBar", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.1", "\[RuleDelayed]", 
            RowBox[{"action", "[", 
             RowBox[{"0.1", ",", "choice"}], "]"}]}], ",", 
           RowBox[{"0.5", "\[RuleDelayed]", 
            RowBox[{"action", "[", 
             RowBox[{"0.5", ",", "choice"}], "]"}]}], ",", 
           RowBox[{"1", "\[RuleDelayed]", 
            RowBox[{"action", "[", 
             RowBox[{"1", ",", "choice"}], "]"}]}], ",", 
           RowBox[{"3", "\[RuleDelayed]", 
            RowBox[{"action", "[", 
             RowBox[{"3", ",", "choice"}], "]"}]}], ",", 
           RowBox[{"5", "\[RuleDelayed]", 
            RowBox[{"action", "[", 
             RowBox[{"5", ",", "choice"}], "]"}]}], ",", 
           RowBox[{"7", "\[RuleDelayed]", 
            RowBox[{"action", "[", 
             RowBox[{"7", ",", "choice"}], "]"}]}], ",", 
           RowBox[{"9", "\[RuleDelayed]", 
            RowBox[{"action", "[", 
             RowBox[{"9", ",", "choice"}], "]"}]}], ",", 
           RowBox[{"11", "\[RuleDelayed]", 
            RowBox[{"action", "[", 
             RowBox[{"11", ",", "choice"}], "]"}]}], ",", 
           RowBox[{"13", "\[RuleDelayed]", 
            RowBox[{"action", "[", 
             RowBox[{"13", ",", "choice"}], "]"}]}], ",", 
           RowBox[{"15", "\[RuleDelayed]", 
            RowBox[{"action", "[", 
             RowBox[{"15", ",", "choice"}], "]"}]}], ",", 
           RowBox[{"20", "\[RuleDelayed]", 
            RowBox[{"action", "[", 
             RowBox[{"20", ",", "choice"}], "]"}]}], ",", 
           RowBox[{"30", "\[RuleDelayed]", 
            RowBox[{"action", "[", 
             RowBox[{"30", ",", "choice"}], "]"}]}], ",", 
           RowBox[{"40", "\[RuleDelayed]", 
            RowBox[{"action", "[", 
             RowBox[{"40", ",", "choice"}], "]"}]}], ",", 
           RowBox[{"50", "\[RuleDelayed]", 
            RowBox[{"action", "[", 
             RowBox[{"50", ",", "choice"}], "]"}]}], ",", 
           RowBox[{"75", "\[RuleDelayed]", 
            RowBox[{"action", "[", 
             RowBox[{"75", ",", "choice"}], "]"}]}], ",", 
           RowBox[{"100", "\[RuleDelayed]", 
            RowBox[{"action", "[", 
             RowBox[{"100", ",", "choice"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"50", ",", "50"}], "}"}]}]}], "]"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6719273983966703`*^9, 3.671927484882617*^9}, {
  3.6719276726323557`*^9, 3.6719277010059786`*^9}, {3.6719279170073333`*^9, 
  3.6719279538084383`*^9}, {3.6719280116007433`*^9, 3.6719281655985518`*^9}, {
  3.6719282196486435`*^9, 3.671928222158787*^9}, {3.6719284578142653`*^9, 
  3.671928488416016*^9}, {3.6719291083694754`*^9, 3.6719291738502207`*^9}, {
  3.671929228998375*^9, 3.671929231778534*^9}, {3.6719318587557883`*^9, 
  3.6719318624730005`*^9}, {3.671936949544965*^9, 3.6719369613846416`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Helper Function:",
 FontFamily->"Times New Roman",
 FontSize->14,
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "Subsubsection",
 CellChangeTimes->{{3.6719285844925113`*^9, 3.6719285908978777`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"action", "[", 
    RowBox[{"num_", ",", "choice_"}], "]"}], ":=", 
   RowBox[{"Return", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"choice", "=", "num"}], ",", 
      RowBox[{"NotebookClose", "[", "]"}], ",", 
      RowBox[{"bounds", "[", "num", "]"}]}], "}"}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "modularization", " ", "for", " ", "use", " ", "in", " ", "homeScreen"}], 
   "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6719278371367645`*^9, 3.6719279108559813`*^9}, {
  3.6719282391337576`*^9, 3.6719282414538903`*^9}, {3.6719286393076468`*^9, 
  3.6719286434218817`*^9}, {3.671936830774172*^9, 3.671936841154765*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Bounds:",
 FontFamily->"Times New Roman",
 FontSize->16,
 FontColor->RGBColor[0., 0., 0.]]], "Subsection",
 CellChangeTimes->{{3.671928624718812*^9, 3.6719286262709007`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"bounds", "[", "num_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"min", "=", "0"}], ",", 
      RowBox[{"max", "=", "1"}], ",", 
      RowBox[{"ena1", "=", "True"}], ",", 
      RowBox[{"ena2", "=", "True"}]}], "}"}], ",", 
    RowBox[{"(*", 
     RowBox[{
     "min", " ", "and", " ", "max", " ", "will", " ", "store", " ", "the", 
      " ", "lower", " ", "and", " ", "upper", " ", "bounds", " ", "while", 
      " ", "ena1", " ", "and", " ", "ena2", " ", "will", " ", "allow", " ", 
      "for", " ", "user", " ", "diabling", " ", "of", " ", "the", " ", 
      "input", " ", "field"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"CreatePalette", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"TextCell", "[", 
         RowBox[{
         "\"\<If you would like to enter upper and lower bounds for the star, \
enter them while the checkboxes are checked.\>\"", ",", "\"\<Text\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Row", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Column", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"TextCell", "[", 
               RowBox[{
               "\"\<Lower Bound\\n(hit enter)\>\"", ",", "\"\<Text\>\"", ",", 
                RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
              RowBox[{"Checkbox", "[", 
               RowBox[{"Dynamic", "[", "ena1", "]"}], "]"}], ",", 
              RowBox[{"InputField", "[", 
               RowBox[{
                RowBox[{"Dynamic", "[", "min", "]"}], ",", "Number", ",", 
                RowBox[{"Enabled", "\[Rule]", "ena1"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Column", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"TextCell", "[", 
               RowBox[{
               "\"\<Upper Bound\\n(hit enter)\>\"", ",", "\"\<Text\>\"", ",", 
                RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
              RowBox[{"Checkbox", "[", 
               RowBox[{"Dynamic", "[", "ena2", "]"}], "]"}], ",", 
              RowBox[{"InputField", "[", 
               RowBox[{
                RowBox[{"Dynamic", "[", "max", "]"}], ",", "Number", ",", 
                RowBox[{"Enabled", "\[Rule]", "ena2"}]}], "]"}]}], "}"}], 
            "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Create My Star!\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"NotebookClose", "[", "]"}], ",", 
            RowBox[{"stellarEvolutionSimulator", "[", 
             RowBox[{"num", ",", "min", ",", "max"}], "]"}]}], "}"}]}], 
         "]"}]}], 
       RowBox[{"(*", 
        RowBox[{"initialize", " ", "a", " ", "star"}], "*)"}], 
       "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"WindowClickSelect", "\[Rule]", "True"}], ",", 
      RowBox[{"WindowFloating", "\[Rule]", "False"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJwdy3tIU2EABfApgVsxDF1lki6D3Ja2ctxa64WTVlZiNqPM+RiB11KwlJoN
ygiynAWuxaCtsOFNXRl5tzaFlRQrHZWGlFZI76wcG0Szxo2Iuuf74/DjHDhZ
Bw7raxIFAoGSDxxa+W6m2xDRGsYro1CVXDQLKaODeLRr9Dc0R3NFPbzFT8Np
MKCezoSlr+I5cM/QewrKpaLN0Ha9vhQuLg/thyf+3qyGT4qTaVjXvK8O6lvc
zXDs08bjMP9YyinyZw4SN+10tcHzdFM75EJvLsK5hTIbrJJ+dMALwc5OWKZ1
svCbts8Po3dlS3p5hVyqFJqsHgV0X2JyYEDjzYPmyFIVLAl3qCHtU62DC5XX
8iHrfF4AX3YkbYOx+K5CaJ38XAL36or08JFO0wol4mEL2S0eK+kn7xDpDLED
/mpc3w2NBd9vw8QFdD9MGGH8sEmuGYD3Liu3uHlrvzq3w9BgrBK6uFg1VIyu
qYXnbLsPQVNNrxWu6IrYobei9SpMy9UwcFW4wQ8Dsq0DMJv9ch9+4BYNw8ei
tgkY7294DesHx6ah71+c+EMiTLjBmzKlE0L7mfFM2PJglrj2hWg57ElKl0OB
M10Nf873El1UWTl8ppgwwDmU/Qg0ZqU2whFztgv6zooZGHTP64NcxbJbcLUk
yMKZh3keSGWYgrBqw59JyJ62TMEdV9rfwv+QMn4N
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"bounds", "[", "15", "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"enter", " ", "any", " ", "valid", " ", "starting", " ", "mass"}],
     ";", " ", 
    RowBox[{"even", " ", "if", " ", "you", " ", 
     RowBox[{"don", "'"}], "t", " ", "it", " ", "will", " ", "still", " ", 
     "operate", " ", 
     RowBox[{"(", 
      RowBox[{"just", " ", "with", " ", "default", " ", "values"}]}]}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.671929689532716*^9, 3.671929694288988*^9}, 
   3.671929878482523*^9, {3.67193181297817*^9, 3.6719318135312014`*^9}, {
   3.6719354452419233`*^9, 3.6719354457509527`*^9}, {3.6719360396249204`*^9, 
   3.671936056195868*^9}, {3.67193612615987*^9, 3.6719361326252394`*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Data Visualizations:",
 FontFamily->"Times New Roman",
 FontSize->18,
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "Chapter",
 CellChangeTimes->{{3.669510722210079*^9, 3.6695107433980794`*^9}, {
  3.67051139249543*^9, 3.6705113961940517`*^9}, {3.670691273313651*^9, 
  3.670691275628651*^9}, {3.670707194920049*^9, 3.670707198859931*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Variable Explanations:",
 FontFamily->"Times New Roman",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "Section",
 CellChangeTimes->{{3.6695110152244797`*^9, 3.6695110219661794`*^9}}],

Cell[TextData[{
 StyleBox["Age:",
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[" Age of the star, in years.\n",
  FontFamily->"Times New Roman",
  FontSize->12],
 StyleBox["Mass: ",
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox["Mass of the star in M",
  FontFamily->"Times New Roman",
  FontSize->12],
 "\[CircleDot]",
 StyleBox[".\n",
  FontFamily->"Times New Roman",
  FontSize->12],
 StyleBox["Radius: ",
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox["Radius of the star, in R",
  FontFamily->"Times New Roman",
  FontSize->12],
 "\[CircleDot]",
 StyleBox[".\n",
  FontFamily->"Times New Roman",
  FontSize->12],
 StyleBox["Luminosity:",
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[" Luminosity of the star, in L",
  FontFamily->"Times New Roman",
  FontSize->12],
 "\[CircleDot].\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "s"], TraditionalForm]],
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[":",
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[" Tempurature of the surface of the star, in \[Degree]K.",
  FontFamily->"Times New Roman",
  FontSize->12],
 "\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "c"], TraditionalForm]],
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[":",
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[" Tempurature of the center of the star, in \[Degree]K.\n",
  FontFamily->"Times New Roman",
  FontSize->12],
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "He"], TraditionalForm]],
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[":",
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[" Radius of the Helium core, in R",
  FontFamily->"Times New Roman",
  FontSize->12],
 "\[CircleDot]",
 StyleBox[".\n",
  FontFamily->"Times New Roman",
  FontSize->12],
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "C"], TraditionalForm]],
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[":",
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[" Radius of the Carbon core, in R",
  FontFamily->"Times New Roman",
  FontSize->12],
 "\[CircleDot]",
 StyleBox[".\n",
  FontFamily->"Times New Roman",
  FontSize->12],
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "O"], TraditionalForm]],
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[":",
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[" Radius of the Oxygen core, in R",
  FontFamily->"Times New Roman",
  FontSize->12],
 "\[CircleDot]",
 StyleBox[".\n",
  FontFamily->"Times New Roman",
  FontSize->12],
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "H"], TraditionalForm]],
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[":",
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[" Mass of Hydrogen at center, as a fraction of total central mass.\n\
",
  FontFamily->"Times New Roman",
  FontSize->12],
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "He"], TraditionalForm]],
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[":",
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[" Mass of Helium at center, as a fraction of total central mass.\n",
  FontFamily->"Times New Roman",
  FontSize->12],
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "C"], TraditionalForm]],
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[":",
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[" Mass of Carbon at center, as a fraction of total central mass.\n",
  FontFamily->"Times New Roman",
  FontSize->12],
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "N"], TraditionalForm]],
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[":",
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[" Mass of Nitrogen at center, as a fraction of total central mass.\n\
",
  FontFamily->"Times New Roman",
  FontSize->12],
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "O"], TraditionalForm]],
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[":",
  FontFamily->"Times New Roman",
  FontSize->12,
  FontWeight->"Bold"],
 StyleBox[" Mass of Oxygen at center, as a fraction of total central mass.",
  FontFamily->"Times New Roman",
  FontSize->12]
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQLcdwKOpm2GvHX9ai9SD6hs30ZhDNu7irHURHXdmv
fQtIuzRFGoLofx/6LMD8BWstQfSr6lMrQPSiX4fWgOhDaiGbQHTctEQwrS6x
gOt/OFBeZxGYDihh5gfRx43CBUA0z/v9fIwRrx031M8UBdEBexhNA4G0zSZZ
BxAddvCuC4g2LmrxAtFR7M+CQPSJnLYoEM1woicORF+LPpwAovV2rckC0baa
V8pAtMTRjYmzgLTGzL+ZIDqtQE/hdeRrx+J4DgsQra36N0Y56rWjfvXiVBDt
x+BdDqL1ji5pANF2F8zssoD0s2c8oSAaANTLlBM=
  "]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Graphs:",
 FontFamily->"Times New Roman",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "Section",
 CellChangeTimes->{{3.6695110152244797`*^9, 3.6695110219661794`*^9}, {
  3.6705114859285517`*^9, 3.67051149050111*^9}, {3.6710248601961756`*^9, 
  3.6710248693188157`*^9}}],

Cell["\<\
This set of plots shows all the different quantities we monitor for the \
current star across that star\[CloseCurlyQuote]s life (it stops when the data \
does). It updates dynamically every time the main function is run.\
\>", "Text",
 CellChangeTimes->{{3.671281962635637*^9, 3.6712820600947747`*^9}, {
  3.6712820928688226`*^9, 3.6712821387238874`*^9}, {3.67190678970418*^9, 
  3.6719068158936777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"GraphicsGrid", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"ageFunction", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "1.", ",", "maxStep"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Brown", ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], ",", 
          RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Step\>\"", ",", "\"\<Age (Years)\>\""}], "}"}]}], 
          ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<Time vs. Step\>\""}], ",", 
          RowBox[{"AxesStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "Thick"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"massFunction", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0.", ",", "maxAge"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Red", ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], ",", 
          RowBox[{"Filling", "->", "Bottom"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Age (Years)\>\"", ",", "\"\<Mass (M\[CircleDot])\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<Mass vs. Time\>\""}], ",", 
          RowBox[{"AxesStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "Thick"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"radiusFunction", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0.", ",", "maxAge"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Purple", ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], ",", 
          RowBox[{"Filling", "->", "Bottom"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Age (Years)\>\"", ",", "\"\<Radius (R\[CircleDot])\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<Radius vs. Time\>\""}], ",", 
          RowBox[{"AxesStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "Thick"}], "]"}]}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"luminosityFunction", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0.", ",", "maxAge"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Green", ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], ",", 
          RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Age (Years)\>\"", ",", 
             "\"\<Luminosity (L\[CircleDot])\>\""}], "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<Luminosity vs. Time\>\""}], 
          ",", 
          RowBox[{"AxesStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "Thick"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"surfaceTempFunction", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0.", ",", "maxAge"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Yellow", ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], ",", 
          RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Age (Years)\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(T\), \(s\)]\) (\[Degree]K)\>\""}], 
            "}"}]}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<\!\(\*SubscriptBox[\(T\), \(s\)]\) vs. Time\>\""}], ",", 
          RowBox[{"AxesStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "Thick"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"centerTempFunction", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0.", ",", "maxAge"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Pink", ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], ",", 
          RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Age (Years)\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(T\), \(c\)]\) (\[Degree]K)\>\""}], 
            "}"}]}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<\!\(\*SubscriptBox[\(T\), \(c\)]\) vs. Time\>\""}], ",", 
          RowBox[{"AxesStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "Thick"}], "]"}]}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"rHeFunction", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0.", ",", "maxAge"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Blue", ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], ",", 
          RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Age (Years)\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(R\), \(He\)]\) (R\[CircleDot])\>\""}], 
            "}"}]}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<\!\(\*SubscriptBox[\(R\), \(He\)]\) vs. Time\>\""}], ",", 
          RowBox[{"AxesStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "Thick"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"rCFunction", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0.", ",", "maxAge"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], ",", 
          RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Age (Years)\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(R\), \(C\)]\) (R\[CircleDot])\>\""}], 
            "}"}]}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<\!\(\*SubscriptBox[\(R\), \(C\)]\) vs. Time\>\""}], ",", 
          RowBox[{"AxesStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "Thick"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"rOFunction", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0.", ",", "maxAge"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"Darker", "[", 
              RowBox[{"Red", ",", "0.5"}], "]"}], ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], ",", 
          RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Age (Years)\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(R\), \(O\)]\) (R\[CircleDot])\>\""}], 
            "}"}]}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<\!\(\*SubscriptBox[\(R\), \(O\)]\) vs. Time\>\""}], ",", 
          RowBox[{"AxesStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "Thick"}], "]"}]}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"mHFunction", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0.", ",", "maxAge"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"Darker", "[", 
              RowBox[{"Yellow", ",", "0.5"}], "]"}], ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], ",", 
          RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Age (Years)\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(M\), \(H\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<\!\(\*SubscriptBox[\(M\), \(H\)]\) vs. Time\>\""}], ",", 
          RowBox[{"AxesStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "Thick"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"mHeFunction", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0.", ",", "maxAge"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Blue", ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], ",", 
          RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Age (Years)\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(M\), \(He\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<\!\(\*SubscriptBox[\(M\), \(He\)]\) vs. Time\>\""}], ",", 
          RowBox[{"AxesStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "Thick"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"mCFunction", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0.", ",", "maxAge"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], ",", 
          RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Age (Years)\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(M\), \(C\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<\!\(\*SubscriptBox[\(M\), \(C\)]\) vs. Time\>\""}], ",", 
          RowBox[{"AxesStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "Thick"}], "]"}]}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"mNFunction", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0.", ",", "maxAge"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Purple", ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], ",", 
          RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Age (Years)\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(M\), \(N\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<\!\(\*SubscriptBox[\(M\), \(N\)]\) vs. Time\>\""}], ",", 
          RowBox[{"AxesStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "Thick"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"mOFunction", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0.", ",", "maxAge"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"Darker", "[", 
              RowBox[{"Red", ",", "0.5"}], "]"}], ",", 
             RowBox[{"Thickness", "[", "0.005", "]"}]}], "]"}]}], ",", 
          RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Age (Years)\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(M\), \(O\)]\)\>\""}], "}"}]}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<\!\(\*SubscriptBox[\(M\), \(O\)]\) vs. Time\>\""}], ",", 
          RowBox[{"AxesStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "Thick"}], "]"}]}]}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", 
    RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6705116090726633`*^9, 3.6705116114598*^9}, {
   3.6706908445181513`*^9, 3.670690853969651*^9}, {3.6706914995856514`*^9, 
   3.670691519698151*^9}, {3.671019015310622*^9, 3.6710191505833116`*^9}, {
   3.6710192071158915`*^9, 3.671019210045895*^9}, {3.671019256885961*^9, 
   3.6710194246161966`*^9}, 3.6710194652987537`*^9, {3.6710195884714265`*^9, 
   3.6710196914465714`*^9}, {3.671019723496616*^9, 3.671019754019159*^9}, {
   3.671019786224204*^9, 3.671019840771781*^9}, {3.671020826577489*^9, 
   3.671020837260004*^9}, {3.6710249813580365`*^9, 3.671024990840682*^9}, {
   3.6711123637465744`*^9, 3.6711123650865765`*^9}, {3.6711332314065495`*^9, 
   3.6711332670912857`*^9}, {3.6711338333335323`*^9, 
   3.6711339607398524`*^9}, {3.6711340958638525`*^9, 
   3.6711341008468523`*^9}, {3.6711341313998528`*^9, 
   3.6711341489898524`*^9}, {3.6711341812328525`*^9, 
   3.6711342040218754`*^9}, {3.6711343800020237`*^9, 3.671134397858313*^9}, {
   3.6711351189962773`*^9, 3.6711351240522776`*^9}, {3.6712021741681895`*^9, 
   3.6712022142407503`*^9}, {3.6712812873926706`*^9, 
   3.6712816951512547`*^9}, {3.6712818169894276`*^9, 3.6712818176094284`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   GraphicsGrid[{{
      Plot[
       $CellContext`ageFunction[$CellContext`x], {$CellContext`x, 
        1., $CellContext`maxStep}, PlotRange -> Full, PlotStyle -> 
       Directive[Brown, 
         Thickness[0.005]], Filling -> Bottom, 
       AxesLabel -> {"Step", "Age (Years)"}, PlotLabel -> "Time vs. Step", 
       AxesStyle -> Directive[Black, Thick]], 
      Plot[
       $CellContext`massFunction[$CellContext`x], {$CellContext`x, 
        0., $CellContext`maxAge}, PlotStyle -> Directive[Red, 
         Thickness[0.005]], Filling -> Bottom, 
       AxesLabel -> {"Age (Years)", "Mass (M\[CircleDot])"}, PlotLabel -> 
       "Mass vs. Time", AxesStyle -> Directive[Black, Thick]], 
      Plot[
       $CellContext`radiusFunction[$CellContext`x], {$CellContext`x, 
        0., $CellContext`maxAge}, PlotStyle -> Directive[Purple, 
         Thickness[0.005]], Filling -> Bottom, 
       AxesLabel -> {"Age (Years)", "Radius (R\[CircleDot])"}, PlotLabel -> 
       "Radius vs. Time", AxesStyle -> Directive[Black, Thick]]}, {
      Plot[
       $CellContext`luminosityFunction[$CellContext`x], {$CellContext`x, 
        0., $CellContext`maxAge}, PlotStyle -> Directive[Green, 
         Thickness[0.005]], Filling -> Bottom, 
       AxesLabel -> {"Age (Years)", "Luminosity (L\[CircleDot])"}, PlotLabel -> 
       "Luminosity vs. Time", AxesStyle -> Directive[Black, Thick]], 
      Plot[
       $CellContext`surfaceTempFunction[$CellContext`x], {$CellContext`x, 
        0., $CellContext`maxAge}, PlotStyle -> Directive[Yellow, 
         Thickness[0.005]], Filling -> Bottom, 
       AxesLabel -> {
        "Age (Years)", "\!\(\*SubscriptBox[\(T\), \(s\)]\) (\[Degree]K)"}, 
       PlotLabel -> "\!\(\*SubscriptBox[\(T\), \(s\)]\) vs. Time", AxesStyle -> 
       Directive[Black, Thick]], 
      Plot[
       $CellContext`centerTempFunction[$CellContext`x], {$CellContext`x, 
        0., $CellContext`maxAge}, PlotStyle -> Directive[Pink, 
         Thickness[0.005]], Filling -> Bottom, 
       AxesLabel -> {
        "Age (Years)", "\!\(\*SubscriptBox[\(T\), \(c\)]\) (\[Degree]K)"}, 
       PlotLabel -> "\!\(\*SubscriptBox[\(T\), \(c\)]\) vs. Time", AxesStyle -> 
       Directive[Black, Thick]]}, {
      Plot[
       $CellContext`rHeFunction[$CellContext`x], {$CellContext`x, 
        0., $CellContext`maxAge}, PlotStyle -> Directive[Blue, 
         Thickness[0.005]], Filling -> Bottom, 
       AxesLabel -> {
        "Age (Years)", "\!\(\*SubscriptBox[\(R\), \(He\)]\) (R\[CircleDot])"},
        PlotLabel -> "\!\(\*SubscriptBox[\(R\), \(He\)]\) vs. Time", 
       AxesStyle -> Directive[Black, Thick]], 
      Plot[
       $CellContext`rCFunction[$CellContext`x], {$CellContext`x, 
        0., $CellContext`maxAge}, PlotStyle -> Directive[Black, 
         Thickness[0.005]], Filling -> Bottom, 
       AxesLabel -> {
        "Age (Years)", "\!\(\*SubscriptBox[\(R\), \(C\)]\) (R\[CircleDot])"}, 
       PlotLabel -> "\!\(\*SubscriptBox[\(R\), \(C\)]\) vs. Time", AxesStyle -> 
       Directive[Black, Thick]], 
      Plot[
       $CellContext`rOFunction[$CellContext`x], {$CellContext`x, 
        0., $CellContext`maxAge}, PlotStyle -> Directive[
         Darker[Red, 0.5], 
         Thickness[0.005]], Filling -> Bottom, 
       AxesLabel -> {
        "Age (Years)", "\!\(\*SubscriptBox[\(R\), \(O\)]\) (R\[CircleDot])"}, 
       PlotLabel -> "\!\(\*SubscriptBox[\(R\), \(O\)]\) vs. Time", AxesStyle -> 
       Directive[Black, Thick]]}, {
      Plot[
       $CellContext`mHFunction[$CellContext`x], {$CellContext`x, 
        0., $CellContext`maxAge}, PlotStyle -> Directive[
         Darker[Yellow, 0.5], 
         Thickness[0.005]], Filling -> Bottom, 
       AxesLabel -> {"Age (Years)", "\!\(\*SubscriptBox[\(M\), \(H\)]\)"}, 
       PlotLabel -> "\!\(\*SubscriptBox[\(M\), \(H\)]\) vs. Time", AxesStyle -> 
       Directive[Black, Thick]], 
      Plot[
       $CellContext`mHeFunction[$CellContext`x], {$CellContext`x, 
        0., $CellContext`maxAge}, PlotStyle -> Directive[Blue, 
         Thickness[0.005]], Filling -> Bottom, 
       AxesLabel -> {"Age (Years)", "\!\(\*SubscriptBox[\(M\), \(He\)]\)"}, 
       PlotLabel -> "\!\(\*SubscriptBox[\(M\), \(He\)]\) vs. Time", AxesStyle -> 
       Directive[Black, Thick]], 
      Plot[
       $CellContext`mCFunction[$CellContext`x], {$CellContext`x, 
        0., $CellContext`maxAge}, PlotStyle -> Directive[Black, 
         Thickness[0.005]], Filling -> Bottom, 
       AxesLabel -> {"Age (Years)", "\!\(\*SubscriptBox[\(M\), \(C\)]\)"}, 
       PlotLabel -> "\!\(\*SubscriptBox[\(M\), \(C\)]\) vs. Time", AxesStyle -> 
       Directive[Black, Thick]]}, {
      Plot[
       $CellContext`mNFunction[$CellContext`x], {$CellContext`x, 
        0., $CellContext`maxAge}, PlotStyle -> Directive[Purple, 
         Thickness[0.005]], Filling -> Bottom, 
       AxesLabel -> {"Age (Years)", "\!\(\*SubscriptBox[\(M\), \(N\)]\)"}, 
       PlotLabel -> "\!\(\*SubscriptBox[\(M\), \(N\)]\) vs. Time", AxesStyle -> 
       Directive[Black, Thick]], 
      Plot[
       $CellContext`mOFunction[$CellContext`x], {$CellContext`x, 
        0., $CellContext`maxAge}, PlotStyle -> Directive[
         Darker[Red, 0.5], 
         Thickness[0.005]], Filling -> Bottom, 
       AxesLabel -> {"Age (Years)", "\!\(\*SubscriptBox[\(M\), \(O\)]\)"}, 
       PlotLabel -> "\!\(\*SubscriptBox[\(M\), \(O\)]\) vs. Time", AxesStyle -> 
       Directive[Black, Thick]]}}, ImageSize -> Full, Frame -> All], 
   StandardForm],
  ImageSizeCache->{1218., {629., 633.}}]], "Output",
 CellChangeTimes->{
  3.6710194674887567`*^9, {3.671019575611408*^9, 3.67101962656398*^9}, 
   3.6710196611165285`*^9, 3.6710197572641635`*^9, {3.671019802999228*^9, 
   3.6710198411617813`*^9}, 3.671020837880005*^9, 3.671028523645878*^9, 
   3.671112335416535*^9, 3.6711124960367594`*^9, 3.6711332990082054`*^9, 
   3.6711338658032103`*^9, 3.6711340251048527`*^9, 3.671134205640892*^9, {
   3.6711343862087765`*^9, 3.67113439869228*^9}, 3.671135124794277*^9, 
   3.6712022197357597`*^9, 3.6712047423275003`*^9, 3.671281617212145*^9, 
   3.6712816963712573`*^9, {3.671281792909394*^9, 3.6712818180794296`*^9}, 
   3.671492262574315*^9, 3.6714951677294807`*^9, 3.6714964101875453`*^9, 
   3.6718990850685*^9, 3.6719042919343157`*^9, 
   3.671906454441004*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
o72zHa5JmGbIExo7uYb+oaeeOkDSgW/sVy8+mbr0m98qfF2f/FZn1zSu+N73
tmy/774VB265Zchft87bf+ut8/fedttCdo3XvfTgwV0LDx/eK/5m/PKXR2ic
Qo+T3/ot31zP0lTN5JBfN79HeSJPzJXZZnpMr6MfE2pDx05sSh3KZ+lvtg55
KHG9LnSHDiUam1M0oTpwgKMiv/VZjo2Xs9345tXWXXONv33FCo1R41wKbEaX
fb7aMFHjZeAxYWTlN68HX4cPHNi25/bbF/3q2msbu++4Y/Gahx7aCGNKTMho
NN1MqmK5PqMf8q/NUhWOOJTi9IWUwdei87gkn6fqYPtMoeOPYsK1YAHrzajs
Qt0IlL0Ji5rFoo47IYg0qHKFdseOazMbz7kW43S+NERz5bcLlHGqH968eSaC
veWPPbaj99e/PnauFJ258tvxnDLWv2Gi9TghBRoeOp0aqzxRbqv7ZRv/TtEo
EeKtvl1gOWY7a1OISSVQMNlCwTx89qjpW8q2sAtgmn5jRtMpZrilpH6DfdYx
Gnn8xhtn7br77qVznn764PsFRVq2Y5o0K9RTnvWoeYrLopPTJCCusyM+5Oe0
GCEqsCc2LXCQIbHh1viLk4sSpvtJmC564ol99+/YsQQh17wjR8Y+ZWFh+goD
XUI2rF3rb125ki450/HxNrZfKB/fKw1vX9S3UHFIT+wd4+95DWmAx1lUk1n8
yXjWlv3oRzthPFeMjW339jgL8bbAysDUsUuWxgrnuRZ2zJbMOtfx23RNKcqM
KJywe4Cwu2rfvuuQ+oLT8b5VBnbst1x7VK4/c6KcrGRtw4MProW7nXrs2FHv
z2Ip52Y2oJxRzz6fnQ2I8yxAFDCNEekSvkbEbnvggeGt3/jGSnax7X3vpRB7
cUFE3KuIWLd37zXsYtvLrO2yeucll/irN21y6bXXbah48Df16NGjXtfCvXv3
erXeY8eOqXP4/L2sBO4iiq7fs+fKTd/85mp21vb6dTtF9y9Z4q/Yvt2douC2
A/gL/PbaX0yaNMnr2rtw4UKv/qtGoyEiLXyvHRgaGvK6cTLg9bD4u3HVqlVe
bXjbtm1e7eK77rpLPM77OT7fmBUELptgKTLx7OzeMkDoYp2tBVdvH5s3j4Wa
otAQPAV3xd/SXbt2sQj4Gq9745o1awCF+GP3Uhv1wzNnzgRY+Hs48HHQjWBg
ecWWLVuAE/7wuJ/mAuheZaNhqdjZb5cI0PVXXnnlptWrSRzJZNfnHDx4UICz
ePfu3YRNfffixYsFLpAorraPzp07V0DidREmeKrABNLzo1yYhEzDVwkiZBoR
7mIw732nRIhAL5MRnOWR7/z9+/cLeLwuwgcw6nJDfe998uSTTxZiE9ilS4AQ
bhDYHCgSm7tVeAQXzxzdd0vE5pnp06fPOHLkCDvLEile78zDhw8L8QmM8CYQ
G4wtV5i41IQ6KbnpAiQP5YLjHqJ/4U9+svfRrVvnshDnoeLoFy+pC9UU8fOj
sftMRxSDxh5uWFsaFdsy18PZEZ01Rsf521OEZiuxZV6BbmOOoA5OgRnCrP1Z
Ln5wXcXwFMm3xYcO7fb+MpYfMbFIInsGOGgRBY8UZj47cqVDYd/De2ZGsmUh
O8tCjYE1GzduBEeEmcWFMLNgS0D5EsGUZTt37gyGQQVwZec99yxb+cgjW9nZ
eK7oWhIorB8IUDIbYtdJzohchVnQcX09lBid1hU3WNRXOzJjxgzZ71eRjiP+
A0sQOwiGHJwzZw5ue3zWrFkiVLrquuuugwH/WpEG/E5LlPiwM2sCWfGDrrux
xrIaT2eN5XRRx40Fdfp+ADpr4B9kv+kllP3zxsbG4IrBll1Lly6FOxFsgY6I
uOOrRbLkDku8sa8clrRPW8RilaZUKUcEgEIh9s+fP9/7A3a6D9zAMRH46JzA
sAPKEaCXhxV3EfZLHn/8/rGbb57H4pn9xWMf6zBOLt9hmOlqMXtn4wGkmw3k
/pCd7hU82Lpy5UpoA4Z0iKhgoHD8tgzwi/fKJkQ5aqYwtMUI6+6dlkjsr4rj
3CAnItTHiCVBWWKvngj6ybfLZVVaxBfm1doNGzbsWL58ufc2AhQDT0ResF7Q
I/AKvITVgle/NQOvEiQ4chsYZWlvJ0Y9PDKygIVnuKFARl0YAkWMBrzLCGWA
ApMOIwIvixHFzmXLlsG7ettyIBJh6BwQ+Qohcue9916yev9+ekP898pDBKkW
5B28dxEiGE+t3Lp1KxycEBGgxsLEz+dExOKN4xHh4rH2oYc27Ni5czm79q9j
wYiJ4FNh4/NUFBtdv5toENICCUJwvGfRokVQsxuLFxSjMt32bgHWTS4rmIfA
AIcFB49khefJk0/2g9GzOzzIJ2CI7b2XOrt8R/AvsDiABkrExgqbizcrcRvf
su592eK3DzirUCocQB0iDng7jwLmboTwUCEYFIyfICLe5zK7wojXM5mLPesh
3sj4ccTiCb/fAiyuIixgNiATyEPB0zAz8tkiA+Rb1SAfXoSV+/1NCwj8IBGI
fBO8BwiEvWAEfjoXgduJIsyosxlGnG0FRR9W4gurZ1C0MRdFXyKKbhwdXbXx
wQfXsLNjzhQFTtkP3FIGitZSF8MUbchFzIjFJ/0g0or1JabrcD4uo6ZD4fOJ
LmcbLaH4aDMUCHI+WaQqbrO4ox9aHmC8XT5q4CNCgnAmi6p1NL+VHZOriVKo
MMId2Gr4rE8UicnNlpz4ozGYJASO9nxSPkwMlbmGLobSYzTNZuLW5wLkFuWN
sfZl5tGjh73HEhCwBIrS61nTNpmVBKRhyMqS0uuIKsR5iIkBAATimlz0b1Me
GPSjQMr72/QSoG/h2zw+z0U/BJ9Z+U/QxRjWg3akUbyP5yL+Zot3/rusJiF+
o64CcbhWyQFSG4jzcfxjRRqGzxMyMJRY+8UutiEj3skcciMJG4IUjcgf08UI
8THlypJrHy0SjpssswI/sjzAHiKkJgxEYBrV20AXY24Kx9hw7yO5CPuCpXjk
YDIlpxIli/bs8Y/MmEGXvCGBEiAITw4P5m2kiyG0GKBidOatzUXJ5y3TAX/v
TMmS++/3D8+cmYGST9PFGFvCL120b98+78NFCtsNlkKQx2MJs42bT85AJ6iQ
dH6GLobfRZqFKdqHiqRzs4XOf2g9nZ+li+FipUH5YC46txBhqGLHrAg7e6gc
yTQouY4uhoOUlHwgFyU3KEpQcsNi5h+3gJLrFSWwe0zHrsqco8g/ytlsmef6
x+JwaHXthPt+bDbmfE4pDAwDY86VxSfS4gdaLBt9PbHl4sceuwuRChu+/FOC
BQm661stSBA1+GOYM43iklN/Z5Q9I1aLZRWfIGZ8Ev2+3sKv95c3exBTVHCd
hV+HE/iF/AqW3yD0MPg1vG2bvxczq0n8ik1iP6vs2WNtxVZETRKxjJXWinM2
FVtd/PRG/KjVpl0/iecW0nP+mo0bfeT5UGmsuDYjA9ci6yNOLbsMw+CgUDU9
jQ1myH7foNiF0TrOee8rXsPiB9k25fppPLt6RH13EJazovBmtp1YpLKdWrqy
sd/mmwWi2baF6MBsCGaEGNveW5Yjc0gPfNbCwX+O52BfuEJf5yQWKNCUIph4
fEpOttfNmesOvXhG3kgXY6YD0ziMkVcUN6XlnM0IDXA2Wvj5RCw/+buBwESs
LGlm4jRHJpZfAxIZQ+qqqUMDJ3ast5d2I7iJTiOxjUQ/49iqIgeXGyzY/0ss
9tQx5sEE9oEw+YgXCfupjtjro5og9L9fVutxopEDgVdnGe18RH/KQuWTsVT2
KyoDdbFQOTkvlZ+ni1GqgbEbznnvyUWlTY+eiqWSxL8b83J2KgczUAn5klR+
gS4WmTk21n53LiptEnsklkrafaCuUwnJZQQOEIFXbNni7168OAOBlOQ0Y5rL
i9TQT6gxtaT3X2PpnaroxYgA9AbGg+jtG2perJ9KbG+mi6GUSOsxelcWSe96
MyvE6P23WHr5klDMlweG0n981iwfAsvo7clL7za6GCnlbXxNnPeuXPRea0kW
/SyWQM9cQ0yrf+vzxsaYUqIiCmsaGL22HT1S0XsLXYzkM2hm9A7novcTFnqf
TkMvrYCuw7vvnz+f0YwkBKO3lpfeL9LFhod9Z5Hy/HFVaSDJfyaWfFpOUF+6
axdLtGDNClJjjN7fKoheOFfQjOUgxdJ7tUpXo7KC0fvzWHpPprYgw/rA6v8y
kGqY5lvpYmQMsACDkfqOXKReY0nF/3ssbafQw8VQA4RAjv9fXtpGTDay6rTL
ctH2cVXeI2k7Gksbu5eicJHLQBTOoof/JQKNLT9SyemXFIEoPWOLQt+ei8Cr
1ZSerF/6j1gCT6eHh0PdXw01r2tPRdttdDHsK2IGFhStKFIH16riMzl7+Z+W
B9AYNrFMPz6XSvuNG+EVwo1jeVH6Ml2MyArHmPq+rUiUPqzKGmSZ3i8tD0go
a2jEosOaJIKaIpT/zgvRVyT0R2DhIEyY1P+jXCitNRdcMlj+KwaW2FSWbSst
e36XAUVro2Vog3WCcPW/zAvUHfRcyBKWuAAoePs/zJz86HedhLK9PEclI9eY
ZUVs9cR/J2Adme2NeVcya2y2BMGIK/4zA7iGL7qLOgdw4YtQOY6hAQAO/Pie
N5ebKgy/rUhsBsN6+mGzbG3+E0/s9/4nvSzLYnXLy1hZO7TVDwthMIOJEAZu
/mheaO+m3iGEwYgL8GJ1C86jnklfZY280RvKTaYbm52pSZkPqOpIWRt3LL0d
lYtIrKlM/soxPW9746pVFGz8fKh5y5ZU5mEn9Q9ZChRH6WuoxWYnYo8Kttid
RSM1BF1AniWoFhc/7WTMFDYBwqC/SiVDUJjKyjL/v8iWmnKRNuYq5aHXXrDw
Z+OaNTJv8sxQ81L6VGg/QBeLDTDYxhi0AUYNoR4QZmtE+b36pilidxCx+4UQ
/BcXL/i2BRoKmw+oQa2sCP6VpREVTD6H+iOyMogBkHX6WV40+ZZG+o4rHM2G
2DJDl2P8v86grAkLwiC9gGTa2Kinu1WTPGbQwKi8Sg21ZCnJ/8YCTDv0sNgB
qTykRRA7/GsGgOUyZZzgi4X1PX88vreTMBYM7vNJhAE68GUINoqbXWmek2DT
YsogXGkZwP06FjF6uxdLrCAgCOSBBQRPOSLW9nIccVgPMQ23TNtPscXOuJLL
D3iXi0ORI4r3qmWfcoj5/2JZEEp1PZeaDuTKiCP+xZEj1VyMHrUhQGt5s8oc
7bFluf+XhjekLfYI5J+Hmvc1yTz9f3JLam20TZObNrJVAcavC2fLey3DSz+W
D7TzUFMc8tOh5gXBmStlTi69UobXe8UrRUmYX2GuH6VF+jj7W7HA04uUjZAF
aYvDGYBvt7APD8cPxEu3RqvUSBS7zrJBEiU/YlnwQmpBJETwt2znTv8fU7Kg
Wg4haneS1jqElWqhIzjCxk7sllosR15MDWJ2RnfRhxw50oaKE1uYFODfwjDp
3WoOTM5hs2vqsVC/lFoIe9vHHaG+sHUEXq4W2chJL3ZNdyyB1B3p2SBPazds
8P+eCIS9heJXgcCVamWXXEXErrHdFhlCcYYiDx6M9P1H585l8eyPhpoXvbuk
yVpnKy5TDhQrIGlxGy7uTUP+y6j9+fv3s4lsjLcw0fm3lSf/7UT+oh//eI9M
U7Nb+mLJX0QNYjSjTw4+moFeZDmRkiuJ3neoPBoCJOWd+2MJpO3+6nodIvT3
hxkIlJsalUPgZSpfBQusnN1ALIH0yjUWAeoKO1Y9ArmIYn92WTbErhmMJfC1
pkpihA2V/H71CAyp5FtVqkFu0c5umRRL7xJqUExUCJf6CNH7i0mTsHd5Fel9
izlspF21cHH825Fo10fpYUXW9a+Hmlccu5jcEul9qxogwATRcnKcjX/BCq2T
xobbLOuJDAQGCH9VFQIddwKMLzH4oyjzfFwsNiH3S/vus/lPyL6oxdmXAapS
ZD9hsBZfZ/AWFWJjQoK9eZY9dloaiDjdKOcBRCjf8R6uGj4FFRywXMvFqijI
DNynx8L2+9RX+EWUNwm/+FAVocpcL8AAerOyu3gpJ5UT4ZITYgF6M/VQ+NWd
y5Yxv/qdKgKUZcJ/uYqIYZHwSkAi6cRYWPi7TVZu3cr0C9Vk3l7CBG74WG8v
3WGjpt32J35+/s3KRJv5rZNiAbmEOiXWWcA/Q5H+fKh5RXhbMIlI18RPnP9B
lC2eEYvFW6gtDPn1WPTPMmBRcqwSis3eqGYeTSP6rEgpc6ufCuCNfAEZBU3U
gAhnmT59q3p4LTONKM0N4uyzLbdl3EWJm/pQ5eFbTP0SjuqbVdEvhdEbzRyD
sqinxGAUGwqE3Z/0cSGMSIgMX4W4cLR6GL3BjINZORu75tQEjCJjgIaxD4FV
jmiXZemzWCHbn1YPm5BNWkJQiTfVqYTHaVnFqVvMJHnyXwCb8oDvoL6K2TKk
pzESe4CgwteDeANE9aB6nYqB5QoVdsvpxVmnpkXcNOZgtSdw+kAMEdDXh5oX
HNrobHXtidtW7rqt0Se2SubnEpWdRm5ExehnWG6LKAUUE1CRk0S0tXhdrPYQ
mZT7HBnmNBN5WukzkXEaXuYM/OtUjayZ3TnTcpsKCS+nFkR2ByEhNOZrKUGP
tWuntWQGXhoD9QrL0kF/rekD2LbZ7JqzYkF/D50V69GYw7s3A+Jt3ZbFVzur
c9HX53tb62BeZToYlZs/O5YPq6hBxK5wD0htIuD4kyKFvwVbrci3IvvSK7aP
Fb8b5SpmxbIilCbkGiIyqZhF8O7pLEcQ13xrOPOqKJcwOw0ruJLALWOCQwzw
7h5q3tcgOo5qSzmKbV8UTqHxStHikV9k5meUX5gTi/z7qQUxThQh611DzWt5
kwJ8+VKScgj8XTU5iISMMrjnxhJIr3uQ2X8Ij3dn9agLmbSF5ho6NTN4fiyx
H6AGMb2rh1a3Z6DXbym9LzUzrWw3bnbLBbH0fojOilQZY+5Xqsfcl5m6qcbt
c2Opo9desMG3zs3bqkJgxlWj9qznQlO91YD9ObEYrbVIwPaqAJRjxaeRV3hJ
lDWYF4tNyKtGiNPIUPOuBm1FK2HRZkxh/wvN6ldlRZ6bBiebSN061Lzote0g
xSRAaZykxk1NIsXwWqDqi8wCqufF4nW1XZBuqSJGsW8wg4kKLhHWyxjEEDZ1
sbQG9UiwSayFoVh4rrHIz7YM2JTigVNtvEzmXG28fJFZzqOWuVwYC8g6u7xs
rQomseOFbmNxonBxkfs+XqjSM+aU8e/EQvQJJTNiutj7QlX0KTJqe35UDuQF
scTyl5ggStXHHDdVj94LTcerMgsXxRLI30kiUspYsevdSNSBWByvAnXPV+7y
8ObNM5W7XBBL3QY6i/wtRuYsUbJlqHkxZ5upG1LLF+DcVMHCC2OpCwUDn6QG
9VQE6hc2V4/ekG4+h/wXRBfT81jgIP3Xi9IgwNmNDIGcKt2UgfzWDijnmoko
NfP+klja6cUnMj0rXNX11aP3t9WYEq8SVfmel8YSyN8TYjia66onzHNV9IXl
OWJEyC5bGEsgf+OBcC7MOn22egReYG7ioxbfvDyWOnrrck03ReydnsExJKix
gK8K1IWUcY4ZFKkSj1fEErvZtDwskP7UUPM6uWoRO1slMsyg6JWWp7gXjrFJ
+fg5ef4qAhgvxNks97HREa/W1R6YQwwaojqkz0tm4hyz9lWlWBZZbnOsF0mc
l2eCw6UcQaFU6T925JrTaG5asfvy93vWSdn4aaeSuTdbrQRDJKsMzKtiuOdQ
Zxc7wc+4d4PFRn0yJfdiOzKtqEnbKO61q3pkFvEM2/qYi9sWJ/DMkvaSpe1m
eYCyH5+3mMZrM7ApMuU2ragyhzg2RbVeJptC3u0M006ueeihjcS112TVtO6E
aoKtyj5KVq0vUsOKqxVifNk8ml7FWh2jzIyyl6+N4aJLdWScF7hZUqWyIuuG
mncFqEKBhfjN/lXJ050ZZTVfF4maayGEUjn+fgCMoRCSYPm3d81Q8+rhVhdf
qNBR6Vy7Qsc0k5+JSz5mRlnV11taVgMkeq8BS05hJTuK/JFIvdqRVVWa/4yt
1meu7dQom/V7sRjxDfNR6S/dxccyACTfQ18GQHmXfDCAnq1yJrp5YLfY3jyt
MOIb7yOIlZb5oxkwQi9KxSjPko9TzIyL0jFbfyKzoV9UphHihE3h2Vu5KwdV
5iUfz45K1ixLg5N6TwXbHZ6l4dYSTnirJ+YC2692edd7PEtpnJ7uYVe/KRYt
/h4A5PGwYw7bb/HDQ83riNsCT4ILj9lyywgyTzBT8Cql8gex0ND+/9iGVhns
D1UFmsiI+nizxEvN+745ltjbTcuLUnD2AvKKEXtCczpeCvryWALvUPZSzjd8
oHoEHm/WH6p0/CWx1N2prBzS78wbXJWBulK8gaJuupoKNWuD/zCWurvoLMJL
2HC2EPn9RB17EcDUqXSHzTG0kLqQJk5WE5/Y1syY+HxLLL0hF8aZiyXG2BCR
Ef6+oeY1oknkt9YQTTLDZLWt2VvT0M5Zj10KMWvG/NN7q0f75OaQF/P87LK3
xdJ7D52FPZJe5orqEThJ+VAzaL00lro/obNGQL+qetQNEnUoq4FdUqHm22Op
ozdbyPQEq0h4T/WoCylmj7JLKCiEvEofelksvffSWTHMhzFi7xutNr0NVV1k
Fgu+M5bYXXRWTIdhiTl7F2daYkt2Or1qexDTpQ7HUnefUkxQx/aielf1qGuY
+Si1t8fKWOq+Ti0gHBI7SIF/76y8rHap6N3MLV0eS2/IaRJz68Lqir3YLhtq
XkTYbvJ7dPKFSTKXVb07DenEeeO1iTBTbDxzafXo74qyTatiiaZUQAPyLfZv
xgJeOCBESG+tHqFeHZSiQFdYKXbFFbFk7mG/e7ASFjL8q0aDkYkcDmhjweDF
ahyAgl22HtOW8mh1XQmSFObkGy6rs8vsW+bRa4bwJhx2mM+gzhsbG5OX2sbw
ifmTASea2dzn8KhWZO/VIJLrxCsu2WXvjeXXg+x3H/iFhBJkDzyDeCK2hSLK
ououcNBjcS84yLj4OvbZgLLCIcFsY9NU8B4xlo2t7Sg86WlirdiqBGlhBSBL
hrMLUvItgSi+r7vBwm5Lq++LZda3SUwBLJQHdkQuVOtiZqOGukUf9yKF0GCf
LGkKZuLPexn77P7paaf5/3DOOcypwt/C8VhltR2FJmaBl5i507P0dQt2GTkW
0RP1sjmlgLZW4zn2AzqLlDU4xoaKL2OftRc99JCat744oYOtqh0xkZdSqyWz
VQabPcLW8ewTMt2WButmg++PNJqDFh2PdRIOT3aS/pNKLQIRmNhfkJOXCTEv
+tMlP8T1aCbYBMihvqMm9cnmrlr91hbxm/0LVXAkvbUlD0OSNjoGssN0OidD
3MpLIxlSfqFGI6QX0mHL1xZpzMqHfgQxwvi5bp8cGtUkYBfNlthCvUhmX5gL
gvDgNpkKKuzqtlosZyErnZoEu14Pq7mzvYp8MPvcXHh/ldAopUgsxWp1J08p
p+XIe9jnpolWCmiFVhiLDdANeaKbfr/sHtAycDFO8zQzqLkBHLENKUvoiTlW
s70Zkl1ty9EU2hva5mXAMKZkkQ55+kp7I9bFVba59ZiencLxN422b7aBI7b8
z8kCHp6R8H09A6N10LPu5MI+3xVDvBoPIAIKxKFpLKMF/pmJrxl23xbmsU9b
ns8FAN7ZyGcQsVM1Tgb/x7PEM3XZC4erapFJFrGU9DcVx5pbumegX40j0OUa
575eGpXMfcHd4OHDUgWCh45qtf8cFBke6nmzDIgczz77HdSOmat6FF3vsTx7
muuzGVM5Zj2SJCNIFDKBX7YJB9oBiV43g8BOcpKtm5CaxC621askQuSinLL8
TdnRsFW3CZXAKbEBEroat2Ahg8NdmWYZo3FS0b7eWTqmmcCsQDkotpAJMx2j
tR0LVFIDOlDmAD/StAtgSBj15LrgIjePuYBxUHAuBHo20DDLcZqW2EAGYCJd
eQzBJ6TQxqss909Pcf8HCu2zo2ZEd9rxAUX32kls43rt9ICieh15D/u0hYdU
I4nAfcwbgW1kf+u90SO+91TZjVMFKmL2I97o+mFvhGezqTMj3ljw/cmyO0EL
WYIB8tiINzzCJ97wnXeAOkOIsO/rR70jWr47uHT96BEJI46NjQzLR3VxlWPH
BMD0CJ1OomWqd2R0vXwc+zsy6q3H5eL/+rHw97GRLvb8miIk+NudDsEvcKY0
9YQxiXD4heW+mwQg6JFBfD0gXsMPrw6nXuqPfyaONRqR6NbIiGCVLjeSNX1S
rHBohP2N8Ufidtwq2Ae2iG7Qu2ePz84D/F9KiuzaN7PgT4IlBEXvrVCS/8zI
AwbgmG+7XeKt6R9drlivwMExdk2fIIlrEO9lTRxmsJDkB4f78ko6tfJgRlQ1
0gSqek/SoVqTqILmmkX5osX6OEOjpIaINsLWSJoMfg2ngUjua75fXsdNTnCM
kpZTciFft6juaDpW0C45A44Gl9SoboG2mtb2IQvFn01DMWcaCVOPdMZcbeW9
6Hajkgh824LAFzkCZBqk5WBHmeiOaY/lFMpnS1nwefRuegRdjQyEFbV9Lpbd
YID2PYyG7wsLl9KyX2/pfLQ7k62oqFGZLpL9yri4v4wTehdqudUSQ/BQvGAI
ccVI/06ktPdxPR0VcYnWHLpNj+rnnQt3y/Sz1pCp10mH0RQhuH50jPWavh8R
ilZAzCgl2ylwkN+VZKvLxKxUS4OJv4qTXxeaDPmtafLLxKD1BD0cKZU8jAkI
0DvMFId64J2uHRNd+F5WeUgR4YyMKfiUEaxCgPPdWPFwIDFRPNpL3944aeEm
GNfXLMdk6l/rK8UudfLcyrPbhDJGiD4nkUmOGQaEwFUiLrC5w+tSUDOlUtTY
PBz7TJmcEvx08YoDXhW9oi22vy4FVVMqSZUtXs/O32T/MtPiX/4uEtnk551t
ed6jRdOUYAVPdbeCP4wjNaGZM9yb+ZuCEIi8h32O97qWiVYmWploZaKVyFbw
xQt9fAsfjXFK8EQrE61MtDLRykQrv+Gt8FfZGK+oourJPl5XFL/CehK/32Ev
frp0IPSywsIeTyn4ScZKndKameyJCnXxz6hUj24qRUuUCEq9njFFC7SepDe2
hdFhWdaqF2v3u7di24F2wbgRu4EJsUvbgkgLtl7s8ljIpq0ColeIDcq+Or3m
Qi7r0iQ0YU/0lC306k+L2OK2sMb6+NMStiQukrJU641TtjAQ2YIpE1PSPXZJ
jFXsZFHr8yZELWsLNutWkqhlsYQv9jSnre/LEM2BLoGPVj9Nq221lbbOb5Tp
4x1oXozdH16M3ZoO9WrUR22v3lpw4t861Kq+xKlKSzpgM9pqRwslvrVCW7Up
2osmlCZGUCeUpkJKY3M/7VGahXqrhswWPjwUW62VNDwkASt9eEjNtGJ4SFI6
PoeHMbHPS8STtbBWtw6RW3PVxQJeoR7dMepheQpxVuzJwC/nsuqyYUzuDogY
R7cA2uUtAaFfPEUwUd9PryX0p9+pJ3fDthimJ1IM87ZmM8MvjmxtvAu9iAsm
hL7FQm+z4K0V+oVGD8pIwgxo9JSThOnRn1Z2EkYfBJeehOnxmuWjY5MwMfHG
S3mLTfs9JgHdpBJ0eKpn26NNyETkLpQilBwebehPB0kkvAkDlHL7VOduIvJ1
ZO3qWDfvWOR7advVsS7RMctj8nRsMG3HuvhtzYZZsdDySOGXmtWi2I71xHbs
lRaFPQufbEPgZ02orruGTKhuh6ruQIyGjDQ9rrp6+3Les7blZ3VoxL+25md7
NOrbnZ/VY8t252fjQs/fsPxsTODK/WBw5ETRjdAghH4mjQsSoJNGVab1EiNw
21Z0Aj7xGD3B0NaO1ToAvASgKtFH6WTMxxTB44FUfbMGvFoCgPc3tqPNclBa
R3uTOvoKi+6fKXXfMzcQn94B0lxZU5AgApUAb8IUpNawgXgNW28+r6PswCt0
VWrlvAGFi22cNxCxsx6OaZe3cPKkPfMGSTHyOJ43SBcTh+bpDR5FlLDXDLGO
mNauazQLTRWeTQ/wy2lJoKuPZWVOpejGIkgopzHbltX5WxK5Dl3MDm0eVtsO
j4aKUkIuyy5FtteExHagN6kD8cHeOBdq8dQJoU4jUwMOQq0eVQmJfqUmUpVI
3HfrT69I4p4eU8HEvZgMLDpxf2LejnkyeDCfMZG0z5y0d4q1XigEwngDxAL2
LoRzY87NyXWfaXmMdwiQ9s5yuyze5WalLes5R9rOyU7buZK2UO5oGleTKqc/
jDeWehXKHXV1AHgJnSiijyfk7aO6XnvGROao8MxRKsMefr6nGTHbuTkZ7yOL
TS/WGR31k0LLs9Nd7mbo0/Y567mUtJ6Vn1Zl+E8QotjKcaT+YuVyx5Hi0paM
I2v2S4tqrCeUmjAD4N/gMWQuA4bvUcqJ71EGLOm+2exXnyQzbv7xnBTXZjNd
Sb3Nei4NlWfnpFIZrQXSiqQbSczOdV+ZkXgKEa6bXRwePc9++NwMV8ePCmc7
XCNL+UIGAQyWNfiqmMgThZsUypAQTHUQcVe60h12QWGWwzWNAlCY4qQCaWOu
2RnvI9luZYzipBLs9wUeOaGEEi5dFQXges4kXuzY77nFtJSNtUneKIq1SfeR
QLfGhrsz9WwDN8KzJqRKDnx09cKmzgr3UezvjH89mpZqYZMxbqoZx2pc/1SE
ohErc3BMn1mTw6Nmsg33UTVpXRN6dp2DjJ0zLgl3EXlXFzYnw9X5bXpZni1G
JU7DZw8OsUUOuMw7FR9G3ZTx0ud+qX7NNkolGoLjtol6m0x0adeZA53eUBNK
XPlxMW1hmx2wIXGqJLcmyT3FZ5Lc6eTGiz/7TTJYihfLJWKaNgndFkknI52l
ugYKaKeARmi4KtlRi4G+uShfbTiAc3Rs0OMDRxMwzUoZx4ZHs0nceKHeQQBP
M6RpvDielPqgopA++haIRb/8FjoWmjXpjbrO9ZjD8wiqdddc428L5NXrGTpw
gF8iv/VHHaPH4xv71Zvm3tCxBr7VLX0mTCeHAn7ze5SZ9sSCK9v0Z0QVBZMY
egQdO7Ep6S6fJd7JbjHf4nrduh46lGg/VOhWJRmp0vNqFtS65B2941ZabPaW
DWlCvvak8RvOOVnZCywyc56UjwvkN55JXrF9u3//kiVkwE6V5uh8+e0C00RN
4gKmINBLRkJBfrM/CztghWpfSEB8DZa4XDdzzOIRhrvjj2JgL1jAejMqu6Dc
Gkc83hpdYEHwfMux0DcH3R0cr4BmU9jxEh62Sn+X79jh71m0yFl/J0v0PFb5
hm4fJ+RFg0c3VxpT+fSm6SFsnG6F6kwqgZbJlnZUWK9cs+2bq/t3eEr6OzK2
m+dePkO6/b4VK1aMbd8u7h/ngUhmzf48nV24d69/YGiINHadrpN6smuatMvU
EZ70EpZMz4FNkwqSKvU+I0ajCuxJ/Dj5fIv4nWsxE6FvkXfwQghDJAekYo8z
D5tXEueNjfmPz5qlSeJZFv6nn1CMFK8zHR/ffpkZ1HpVpptMw66Zhw/7T558
ssauN2Zjw9JYeNnvaTGYlGymnCD5gjzry/TLNa2H5AwLJAVMUzTR+atGw79o
3z5nOkOyzj5PKI5s221pyDk8c6a/5P77O56cUL9upIvH5s3zL77rrrKF0gbK
lPKp27twoT+8bVvHU8dFcdfSpf5V113XNguSt/9bV670N6xd27H9F4n3Tu3/
6k2b/DsvuaRj+2/k/zqw/8ZoqoNdSVvJaZWxNSLYDvYdds8448gR/5np0ztP
lULk3CQvVrH1xzuInK109siMGf6iPXs6tv9GkNyB/TcCxQ7svxEZdmD/t69Y
wcoaXPtfVc/Iydm4Zo1/46pVLSandFfCqTPC4PKErVXkrNy61d+5bFnn6Y7d
FRpBcueTYwSZnUQOl645Bw/68I6d2n8jDO6k/t8sz6rI8OrO6z+CdBkZOvS/
qp6Rk7Np9Wr/+iuvbDE5pbsSTt38/fv9R+fOLVvYSidnG501ovqPVV53aM5H
ryPW5rqMebDmN/+JY1ScUw8X5+ioGMFd9VGhGeWEzT76IreWEBPOmBhshKEw
JmU7B4rY/Z8Stpa3vLeA9ZHNznIzcHDOHH/Zzp0Ey0c7ChZz/VMTLJGnzdrT
mhUWY9wQCQv1ZlImLVa1c6HNUKsGc3rpE1tONBUZsT7eYtHHSIT7XSxCwiY7
hWA8mIPVERtJRBSwhDrYKrPaG21WzdIxUedtcvWLdNZwwx9J4mo+42bnKq2P
wk/X2MsJnsnx8ER8l/VIUcrQJXs7NT+fB+1yRnU4PRGiSy5TFGN5mhg3MdcI
iJ2Ym95El8XcWFEbjDqdZOGaSiaLZ6qKdDkXjCxDPhUbiKQ78j1S6S2nk8ue
FnU68ri2DRk7x6+rmZ0sdFx4K539xaRJPpjAGLA2l+caiIllBYmeJLMABkSK
wnFpVYC+Y98ZYVXEVqrlom+k3yPRH/BiTGHElk41g7ycYMeyfUp6Z6LVQzbK
B9lY/RAJcsZRQaybcoiStMPdoYW4WmhdLkC9x475sAMoHiwcoBZmrnkwvmP5
cn/thg3E7w/TElzM0cHMRbbXMdQt3bXLx6ypTh0GdzAjnUTdiJI9pFoZc9KT
0yFpyi/RWaMO70PjnFgjtEtPbGUElW43B4Mf7HhyjJxQ55NjzPZdQeSIsJb9
6u5cEm+js0apzCoiB157HJFo+DZOYnBa6V0Hkxgyu5r7wywvZhq99xB18BCg
GplsrzFuKOZuwTA8l7PPOijevXixj0UREPH0RCe4xsA0zHTAoHTX+GU6iyJQ
cJ0F3CtJsvEdx3AOWFyxZUsW7kcCwc6+ocUi8BU6a8Q97yJ6wWfoOq4Qw+Bc
0t5OAo38PycQyUUkGXGFAKDzCLydzhp1jsNEIAgG4bhCbo3UqQQaHHwn+2xA
BaGK4i6xjKPjaLzDwsTLiAiYHdCNAEoslDcq2fK43HYSa8QSnFgQBeLYFZzY
xbt3+w8vWNChxN5JZ43VhJcSEbqBFRO0xpgsPbF5nEvpvvVOC99XEImIriDk
8K38YeaIYZxBEWrgdouQvI0oBlJATHu2WXnYcRphp90Q/LeqOBuRB7uCr++f
evSoLwZVnUf7Djpr2Pm3EBEYTEAAMOAQ+2waC8bruQYaR2bMmCEva/VAg5MN
F44iQBZVc7LBc5n35WQbmZx8ZGNckZHsNQ9t3JiP7LvprDGRfYlKd0MK2BX8
5XZGcVTbyF6395prCiEbmgpOspEzJ1uPSAXZRtokP9kQ9LaQ/VU6aywlXm7h
dp/FBuQhuwtUpzNk+Ym9h84aHuvNFh5zYo1p1PTERvvyZNoTfHlWKPJUaEW+
JEmH1nCIf2CRI77nl1F0Oy6gdZrUTjgdBe6fWOTx9y2eiINr5MI6REmdCjB6
Ygsw4mq9WbkRt3WGiX+TCuVxjMUx/AUAxni1A2GMLCSyvcRWq1fxVPGQfA2n
ApErujG+XUbgQKGh2FpPzCqJDgQxU12YH37htAbivRZdfiPhgtERRkk6foZB
7TD8chYkcwdkhQ86DJeNgNt7A8ECfd0/f77u6cz8W4fAl672Ry8kb/YcX7NI
0VKCARK4ZuNGAy5jjF4KXHkiENtygIjSp+giu/xR5C46a4Qwv0dYoeSEZYM0
TI2xvyumpELlrX1y4FQRWtzvmd7Fj32acjLsWq0wuDCmwb/DRiD8915vyWiq
PXjVDHjNkWlO5axpl2aFyrkT2ZVnvUAzu+KeVia77qOzyKbCfLPcyxILGzi7
jP1W0rKrjOVjWbiWdSGAnWtRTyvJKH6dzhph4essQxTOMCNZloVhRS9sS2EQ
Y+VlWqrlAk4qVjyz7qezxjjxNWri7ujUqTQQ4sNiGEwEVy3UrvjlcUV5r2mp
lhb44Wts7qt4ZoXyFdwyGom4V1sSLZx3Rp6yUEeWczGcc6yYZ4FCG6JDO7ug
TphEYHEHZxfyrci76uwyhoWu7IpdyJFnTZsDj8pM136DzmJQAuxYvmaxJV2b
B7vK5Kb/lM4as02LVHIKEQ67godZxvRMxxHLvS+iBRgoRuzvEhEgQE6fcmIN
R1UysSWlhxXtuy20v9JSSMJpN7KQ6WmvYKZcQfFNOmvUVrzCkgvjUBi5xNZC
UbwK7LGw92VEEwJjBMjsCtr538zgdJy+f8tC7EKLvnNijX13Oo7YP6OzcO2S
2JdaFJwTa+TcOo7YB03OMmv2EosKc2KNfWo7jtiQBdGkWlryF1lUeLp8qMop
dXU47VzIxXifje9faNFoTruxHrzjaN9LZ4UNZsQusGg0J9ZIbpRMbOk++tt0
FnEpaGcTLhdZFJzTbtRWpKe90uHKdxQUGH9gWO29QNXBoRKKXXE8XWcMvVsL
RfEq8F06i8kM0IWhh/c7RJO+IkHQbqQnOk7f/5LOgijEm8ywP9+SzOTEGgPP
jiP2YTqL4BrEsVH28yzJQL7uyZj26jhi99FZBJiw0mw11HOJCGNZBifWGHh2
HLH76VLoLAiDmIKjv23xXJxeY+/kjqM3ZDE5rzHHLT3XXCXYCEMBDd7W6IcH
J53utUMN7FdiD8+FbSy8CyxJYw6FMYvT6VA8orQAW3iAxTDg5xFZIBPk6uQb
Y+1Od9zfV9INi8domGMpejuJrjNGo51O+9/QpRh0wviBpwjUZlkKYDj5xvi0
4wzgD5T8Qs3ZysmzlcUT64D5awIb+oAUf4JQW7crQ+MP6VLILPoKOmHCzrTE
op1M5mN0KcYasM4QXYwlTleai+EG818nE5n6qLNjyPw7uhQSi2EF/qChpxKZ
CL4Rl7KLOJn6epOKk1nEfqj6K+KNjU8P0gXInYPzcGsYd59MyMHDw9uxi55N
yOnj0ZKQK8mZF7s5a8wuoxxUOEskMhAcwLicpEYIAJH5y1OoT2JPhc4FNbZA
oze24j5AUa/Wjdjl83F2sBtRFkwZvBAGkCwen66CUCDJ7Nmp1DF9VO2ObBUC
EKeirt7IInxeURYvrv9IbSBcw4gcoMJHwP8B2MlUbQo/AYkF7pDa0+gufQzf
udBmFdrhYVn1oL0+XUH7E/a7Bz4JoQSghYVFuQbMKpPbHoZvN67BMVhfhI1s
zfNM6qOeO6i4o2rF5tdPUBuo6MTMGJwTkEVwhv/XIb1dmCagnRZlZoJec93Q
R+cVRzPb3p26ow/gU47+X6kJaDrEjSUfu9gny8bKZs8ioPTJ9IoDdZb5RMqm
NvTRd6EElL/0IGFv+mJx0ifJC8WpiML/hmcr/E/c6r1cxPTcRhJieV5bYRMM
Q6VTMKG47f+7xTH3/diLhV9fCJMEfwEVqCFhayY5JReKK89PvS17QXygJH+3
ng+Rua04JuQv4W4Gv9BlLdEbs0cV3afbmL3wfLzWQLe+dsWZHdlfGiGMkrms
Mi07sm7dLqXfMzTAbev2YtVAz5eVqAa2svRUy06KqoJPuw98sWgjnSIKApzQ
jpWwwaSxiJULlYl0OSYI00U9aywm6d7UYAs/AoOQKvxoFQRI+ohgPxaCag1V
eO+RohIheBm9L31uVCcG4y4RHacmhnYxCpR8XmSHWk0WTebWRbSTdnhEFAUq
utCBopLELBMJkWm6ClEkYp4OY4oNWqp7rItoYvxQJKaLOowiXczEK1swj9Oh
JIhZEDjJDiVBJMJLJaGlPkWUyY0fikR63Y2iTnAxIo0sCnY7nyKxtbAbRZU0
BSID22Ek2KTjeHmHWhPiTs7++fPnjxtyukBJW8ZhJ0nhYGJVdK9bY4JPkiLh
Y+vkjiYChQaQoXREBHctbaf8IMhCr9lipqxFEMFDVrSTCBR1dDwRiEMcidDk
J12vV+/ftGnpwV27ius1pB29ZoVh7k4g4NiaTatXr47sSKj/70zXV0ocT828
hxzfI0QUy6g5haZJNA4DyJe19O4wzBsbGwv4fbgkGJymLKITym7bM70nmVrb
JcVQluO93TJVjv1Ko/d2uzwveTaL8/bs1Gba2tZXU0+ct/VkEtpJZZa9Z8W+
s4La5nnNtopqnlmdxG234imzMWdl4YQW8uLmVBxrDV1npelS5CXsc3OntBx5
D/vcNNHKRCvGCSpch6rDIBsaTTe9t+we0KIEvJBG1VPQOfSIfss6MOXyxa6c
HpnWQ6qRN6Xr8fH6s3looWyc6A9DR4SVxu7EUSCdlITsVZFg2DpjHqtL4hVg
9E6f/lCD+BcuWmG/y8KKBzO9aVj2ZktbJxpy4WkBkgodUsnFxZZGeL60ueCL
Ozh2jIg1ymmHya/XdB4LX8+xEedUP5R8y4JTPfTxJXbFskZJCbpS4zKsryOo
ha7LKk3RbKwZENkW4BQl0dFc7m+C26y6s1Siqi5LTuu1OhzqLts5/SUKwTkj
xBfXZWDzJFeBFZzukUYn3AW9e2UIsE0apkR2X29H9aW3xP5FS0ojJBmhlWM0
0vFCjxXV0niGJte6PoYzGIc2D3NZJxPnaRQOh+/PLCx98XJvoNkTdnnca2lj
zzKUIFpUkpRWKn9vWX2LcxuScZ5Qt7qRcwoeatutVjcmhpzIx0yS/dT7pe/b
bpWxPDJil3jj+TY/0Vu2zEfLRoKa9jSX8WphQq3sftvkRsQ0ZsLHlOl+IRx6
Z8KCrMfKesqEm8MiPU2zjPO8aqJQlCTgcX4lSSGDh0qF1NLGpSpknCCYpb9C
uqhjUhAsvs9csWS+Q0UuImmY6VI/V3w52UF0p5QlujaWT22nLkXztCYFB/9s
1r+fQy0VRg/XukPiQCylxzQsopJ5KCf4GSeBkp/lSGAcV9uoGDbezjF4W2wC
YrLx7Gi5mVKO3ERzoW2ibOMA+0yZDjsnDddsOJyZ5gFF9TryHvbZvlThiFS7
MW9keBibEgR/673RI77383SNbxW4Hhn11o+MsV9iFDs2Qo/kzXSxdmre+tEj
8vafWR55S0zvjlquv9XjhsY/4o2uF02KZun3M8VTdWR0vTcy5tt6tM3o0TAu
03o04o0F3//dct9NotmxEW+YN1uTzfLnUJdqlh6KHBouHTZ63UvHBJjrR70j
Znca3FiAKJ0/7PG4XPxfPxb+PjYiWCxax99fFAV9TUIPYmqWpmzStE2iGBDL
e9ql4Syotcn9TXpfjHu7dfBkX1ViMeD7CF1fl7KA9kfY3xh/PtBG/xV9w7I/
FHgfn50j+P+w0AYph3vTcWOTq0QODxNDeqSqcv2gR3GgGx0joTdEEt6tCNdE
qr+SlH07Tqg1cyljLY1arYcqjaoIrgvR4bdwUIRwcKFgfQoO9+WlkVp5KKP0
ptLfnrDjMhgn3mtUYX2+IZLshkk2ewz73lctqr5joerznAKlfRYZbVBvpZLJ
3hPb+hRrNfeiyyoIFa8/zSOsdUuw8+cZpbdJUbtNRQ15HyW9lA2shJbeEEnM
QMjqkLfQWUi9JIFsi9l5OFIcayRfvEUywd3SBYprcY00zxphsvBIb1qPYu3m
uM9F6YY1Ode/h6n2fYFhytBgs9Qoe4DrJprV08gt8XZGJhjBm9DopApGxsZF
Iau6PEmfrilXP7fp4T6p38xC2wZyvU6aBsdCEKwfHWPGnr4fEXpfwABic6Ri
1gzFnFJ55dviSEl/pSiJ9t01wz6ooFL19HSNYtGlH2Rjf5KsT+kYWd/iSFE1
tdc2BFHicEQ+xjaef7ZBpX5dnRRgTErggYxSkiCQZzsK5BbH59kE/FHL89hn
yjzgZqO9aFRn5kN1i2MzKZj3NwUhEHkP+xzvBaATrUy0MtHKRCu/Ea3gixf6
+BY+GuOU4IlWJlqZaGWilYlWimzlxXTM2K2S6lr6mirYcWV4pbpZWhm1Mzu7
ltZmDpjVhcU9nkb/k8Kv7CmnmcmeXp6Jf8aanuimUrREOYlB49JiWyCO9Ma2
MIrhKv6Za8X63VtZ0ioZ1pdX0QMiVzwPSiIsS9SbLx8QLWiiWyu0hV79ac3V
fMU21seflrClcjGN9VgkpV4Od5paMGViSrrHvq5suX2pbnuN1ZAJbxbgi4E8
rdJX3/S9mcKIp4mFjbrJJOPfby4MjX5EGR0KbzLhC72rtRIcXUmi9uloVV/i
dKglHbCpmKhl0sW3VmirRWngIr2nhpwXHuQQUKUFOaQgpQc51EwrghyS7DKD
HDEr1PogZ6G4XfPputmI3EanrlWrs8PdMXpjeYqx1FSsKTMWCbakAw1zUZHf
FM2U2gdR0B/adagl9CfZ69Iattlp2ZkmMczbWtH2ubwAvl/DoJwA3uhv2QF8
jyZLpQfwDYM7ZQTwfZEtFB7Av4w/tukFaEloNukKHZ7qRb3jKPadSMKnDo92
609Hv0lCE6K7cvtkLCQf1oImuZ6wrWB1R++zlrFjJ+btmLKM5jPydGowbae6
+G3N1lrvZ9Mj9VGgqRLFdiy8vtXs2CssyprFlyzm1LRtUC3cbWUG1Q2N+nYP
qnXH1e5BdZxfa2GGoQqD6heLFkLBC180nhBPJKAibb8cMiV67qadCYLv+gs0
KZw/lBSGtKZjtQ4ALwGoIvp4Qt4+quu1ZxTB4YFUPbN6UW3YIHtrPrMeLwWl
dbQ3qaMvL8ixvlrXv1ZmM8hntDGbIRxoO7MZveIpbchmJDnK0hq2OcjWZjOk
YwwlQg34m5KBKjsZfguofa/hUGJCeDrdgZfTkgBOj1W1MWmxjUWQUFRjPaGc
uxH0ePlbEWMfXXrUTlp+qPXQe5gjJWgwbQd6kzpQlL1/jSaFlciU1PWnVyRT
IpajVi5TIlfpFZwpOSFvx6z3tyFN0h+djViw3mvyvFVMj7xd8NjY33IB2zxq
TsZz58acm20xQPpWedwAzXK7zGan+CxaKyZqaUagtIlaClNKn6glw92KidqG
LtulTNT2crlp/URt4tRUJwzui8+MTC9uRC+3s6sZ57qqAF9CJ4pg8fH5kYzJ
NrQwLRLymnq24dVeZAerng4RjtS2cfKcjOfOjTl3jjRao97oqJ8U0Z+d7vI4
x1reDLscqzcNL4tqoTtCpEqZYReNtWSGvdvgjlPis7Ai3MJn2F2caSuzKeJY
GdmU0DbLXBjl9qJN76UomraIS4tKqTSikhpFZVP6E2zZrZXKokS5CXyPcgVJ
56LcBL7TQKpPUhA3G3FOimul7IbAxHWygEzbJvZZ/BjpPT1rigWf39Oua8vU
u0hUV2bqXfci7Z561/vS7qn3OIfXtoL69ky9x7jL90g9jcrF2M/NynVfYuLm
bLfLoi1o3Wx9ePTcVIfPsx8mKxufRZvtcE1C5CdSDTrFwkDqYmAzkEvFdVoE
25LZw4bB9TZMoQpQdd3SLm8hCO2ZQk0yeC2tRG/tFKqDgbONkWfHnJuV8b6U
A+kz010eOfEmKycYUGQ2RPyrBlN6LIbNoowXPogXoJlvB+GGyUiA1Ixj1MwU
I6FOds7XWM2UgTU5PGo6L9xHEVRdI51dZzNw/K3j1ZkzNJ5ezJzh9Lx9UiCy
7Qzxzxwr5kGsoErm5lnDPJAdn7NTIxUoqw4lFv0HvTecwft30qurPU+YwQLj
e5QlVUPT9PelGaaeleJam+1lbanXUp8lzKPm9URSWzymGXgV8gfHbY7TZnW7
tOvMXGhvqAnlEPjxuHl7m8VdwjWhyvNTNR02r7j5qWnFzKqIKo7ip6ZOLKaD
5cxJ5ZzdW2/e264JqWYzs2B4ufSqr9bCJYOhVZ+RSjTZEcPfpsOzM1wd72HO
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
q+gN/wNuCRxW\
\>"]]
}, {2}]]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1366, 686},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>0.95 Inherited,
FrontEndVersion->"10.1 for Microsoft Windows (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 607, 17, 106, "Title"],
Cell[CellGroupData[{
Cell[1212, 43, 267, 6, 42, "Chapter"],
Cell[1482, 51, 280, 6, 30, "Input"],
Cell[1765, 59, 435, 10, 30, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2237, 74, 292, 6, 42, "Chapter"],
Cell[CellGroupData[{
Cell[2554, 84, 371, 8, 46, "Section"],
Cell[2928, 94, 23460, 492, 1431, "Input",
 InitializationCell->True],
Cell[26391, 588, 634, 15, 51, "Input",
 InitializationCell->True],
Cell[27028, 605, 43487, 713, 1537, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[70540, 1322, 777, 15, 51, "Input"],
Cell[71320, 1339, 228579, 3842, 697, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[299948, 5187, 369, 8, 33, "Section"],
Cell[300320, 5197, 7623, 155, 345, "Input",
 InitializationCell->True],
Cell[307946, 5354, 419, 9, 30, "Input"],
Cell[308368, 5365, 2611, 52, 131, "Input",
 InitializationCell->True],
Cell[310982, 5419, 1143, 25, 71, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[312162, 5449, 446, 8, 33, "Section"],
Cell[312611, 5459, 2927, 53, 299, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[315575, 5517, 626, 11, 33, "Section"],
Cell[316204, 5530, 3833, 80, 211, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[320074, 5615, 480, 9, 33, "Section"],
Cell[320557, 5626, 3729, 67, 142, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[324323, 5698, 549, 10, 33, "Section"],
Cell[324875, 5710, 13653, 328, 590, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[338565, 6043, 619, 10, 33, "Section"],
Cell[339187, 6055, 1253, 23, 48, "Text"],
Cell[340443, 6080, 6184, 166, 294, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[346664, 6251, 210, 5, 33, "Section"],
Cell[CellGroupData[{
Cell[346899, 6260, 229, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[347153, 6269, 225, 5, 26, "Subsubsection"],
Cell[347381, 6276, 4386, 96, 211, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[351804, 6377, 233, 5, 20, "Subsubsection"],
Cell[352040, 6384, 711, 18, 30, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[352800, 6408, 198, 4, 28, "Subsection"],
Cell[353001, 6414, 4019, 88, 231, "Input",
 InitializationCell->True],
Cell[357023, 6504, 742, 16, 30, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[357826, 6527, 374, 7, 32, "Chapter"],
Cell[CellGroupData[{
Cell[358225, 6538, 233, 5, 46, "Section"],
Cell[358461, 6545, 5084, 191, 242, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[363582, 6741, 321, 7, 33, "Section"],
Cell[363906, 6750, 415, 7, 25, "Text"],
Cell[CellGroupData[{
Cell[364346, 6761, 15694, 360, 643, "Input"],
Cell[380043, 7123, 68422, 1138, 1151, 5557, 107, "CachedBoxData", "BoxData", \
"Output"]
}, {2}]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
